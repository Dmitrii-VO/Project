#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –æ—Ñ—Ñ–µ—Ä–æ–≤
"""

import requests
import json
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
BASE_URL = 'http://localhost:5000'
TEST_USER_ID = 373086959  # –í–∞—à Telegram ID

def test_create_offer():
    """–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ñ—Ñ–µ—Ä–∞ —á–µ—Ä–µ–∑ API"""
    print("üß™ –¢–ï–°–¢ –°–û–ó–î–ê–ù–ò–Ø –û–§–§–ï–†–ê")
    print("-" * 40)
    
    offer_data = {
        'title': '–¢–µ—Å—Ç–æ–≤—ã–π –æ—Ñ—Ñ–µ—Ä —á–µ—Ä–µ–∑ API',
        'description': '–û–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –æ—Ñ—Ñ–µ—Ä–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã',
        'content': '–ü–æ–ª–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –æ—Ñ—Ñ–µ—Ä–∞ —Å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º–∏ –∫ —Ä–∞–∑–º–µ—â–µ–Ω–∏—é',
        'price': 2500,
        'currency': 'RUB',
        'category': 'tech',
        'target_audience': 'IT-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã 25-40 –ª–µ—Ç',
        'requirements': '–†–∞–∑–º–µ—â–µ–Ω–∏–µ –≤ —Ç–µ—á–µ–Ω–∏–µ 3 –¥–Ω–µ–π, –±–µ–∑ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è',
        'duration_days': 21,
        'min_subscribers': 500,
        'max_subscribers': 50000,
        'budget_total': 2500
    }
    
    try:
        response = requests.post(
            f'{BASE_URL}/api/offers',
            json=offer_data,
            headers={'X-Telegram-User-Id': str(TEST_USER_ID)}
        )
        
        print(f"Status Code: {response.status_code}")
        result = response.json()
        print(f"Response: {json.dumps(result, indent=2, ensure_ascii=False)}")
        
        if result.get('success'):
            print("‚úÖ –û—Ñ—Ñ–µ—Ä —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
            return result.get('offer_id')
        else:
            print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ñ—Ñ–µ—Ä–∞")
            return None
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return None

def test_get_my_offers():
    """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –º–æ–∏—Ö –æ—Ñ—Ñ–µ—Ä–æ–≤"""
    print("\nüß™ –¢–ï–°–¢ –ü–û–õ–£–ß–ï–ù–ò–Ø –ú–û–ò–• –û–§–§–ï–†–û–í")
    print("-" * 40)
    
    try:
        response = requests.get(
            f'{BASE_URL}/api/offers/my',
            headers={'X-Telegram-User-Id': str(TEST_USER_ID)}
        )
        
        print(f"Status Code: {response.status_code}")
        result = response.json()
        
        if result.get('success'):
            offers = result.get('offers', [])
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –æ—Ñ—Ñ–µ—Ä–æ–≤: {len(offers)}")
            
            for i, offer in enumerate(offers, 1):
                print(f"\nüìã –û—Ñ—Ñ–µ—Ä #{i}:")
                print(f"   ID: {offer['id']}")
                print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {offer['title']}")
                print(f"   –¶–µ–Ω–∞: {offer['price']} {offer['currency']}")
                print(f"   –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {offer['category']}")
                print(f"   –°—Ç–∞—Ç—É—Å: {offer['status']}")
                print(f"   –û—Ç–∫–ª–∏–∫–æ–≤: {offer.get('response_count', 0)}")
            
            return offers
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ñ—Ñ–µ—Ä–æ–≤")
            return []
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return []

def test_get_offer_detail(offer_id):
    """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π –æ—Ñ—Ñ–µ—Ä–∞"""
    if not offer_id:
        return
        
    print(f"\nüß™ –¢–ï–°–¢ –ü–û–õ–£–ß–ï–ù–ò–Ø –î–ï–¢–ê–õ–ï–ô –û–§–§–ï–†–ê {offer_id}")
    print("-" * 40)
    
    try:
        response = requests.get(
            f'{BASE_URL}/api/offers/detail/{offer_id}',
            headers={'X-Telegram-User-Id': str(TEST_USER_ID)}
        )
        
        print(f"Status Code: {response.status_code}")
        result = response.json()
        
        if result.get('success'):
            offer = result.get('offer')
            print("‚úÖ –î–µ—Ç–∞–ª–∏ –æ—Ñ—Ñ–µ—Ä–∞ –ø–æ–ª—É—á–µ–Ω—ã:")
            print(f"   ID: {offer['id']}")
            print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {offer['title']}")
            print(f"   –û–ø–∏—Å–∞–Ω–∏–µ: {offer['description'][:100]}...")
            print(f"   –¶–µ–Ω–∞: {offer['price']} {offer['currency']}")
            print(f"   –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {offer['category']}")
            print(f"   –¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è: {offer.get('target_audience', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')}")
            print(f"   –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è: {offer.get('requirements', '–ù–µ —É–∫–∞–∑–∞–Ω—ã')}")
            print(f"   –î–µ–¥–ª–∞–π–Ω: {offer.get('deadline', '–ù–µ —É–∫–∞–∑–∞–Ω')}")
            print(f"   –°–æ–∑–¥–∞—Ç–µ–ª—å: {offer.get('creator_username', 'N/A')}")
            print(f"   –ë—é–¥–∂–µ—Ç: {offer.get('budget_total', 0)}")
            print(f"   –ü–æ–¥–ø–∏—Å—á–∏–∫–∏: {offer.get('min_subscribers', 0)} - {offer.get('max_subscribers', 0)}")
            return offer
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π –æ—Ñ—Ñ–µ—Ä–∞")
            return None
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return None

def test_direct_function():
    """–¢–µ—Å—Ç –ø—Ä—è–º–æ–≥–æ –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–π –∏–∑ add_offer.py"""
    print("\nüß™ –¢–ï–°–¢ –ü–†–Ø–ú–û–ì–û –í–´–ó–û–í–ê –§–£–ù–ö–¶–ò–ô")
    print("-" * 40)
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –º–æ–¥—É–ª—å
        import sys
        import os
        sys.path.insert(0, os.getcwd())
        
        from add_offer import add_offer, get_user_offers, get_offer_by_id
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        test_data = {
            'title': '–ü—Ä—è–º–æ–π —Ç–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–∏',
            'description': '–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ñ—Ñ–µ—Ä–∞ —á–µ—Ä–µ–∑ –ø—Ä—è–º–æ–π –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏',
            'content': '–ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –æ—Ñ—Ñ–µ—Ä–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è',
            'price': 3000,
            'currency': 'RUB',
            'category': 'business',
            'target_audience': '–ü—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª–∏',
            'requirements': '–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ',
            'duration_days': 30
        }
        
        # –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è
        print("1. –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ñ—Ñ–µ—Ä–∞...")
        result = add_offer(TEST_USER_ID, test_data)
        print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {result.get('success')}")
        
        if result.get('success'):
            offer_id = result.get('offer_id')
            print(f"   –°–æ–∑–¥–∞–Ω –æ—Ñ—Ñ–µ—Ä ID: {offer_id}")
            
            # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞
            print("2. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –æ—Ñ—Ñ–µ—Ä–æ–≤...")
            offers = get_user_offers(TEST_USER_ID)
            print(f"   –ù–∞–π–¥–µ–Ω–æ –æ—Ñ—Ñ–µ—Ä–æ–≤: {len(offers)}")
            
            # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ ID
            print("3. –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ñ—Ñ–µ—Ä–∞ –ø–æ ID...")
            offer_detail = get_offer_by_id(offer_id)
            print(f"   –û—Ñ—Ñ–µ—Ä –Ω–∞–π–¥–µ–Ω: {offer_detail is not None}")
            
            if offer_detail:
                print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {offer_detail['title']}")
                print(f"   –¶–µ–Ω–∞: {offer_detail['price']}")
                
            return True
        else:
            print(f"   –û—à–∏–±–∫–∞: {result.get('error')}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_database_direct():
    """–¢–µ—Å—Ç –ø—Ä—è–º–æ–≥–æ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ –ë–î"""
    print("\nüß™ –¢–ï–°–¢ –ü–†–Ø–ú–û–ì–û –û–ë–†–ê–©–ï–ù–ò–Ø –ö –ë–î")
    print("-" * 40)
    
    try:
        import sqlite3
        
        conn = sqlite3.connect('telegram_mini_app.db')
        cursor = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ñ—Ñ–µ—Ä–æ–≤
        cursor.execute("SELECT COUNT(*) FROM offers")
        count = cursor.fetchone()[0]
        print(f"‚úÖ –í—Å–µ–≥–æ –æ—Ñ—Ñ–µ—Ä–æ–≤ –≤ –ë–î: {count}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 –æ—Ñ—Ñ–µ—Ä–∞
        cursor.execute("""
            SELECT id, title, price, currency, category, status, created_at 
            FROM offers 
            ORDER BY created_at DESC 
            LIMIT 3
        """)
        
        offers = cursor.fetchall()
        print(f"üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ {len(offers)} –æ—Ñ—Ñ–µ—Ä–æ–≤:")
        
        for offer in offers:
            print(f"   ID: {offer[0]} | {offer[1]} | {offer[2]} {offer[3]} | {offer[4]} | {offer[5]}")
        
        conn.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ë–î: {e}")
        return False

def check_server_status():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞"""
    print("üîç –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê –°–ï–†–í–ï–†–ê")
    print("-" * 40)
    
    try:
        response = requests.get(f'{BASE_URL}/health', timeout=5)
        if response.status_code == 200:
            print("‚úÖ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç")
            return True
        else:
            print(f"‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç —Å –∫–æ–¥–æ–º: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
        print("üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: python working_app.py")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üß™ –ü–û–õ–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ò–°–¢–ï–ú–´ –û–§–§–ï–†–û–í")
    print("=" * 60)
    print(f"‚è∞ –í—Ä–µ–º—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print(f"üë§ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {TEST_USER_ID}")
    print(f"üåê –°–µ—Ä–≤–µ—Ä: {BASE_URL}")
    
    # –¢–µ—Å—Ç 1: –ü—Ä—è–º—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ (–±–µ–∑ —Å–µ—Ä–≤–µ—Ä–∞)
    print("\n" + "="*60)
    print("üìù –≠–¢–ê–ü 1: –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ë–ï–ó –°–ï–†–í–ï–†–ê")
    direct_ok = test_direct_function()
    db_ok = test_database_direct()
    
    if not direct_ok:
        print("‚ùå –ë–∞–∑–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ add_offer.py")
        return
    
    # –¢–µ—Å—Ç 2: API —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–µ—Ä
    print("\n" + "="*60)  
    print("üìù –≠–¢–ê–ü 2: –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï API")
    
    server_ok = check_server_status()
    if not server_ok:
        print("‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –ø—Ä—è–º—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏.")
        print("\nüéâ –†–ï–ó–£–õ–¨–¢–ê–¢: –ë–∞–∑–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç!")
        print("üí° –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: python working_app.py")
        return
    
    # API —Ç–µ—Å—Ç—ã
    offer_id = test_create_offer()
    offers = test_get_my_offers() 
    
    if offers and len(offers) > 0:
        test_get_offer_detail(offers[0]['id'])
    elif offer_id:
        test_get_offer_detail(offer_id)
    
    # –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    print("\n" + "="*60)
    print("üéâ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!")
    
    if direct_ok and server_ok:
        print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –æ—Ñ—Ñ–µ—Ä–æ–≤ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—Ç–∞–µ—Ç!")
    elif direct_ok:
        print("‚úÖ –ë–∞–∑–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç")
        print("‚ö†Ô∏è API —Ç—Ä–µ–±—É–µ—Ç –∑–∞–ø—É—â–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞")
    else:
        print("‚ùå –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–∏—Å—Ç–µ–º–æ–π")
    
    print("\nüìã –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:")
    print("1. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω: python working_app.py")
    print("2. –û—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ: http://localhost:5000/offers")
    print("3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Å–æ–∑–¥–∞–Ω–∏–µ –æ—Ñ—Ñ–µ—Ä–æ–≤ —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å")

if __name__ == '__main__':
    main()