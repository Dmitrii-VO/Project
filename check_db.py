# –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª check_db.py –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ –ë–î:

import sqlite3

def check_channels_data():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤ –≤ –±–∞–∑–µ"""
    try:
        conn = sqlite3.connect('telegram_mini_app.db')
        conn.row_factory = sqlite3.Row
        cursor = conn.cursor()
        
        print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã channels:")
        cursor.execute("PRAGMA table_info(channels)")
        columns = cursor.fetchall()
        
        for col in columns:
            print(f"   {col['name']}: {col['type']} (NOT NULL: {col['notnull']})")
        
        print("\nüìä –î–∞–Ω–Ω—ã–µ –∫–∞–Ω–∞–ª–æ–≤:")
        cursor.execute("SELECT id, title, username, subscriber_count FROM channels LIMIT 5")
        channels = cursor.fetchall()
        
        if not channels:
            print("   ‚ùå –ö–∞–Ω–∞–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
        else:
            for channel in channels:
                print(f"   ID: {channel['id']}")
                print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {channel['title']}")
                print(f"   Username: {channel['username']}")
                print(f"   –ü–æ–¥–ø–∏—Å—á–∏–∫–∏: {channel['subscriber_count']} (—Ç–∏–ø: {type(channel['subscriber_count'])})")
                print("   " + "-" * 40)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –∫–∞–Ω–∞–ª—ã –Ω–∞ null –∑–Ω–∞—á–µ–Ω–∏—è
        cursor.execute("SELECT COUNT(*) FROM channels WHERE subscriber_count IS NULL")
        null_count = cursor.fetchone()[0]
        print(f"\nüö® –ö–∞–Ω–∞–ª–æ–≤ —Å NULL subscriber_count: {null_count}")
        
        cursor.execute("SELECT COUNT(*) FROM channels WHERE subscriber_count = 0")
        zero_count = cursor.fetchone()[0]
        print(f"‚ö†Ô∏è –ö–∞–Ω–∞–ª–æ–≤ —Å subscriber_count = 0: {zero_count}")
        
        cursor.execute("SELECT COUNT(*) FROM channels WHERE subscriber_count > 0")
        positive_count = cursor.fetchone()[0]
        print(f"‚úÖ –ö–∞–Ω–∞–ª–æ–≤ —Å subscriber_count > 0: {positive_count}")
        
        conn.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ë–î: {e}")

if __name__ == "__main__":
    check_channels_data()