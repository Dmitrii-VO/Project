#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤
"""

import sqlite3
from datetime import datetime

DATABASE_PATH = 'telegram_mini_app.db'


def check_contracts():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã"""

    try:
        conn = sqlite3.connect(DATABASE_PATH)
        conn.row_factory = sqlite3.Row
        cursor = conn.cursor()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É contracts
        cursor.execute("SELECT name FROM sqlite_master WHERE type='table' AND name='contracts'")
        if not cursor.fetchone():
            print("‚ùå –¢–∞–±–ª–∏—Ü–∞ 'contracts' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
            return

        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã
        cursor.execute('''
                       SELECT c.*,
                              o.title        as offer_title,
                              or_resp.status as response_status
                       FROM contracts c
                                JOIN offers o ON c.offer_id = o.id
                                JOIN offer_responses or_resp ON c.response_id = or_resp.id
                       ORDER BY c.created_at DESC
                       ''')

        contracts = cursor.fetchall()

        print(f"üìã –ù–∞–π–¥–µ–Ω–æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤: {len(contracts)}")
        print("-" * 80)

        for contract in contracts:
            print(f"üÜî ID: {contract['id']}")
            print(f"üìù –û—Ñ—Ñ–µ—Ä: {contract['offer_title']}")
            print(f"üí∞ –¶–µ–Ω–∞: {contract['price']} RUB")
            print(f"üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞: {contract['status']}")
            print(f"üìä –°—Ç–∞—Ç—É—Å –æ—Ç–∫–ª–∏–∫–∞: {contract['response_status']}")
            print(f"‚è∞ –°–æ–∑–¥–∞–Ω: {contract['created_at']}")
            print(f"üìÖ –î–µ–¥–ª–∞–π–Ω —Ä–∞–∑–º–µ—â–µ–Ω–∏—è: {contract['placement_deadline']}")
            print("-" * 40)

        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º
        cursor.execute('''
                       SELECT status, COUNT(*) as count
                       FROM contracts
                       GROUP BY status
                       ''')

        status_stats = cursor.fetchall()

        print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤:")
        for stat in status_stats:
            print(f"   {stat['status']}: {stat['count']}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤—è–∑–∏
        cursor.execute('''
                       SELECT (SELECT COUNT(*) FROM contracts)                                 as total_contracts,
                              (SELECT COUNT(*) FROM offer_responses WHERE status = 'accepted') as accepted_responses,
                              (SELECT COUNT(*) FROM offers WHERE status = 'in_progress')       as in_progress_offers
                       ''')

        stats = cursor.fetchone()

        print(f"\nüîó –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤—è–∑–µ–π:")
        print(f"   –ö–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤: {stats['total_contracts']}")
        print(f"   –ü—Ä–∏–Ω—è—Ç—ã—Ö –æ—Ç–∫–ª–∏–∫–æ–≤: {stats['accepted_responses']}")
        print(f"   –û—Ñ—Ñ–µ—Ä–æ–≤ –≤ —Ä–∞–±–æ—Ç–µ: {stats['in_progress_offers']}")

        if stats['total_contracts'] == stats['accepted_responses']:
            print("‚úÖ –ö–∞–∂–¥–æ–º—É –ø—Ä–∏–Ω—è—Ç–æ–º—É –æ—Ç–∫–ª–∏–∫—É —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∫–æ–Ω—Ç—Ä–∞–∫—Ç")
        else:
            print("‚ö†Ô∏è  –ù–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ –∏ –ø—Ä–∏–Ω—è—Ç—ã—Ö –æ—Ç–∫–ª–∏–∫–æ–≤")

        conn.close()

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")


if __name__ == "__main__":
    check_contracts()