#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å API –ø–æ–ª—É—á–µ–Ω–∏—è –º–æ–∏—Ö –æ—Ñ—Ñ–µ—Ä–æ–≤
"""

def test_my_offers_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º API –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ñ—Ñ–µ—Ä–æ–≤"""
    import requests
    
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê API /api/offers/my")
    print("-" * 40)
    
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏
        response = requests.get(
            'http://localhost:5000/api/offers/my',
            headers={
                'X-Telegram-User-Id': '373086959',
                'Content-Type': 'application/json'
            }
        )
        
        print(f"Status: {response.status_code}")
        print(f"Response: {response.text}")
        
        if response.status_code != 200:
            print("‚ùå API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—à–∏–±–∫—É!")
            return False
        
        data = response.json()
        if data.get('success'):
            print(f"‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–∞–π–¥–µ–Ω–æ –æ—Ñ—Ñ–µ—Ä–æ–≤: {len(data.get('offers', []))}")
            return True
        else:
            print(f"‚ùå API –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É: {data.get('error')}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        return False

def check_server_logs():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"""
    print("\nüìã –ü–†–û–í–ï–†–ö–ê –°–ï–†–í–ï–†–ê")
    print("-" * 40)
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç
        import requests
        response = requests.get('http://localhost:5000/health')
        if response.status_code == 200:
            print("‚úÖ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print(f"‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç —Å –∫–æ–¥–æ–º: {response.status_code}")
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º debug API
        debug_response = requests.get(
            'http://localhost:5000/api/offers/debug/user',
            headers={'X-Telegram-User-Id': '373086959'}
        )
        
        if debug_response.status_code == 200:
            debug_data = debug_response.json()
            print(f"‚úÖ Debug API —Ä–∞–±–æ—Ç–∞–µ—Ç, user_id: {debug_data.get('user_id')}")
        else:
            print(f"‚ùå Debug API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {debug_response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞: {e}")

def fix_offers_js():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ–º JavaScript –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞"""
    
    js_fix = '''
// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è app/static/js/offers.js
// –î–æ–±–∞–≤—å—Ç–µ —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è user_id

function getTelegramUserId() {
    // –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–∑ Telegram WebApp
    if (window.Telegram && window.Telegram.WebApp && window.Telegram.WebApp.initDataUnsafe) {
        const user = window.Telegram.WebApp.initDataUnsafe.user;
        if (user && user.id) {
            return user.id.toString();
        }
    }
    
    // Fallback –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    return '373086959';
}

// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ñ—Ñ–µ—Ä–æ–≤
async function loadMyOffers() {
    console.log('üìã –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–∏—Ö –æ—Ñ—Ñ–µ—Ä–æ–≤...');
    const container = document.getElementById('offersGrid');

    if (!container) {
        console.error('‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä offersGrid –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return;
    }

    try {
        showOffersLoading();

        const response = await fetch('/api/offers/my', {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json',
                'X-Telegram-User-Id': getTelegramUserId()
            }
        });

        console.log('API Response Status:', response.status);
        
        if (!response.ok) {
            throw new Error(`HTTP ${response.status}: ${response.statusText}`);
        }

        const result = await response.json();
        console.log('API Response Data:', result);

        if (result.success && result.offers && result.offers.length > 0) {
            console.log('‚úÖ –û—Ñ—Ñ–µ—Ä—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', result.offers.length);
            renderOffers(result.offers);
        } else {
            console.log('‚ÑπÔ∏è –û—Ñ—Ñ–µ—Ä–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
            showEmptyOffersState();
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ñ—Ñ–µ—Ä–æ–≤:', error);
        showOffersError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ñ—Ñ–µ—Ä–æ–≤: ' + error.message);
    }
}
'''
    
    print("\nüîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï JAVASCRIPT")
    print("-" * 40)
    print("–î–æ–±–∞–≤—å—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –≤ app/static/js/offers.js:")
    print(js_fix)

def create_temp_fix():
    """–°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ API"""
    print("\nüõ†Ô∏è –°–û–ó–î–ê–ù–ò–ï –í–†–ï–ú–ï–ù–ù–û–ì–û –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø")
    print("-" * 40)
    
    temp_api_code = '''
# –í—Ä–µ–º–µ–Ω–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è app/api/offers.py
# –ó–∞–º–µ–Ω–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é get_my_offers –Ω–∞ —ç—Ç—É –≤–µ—Ä—Å–∏—é:

@offers_bp.route('/my', methods=['GET'])
def get_my_offers():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –º–æ–∏—Ö –æ—Ñ—Ñ–µ—Ä–æ–≤ - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º user_id
        telegram_user_id = get_user_id_from_request()
        if not telegram_user_id:
            return jsonify({
                'success': False, 
                'error': '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
                'debug_headers': dict(request.headers)
            }), 400

        status = request.args.get('status')

        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –Ω–∞–ø—Ä—è–º—É—é
        try:
            import sys
            import os
            sys.path.insert(0, os.getcwd())
            from add_offer import get_user_offers
            
            offers = get_user_offers(telegram_user_id, status)
            
            return jsonify({
                'success': True, 
                'offers': offers, 
                'count': len(offers),
                'user_id': telegram_user_id
            })

        except ImportError as e:
            logger.error(f"–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ get_user_offers: {e}")
            return jsonify({
                'success': False,
                'error': f'–ú–æ–¥—É–ª—å —Å–∏—Å—Ç–µ–º—ã –æ—Ñ—Ñ–µ—Ä–æ–≤ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {str(e)}'
            }), 503
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ get_user_offers: {e}")
            return jsonify({
                'success': False,
                'error': f'–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ñ—Ñ–µ—Ä–æ–≤: {str(e)}'
            }), 500

    except Exception as e:
        logger.error(f"–û–±—â–∞—è –æ—à–∏–±–∫–∞ –≤ get_my_offers: {e}")
        return jsonify({
            'success': False, 
            'error': f'–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {str(e)}'
        }), 500
'''
    
    print("–ó–∞–º–µ–Ω–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é get_my_offers –≤ app/api/offers.py –Ω–∞:")
    print(temp_api_code)

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏"""
    print("üîß –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–†–û–ë–õ–ï–ú–´ –° –û–¢–û–ë–†–ê–ñ–ï–ù–ò–ï–ú –û–§–§–ï–†–û–í")
    print("=" * 60)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º API
    api_works = test_my_offers_api()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ä–≤–µ—Ä
    check_server_logs()
    
    if not api_works:
        print("\n‚ùå –ü–†–û–ë–õ–ï–ú–ê –í API!")
        print("–ù—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –∫–æ–¥ —Å–µ—Ä–≤–µ—Ä–∞.")
        create_temp_fix()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ JS
    fix_offers_js()
    
    print("\nüéØ –ü–õ–ê–ù –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:")
    print("1. –ò—Å–ø—Ä–∞–≤—å—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é get_my_offers –≤ app/api/offers.py")
    print("2. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: python working_app.py")
    print("3. –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
    print("4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ –Ω–∞ –æ—à–∏–±–∫–∏")

if __name__ == '__main__':
    main()
