#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã channels
"""

import os
import sqlite3

DATABASE_PATH = 'telegram_mini_app.db'

def check_channels_table_structure():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã channels"""
    
    print("üîç –ü–†–û–í–ï–†–ö–ê –°–¢–†–£–ö–¢–£–†–´ –¢–ê–ë–õ–ò–¶–´ CHANNELS")
    print("=" * 50)
    
    if not os.path.exists(DATABASE_PATH):
        print(f"‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {DATABASE_PATH}")
        return False
    
    try:
        conn = sqlite3.connect(DATABASE_PATH)
        cursor = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
        cursor.execute("""
            SELECT name FROM sqlite_master 
            WHERE type='table' AND name='channels'
        """)
        
        if not cursor.fetchone():
            print("‚ùå –¢–∞–±–ª–∏—Ü–∞ 'channels' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
            return False
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
        cursor.execute("PRAGMA table_info(channels)")
        columns = cursor.fetchall()
        
        print("üìã –°–¢–†–£–ö–¢–£–†–ê –¢–ê–ë–õ–ò–¶–´ 'channels':")
        print("-" * 50)
        print(f"{'#':<3} {'–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–ª—è':<25} {'–¢–∏–ø':<15} {'NOT NULL':<10} {'–ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é'}")
        print("-" * 50)
        
        for col in columns:
            cid, name, data_type, not_null, default_value, pk = col
            not_null_str = "YES" if not_null else "NO"
            default_str = str(default_value) if default_value else ""
            print(f"{cid:<3} {name:<25} {data_type:<15} {not_null_str:<10} {default_str}")
        
        print("-" * 50)
        print(f"–í—Å–µ–≥–æ –ø–æ–ª–µ–π: {len(columns)}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
        cursor.execute("SELECT COUNT(*) FROM channels")
        count = cursor.fetchone()[0]
        print(f"–ó–∞–ø–∏—Å–µ–π –≤ —Ç–∞–±–ª–∏—Ü–µ: {count}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–∏–º–µ—Ä–æ–≤ –∑–∞–ø–∏—Å–µ–π –µ—Å–ª–∏ –µ—Å—Ç—å
        if count > 0:
            print(f"\nüìÑ –ü–†–ò–ú–ï–†–´ –ó–ê–ü–ò–°–ï–ô (–ø–µ—Ä–≤—ã–µ 3):")
            cursor.execute("SELECT * FROM channels LIMIT 3")
            records = cursor.fetchall()
            
            for i, record in enumerate(records, 1):
                print(f"\n–ó–∞–ø–∏—Å—å {i}:")
                for j, (col_info, value) in enumerate(zip(columns, record)):
                    col_name = col_info[1]
                    print(f"  {col_name}: {value}")
        
        conn.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

if __name__ == '__main__':
    check_channels_table_structure()