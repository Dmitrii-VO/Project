# enhanced_api_routes.py - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è
"""
–ú–æ–¥—É–ª—å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã—Ö API –º–∞—Ä—à—Ä—É—Ç–æ–≤ –¥–ª—è Telegram Mini App
–°–æ–¥–µ—Ä–∂–∏—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
"""

import logging
from flask import Flask

logger = logging.getLogger(__name__)


def add_enhanced_routes(app: Flask = None):
    """
    –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤ –∫ Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é

    Args:
        app: –≠–∫–∑–µ–º–ø–ª—è—Ä Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)

    Returns:
        bool: True –µ—Å–ª–∏ –º–∞—Ä—à—Ä—É—Ç—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ
    """
    try:
        if app is None:
            logger.warning("Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–æ –≤ add_enhanced_routes")
            return False

        logger.info("üîó –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã—Ö API –º–∞—Ä—à—Ä—É—Ç–æ–≤...")

        # –°—á–µ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
        routes_added = 0

        # === –ë–ê–ó–û–í–´–ï –†–ê–°–®–ò–†–ï–ù–ù–´–ï –ú–ê–†–®–†–£–¢–´ ===

        @app.route('/api/enhanced/status')
        def enhanced_status():
            """–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã"""
            from flask import jsonify
            import os

            return jsonify({
                'status': 'enhanced_active',
                'version': '2.0',
                'features': {
                    'enhanced_routes': True,
                    'api_extended': True,
                    'telegram_integration': os.environ.get('BOT_TOKEN') is not None
                },
                'message': '–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã –∞–∫—Ç–∏–≤–Ω—ã'
            })

        routes_added += 1

        @app.route('/api/enhanced/info')
        def enhanced_info():
            """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö"""
            from flask import jsonify

            return jsonify({
                'enhanced_features': [
                    '–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞',
                    '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ',
                    '–°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π',
                    '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –≤—ã–ø–ª–∞—Ç—ã'
                ],
                'api_version': '2.0',
                'documentation': '/api/enhanced/docs'
            })

        routes_added += 1

        @app.route('/api/enhanced/docs')
        def enhanced_docs():
            """–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º API"""
            from flask import render_template_string

            docs_html = '''
            <!DOCTYPE html>
            <html>
            <head>
                <title>Enhanced API Documentation</title>
                <style>
                    body { font-family: Arial, sans-serif; max-width: 800px; margin: 0 auto; padding: 20px; }
                    .endpoint { border: 1px solid #ddd; margin: 10px 0; padding: 15px; border-radius: 5px; }
                    .method { background: #007bff; color: white; padding: 3px 8px; border-radius: 3px; font-size: 12px; }
                    pre { background: #f8f9fa; padding: 10px; border-radius: 3px; overflow-x: auto; }
                </style>
            </head>
            <body>
                <h1>üöÄ Enhanced API Documentation</h1>

                <div class="endpoint">
                    <h3><span class="method">GET</span> /api/enhanced/status</h3>
                    <p>–ü–æ–ª—É—á–∏—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã</p>
                    <pre>{"status": "enhanced_active", "version": "2.0"}</pre>
                </div>

                <div class="endpoint">
                    <h3><span class="method">GET</span> /api/enhanced/info</h3>
                    <p>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö</p>
                </div>

                <div class="endpoint">
                    <h3><span class="method">GET</span> /api/enhanced/health</h3>
                    <p>–î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã</p>
                </div>

                <p><a href="/">‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é</a></p>
            </body>
            </html>
            '''

            return render_template_string(docs_html)

        routes_added += 1

        @app.route('/api/enhanced/health')
        def enhanced_health():
            """–î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã"""
            from flask import jsonify
            import os

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
            components = {
                'database': os.path.exists('telegram_mini_app.db'),
                'config': os.path.exists('.env'),
                'bot_token': os.environ.get('BOT_TOKEN') is not None,
                'telegram_id': os.environ.get('YOUR_TELEGRAM_ID') is not None
            }

            all_healthy = all(components.values())

            return jsonify({
                'overall_status': 'healthy' if all_healthy else 'degraded',
                'components': components,
                'timestamp': str(datetime.now()),
                'version': '2.0'
            }), 200 if all_healthy else 503

        routes_added += 1

        # === –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –° –°–£–©–ï–°–¢–í–£–Æ–©–ò–ú–ò –°–ò–°–¢–ï–ú–ê–ú–ò ===

        try:
            # –ü—ã—Ç–∞–µ–º—Å—è –¥–æ–±–∞–≤–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç—ã –æ—Ñ—Ñ–µ—Ä–æ–≤ –µ—Å–ª–∏ —Å–∏—Å—Ç–µ–º–∞ –¥–æ—Å—Ç—É–ø–Ω–∞
            from add_offer import get_user_offers

            @app.route('/api/enhanced/offers/summary')
            def offers_summary():
                """–ö—Ä–∞—Ç–∫–∞—è —Å–≤–æ–¥–∫–∞ –ø–æ –æ—Ñ—Ñ–µ—Ä–∞–º"""
                from flask import jsonify, request

                try:
                    user_id = request.args.get('user_id', type=int)
                    if not user_id:
                        return jsonify({'error': 'user_id –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω'}), 400

                    offers = get_user_offers(user_id)

                    summary = {
                        'total_offers': len(offers) if offers else 0,
                        'active_offers': len([o for o in offers if o.get('status') == 'active']) if offers else 0,
                        'user_id': user_id
                    }

                    return jsonify(summary)

                except Exception as e:
                    return jsonify({'error': str(e)}), 500

            routes_added += 1
            logger.info("‚úÖ –ú–∞—Ä—à—Ä—É—Ç—ã –æ—Ñ—Ñ–µ—Ä–æ–≤ –¥–æ–±–∞–≤–ª–µ–Ω—ã")

        except ImportError:
            logger.warning("‚ö†Ô∏è –°–∏—Å—Ç–µ–º–∞ –æ—Ñ—Ñ–µ—Ä–æ–≤ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤")

        # === –†–ï–ó–£–õ–¨–¢–ê–¢ ===

        logger.info(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {routes_added} —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤")
        return True

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤: {e}")
        return False


# –î–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
def add_enhanced_routes_fallback():
    """–ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Å–ª—É—á–∞–µ–≤ –∫–æ–≥–¥–∞ Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ"""
    logger.warning("‚ö†Ô∏è add_enhanced_routes –≤—ã–∑–≤–∞–Ω–∞ –±–µ–∑ Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
    return None


# –ò–º–ø–æ—Ä—Ç datetime –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –º–∞—Ä—à—Ä—É—Ç–∞—Ö
from datetime import datetime