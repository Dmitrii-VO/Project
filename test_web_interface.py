#!/usr/bin/env python3
"""
–§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –æ—Ñ—Ñ–µ—Ä–æ–≤
"""

import requests
import time
from datetime import datetime

BASE_URL = 'http://localhost:5000'

def check_web_pages():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü"""
    print("üåê –ü–†–û–í–ï–†–ö–ê –í–ï–ë-–°–¢–†–ê–ù–ò–¶")
    print("-" * 40)
    
    pages = {
        '–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—Ñ—Ñ–µ—Ä–æ–≤': '/offers',
        '–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –æ—Ñ—Ñ–µ—Ä–æ–≤': '/offers/available',
        '–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞': '/',
        '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞': '/analytics',
        '–ö–∞–Ω–∞–ª—ã': '/channels'
    }
    
    for page_name, url in pages.items():
        try:
            response = requests.get(f'{BASE_URL}{url}', timeout=10)
            if response.status_code == 200:
                print(f"   ‚úÖ {page_name}: –¥–æ—Å—Ç—É–ø–Ω–∞")
            else:
                print(f"   ‚ö†Ô∏è {page_name}: –∫–æ–¥ {response.status_code}")
        except Exception as e:
            print(f"   ‚ùå {page_name}: –æ—à–∏–±–∫–∞ - {e}")

def test_web_offer_creation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –æ—Ñ—Ñ–µ—Ä–∞ —á–µ—Ä–µ–∑ –≤–µ–±-—Ñ–æ—Ä–º—É (–∏–º–∏—Ç–∞—Ü–∏—è)"""
    print("\nüéØ –¢–ï–°–¢ –°–û–ó–î–ê–ù–ò–Ø –ß–ï–†–ï–ó –í–ï–ë-–§–û–†–ú–£")
    print("-" * 40)
    
    # –ò–º–∏—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã –∫–∞–∫ —ç—Ç–æ –¥–µ–ª–∞–µ—Ç —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥
    form_data = {
        'title': '–í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Ç–µ—Å—Ç',
        'description': '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è —á–µ—Ä–µ–∑ –≤–µ–±-—Ñ–æ—Ä–º—É',
        'content': '–ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –æ—Ñ—Ñ–µ—Ä–∞ —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å',
        'price': 1800,
        'currency': 'RUB',
        'category': 'lifestyle',
        'target_audience': '–ú–æ–ª–æ–¥–µ–∂—å 18-35',
        'requirements': '–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç, –±—ã—Å—Ç—Ä–æ–µ —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ',
        'duration_days': 14,
        'min_subscribers': 1000,
        'max_subscribers': 50000
    }
    
    try:
        response = requests.post(
            f'{BASE_URL}/api/offers',
            json=form_data,
            headers={
                'X-Telegram-User-Id': '373086959',
                'Content-Type': 'application/json'
            }
        )
        
        if response.status_code == 201:
            data = response.json()
            print(f"   ‚úÖ –û—Ñ—Ñ–µ—Ä —Å–æ–∑–¥–∞–Ω: ID {data.get('offer_id')}")
            print(f"   üìÖ –î–µ–¥–ª–∞–π–Ω: {data.get('deadline')}")
            return data.get('offer_id')
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.status_code} - {response.text}")
            return None
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return None

def check_offers_statistics():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ—Ñ—Ñ–µ—Ä–æ–≤"""
    print("\nüìä –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–ò–°–¢–ò–ö–ò")
    print("-" * 40)
    
    try:
        response = requests.get(
            f'{BASE_URL}/api/offers/stats',
            headers={'X-Telegram-User-Id': '373086959'}
        )
        
        if response.status_code == 200:
            stats = response.json().get('stats', {})
            print(f"   üìã –í—Å–µ–≥–æ –æ—Ñ—Ñ–µ—Ä–æ–≤: {stats.get('total_offers', 0)}")
            print(f"   üéØ –ê–∫—Ç–∏–≤–Ω—ã—Ö –æ—Ñ—Ñ–µ—Ä–æ–≤: {stats.get('active_offers', 0)}")
            print(f"   üí∞ –û–±—â–∞—è —Å—É–º–º–∞: {stats.get('total_spent', 0)} —Ä—É–±")
            print(f"   üìù –û—Ç–∫–ª–∏–∫–æ–≤: {stats.get('total_responses', 0)}")
            print(f"   ‚úÖ –ü—Ä–∏–Ω—è—Ç—ã—Ö: {stats.get('accepted_responses', 0)}")
            return True
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def check_available_offers():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –æ—Ñ—Ñ–µ—Ä—ã –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ –∫–∞–Ω–∞–ª–æ–≤"""
    print("\nüé™ –ü–†–û–í–ï–†–ö–ê –î–û–°–¢–£–ü–ù–´–• –û–§–§–ï–†–û–í")
    print("-" * 40)
    
    try:
        response = requests.get(f'{BASE_URL}/api/offers/available')
        
        if response.status_code == 200:
            data = response.json()
            offers = data.get('offers', [])
            print(f"   üìã –ù–∞–π–¥–µ–Ω–æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –æ—Ñ—Ñ–µ—Ä–æ–≤: {len(offers)}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
            for i, offer in enumerate(offers[:3], 1):
                print(f"   {i}. {offer['title']} - {offer['price']} {offer['currency']}")
                print(f"      –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {offer.get('category', 'N/A')}")
                print(f"      –û—Ç–∫–ª–∏–∫–æ–≤: {offer.get('response_count', 0)}")
            
            return len(offers)
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
            return 0
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        return 0

def test_offer_detail():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª–µ–π –æ—Ñ—Ñ–µ—Ä–∞"""
    print("\nüîç –¢–ï–°–¢ –î–ï–¢–ê–õ–ï–ô –û–§–§–ï–†–ê")
    print("-" * 40)
    
    # –ë–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–æ–∑–¥–∞–Ω–Ω—ã–π –æ—Ñ—Ñ–µ—Ä (ID 4)
    offer_id = 4
    
    try:
        response = requests.get(
            f'{BASE_URL}/api/offers/detail/{offer_id}',
            headers={'X-Telegram-User-Id': '373086959'}
        )
        
        if response.status_code == 200:
            data = response.json()
            if data.get('success'):
                offer = data.get('offer')
                print(f"   ‚úÖ –î–µ—Ç–∞–ª–∏ –æ—Ñ—Ñ–µ—Ä–∞ ID {offer_id}:")
                print(f"      –ù–∞–∑–≤–∞–Ω–∏–µ: {offer['title']}")
                print(f"      –°–æ–∑–¥–∞—Ç–µ–ª—å: {offer.get('creator_username', 'N/A')}")
                print(f"      –ë—é–¥–∂–µ—Ç: {offer.get('budget_total', 0)}")
                print(f"      –ü–æ–¥–ø–∏—Å—á–∏–∫–∏: {offer.get('min_subscribers')}-{offer.get('max_subscribers')}")
                return True
            else:
                print(f"   ‚ùå –û—à–∏–±–∫–∞: {data.get('error')}")
                return False
        else:
            print(f"   ‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def final_summary():
    """–§–∏–Ω–∞–ª—å–Ω–∞—è —Å–≤–æ–¥–∫–∞"""
    print("\n" + "=" * 60)
    print("üèÜ –§–ò–ù–ê–õ–¨–ù–ê–Ø –°–í–û–î–ö–ê –°–ò–°–¢–ï–ú–´ –û–§–§–ï–†–û–í")
    print("=" * 60)
    
    features = [
        "‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ñ—Ñ–µ—Ä–æ–≤ —á–µ—Ä–µ–∑ API",
        "‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –º–æ–∏—Ö –æ—Ñ—Ñ–µ—Ä–æ–≤", 
        "‚úÖ –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—Ñ—Ñ–µ—Ä–∞—Ö",
        "‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Ñ—Ñ–µ—Ä–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
        "‚úÖ –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –æ—Ñ—Ñ–µ—Ä–æ–≤",
        "‚úÖ –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è",
        "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å –ø–æ–ª–Ω–æ–π —Å—Ö–µ–º–æ–π",
        "‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫",
        "‚úÖ JSON metadata –¥–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö",
        "‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —á–µ—Ä–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∏"
    ]
    
    print("\nüìã –†–ï–ê–õ–ò–ó–û–í–ê–ù–ù–´–ï –§–£–ù–ö–¶–ò–ò:")
    for feature in features:
        print(f"   {feature}")
    
    print("\nüéØ –°–õ–ï–î–£–Æ–©–ò–ï –í–û–ó–ú–û–ñ–ù–û–°–¢–ò:")
    print("   üîÑ –°–∏—Å—Ç–µ–º–∞ –æ—Ç–∫–ª–∏–∫–æ–≤ –Ω–∞ –æ—Ñ—Ñ–µ—Ä—ã")
    print("   üí≥ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –ø–ª–∞—Ç–µ–∂–µ–π")
    print("   üì± Telegram –±–æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
    print("   üìä –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞")
    print("   üîç –ü–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –æ—Ñ—Ñ–µ—Ä–æ–≤")
    
    print("\nüöÄ –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï:")
    print("   1. –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://localhost:5000/offers")
    print("   2. API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: /api/offers/debug/user")
    print("   3. –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ñ—Ñ–µ—Ä–æ–≤: POST /api/offers")
    print("   4. –ú–æ–∏ –æ—Ñ—Ñ–µ—Ä—ã: GET /api/offers/my")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üéØ –§–ò–ù–ê–õ–¨–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ò–°–¢–ï–ú–´ –û–§–§–ï–†–û–í")
    print("=" * 60)
    print(f"‚è∞ –í—Ä–µ–º—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü—ã
    check_web_pages()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —á–µ—Ä–µ–∑ –≤–µ–±-—Ñ–æ—Ä–º—É
    new_offer_id = test_web_offer_creation()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    stats_ok = check_offers_statistics()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –æ—Ñ—Ñ–µ—Ä—ã
    available_count = check_available_offers()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–µ—Ç–∞–ª–∏ –æ—Ñ—Ñ–µ—Ä–∞
    detail_ok = test_offer_detail()
    
    # –§–∏–Ω–∞–ª—å–Ω–∞—è —Å–≤–æ–¥–∫–∞
    final_summary()
    
    # –†–µ–∑—É–ª—å—Ç–∞—Ç
    if new_offer_id and stats_ok and available_count > 0 and detail_ok:
        print(f"\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        print(f"üéØ –°–æ–∑–¥–∞–Ω–æ {available_count} –æ—Ñ—Ñ–µ—Ä–æ–≤, —Å–∏—Å—Ç–µ–º–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—Ç–∞–µ—Ç!")
    else:
        print(f"\n‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏, –Ω–æ –æ—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç–∞–µ—Ç")

if __name__ == '__main__':
    main()
