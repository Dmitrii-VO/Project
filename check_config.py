#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–∏—Å—Ç–µ–º—ã –æ—Ñ—Ñ–µ—Ä–æ–≤ –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–æ–º
"""

import os
import sys
from dotenv import load_dotenv

def check_environment():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    print("üîç –ü–†–û–í–ï–†–ö–ê –ü–ï–†–ï–ú–ï–ù–ù–´–• –û–ö–†–£–ñ–ï–ù–ò–Ø")
    print("-" * 50)
    
    load_dotenv()
    
    # –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –æ—Ñ—Ñ–µ—Ä–æ–≤
    critical_vars = {
        'BOT_TOKEN': os.getenv('BOT_TOKEN'),
        'YOUR_TELEGRAM_ID': os.getenv('YOUR_TELEGRAM_ID'),
        'DATABASE_URL': os.getenv('DATABASE_URL'),
        'SECRET_KEY': os.getenv('SECRET_KEY'),
        'OFFERS_SYSTEM_ENABLED': os.getenv('OFFERS_SYSTEM_ENABLED', 'True')
    }
    
    print("üìã –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:")
    all_ok = True
    
    for var, value in critical_vars.items():
        if value:
            # –°–∫—Ä—ã–≤–∞–µ–º —Ç–æ–∫–µ–Ω—ã –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
            if 'TOKEN' in var or 'SECRET' in var:
                display_value = f"{value[:10]}***{value[-4:]}" if len(value) > 14 else "***"
            else:
                display_value = value
            print(f"   ‚úÖ {var}: {display_value}")
        else:
            print(f"   ‚ùå {var}: –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–ê")
            all_ok = False
    
    return all_ok

def check_config_file():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    print("\nüîç –ü–†–û–í–ï–†–ö–ê app/config/settings.py")
    print("-" * 50)
    
    try:
        sys.path.insert(0, os.getcwd())
        from app.config.settings import Config
        
        config_checks = {
            'OFFERS_SYSTEM_ENABLED': getattr(Config, 'OFFERS_SYSTEM_ENABLED', None),
            'MIN_OFFER_BUDGET': getattr(Config, 'MIN_OFFER_BUDGET', None),
            'MAX_OFFER_BUDGET': getattr(Config, 'MAX_OFFER_BUDGET', None),
            'DEFAULT_OFFER_DURATION_DAYS': getattr(Config, 'DEFAULT_OFFER_DURATION_DAYS', None),
        }
        
        print("üìã –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ñ—Ñ–µ—Ä–æ–≤ –≤ Config:")
        for setting, value in config_checks.items():
            if value is not None:
                print(f"   ‚úÖ {setting}: {value}")
            else:
                print(f"   ‚ö†Ô∏è {setting}: –ù–ï –ù–ê–ô–î–ï–ù–ê")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∫–æ–Ω—Å—Ç–∞–Ω—Ç
        try:
            from app.config.settings import MIN_OFFER_BUDGET, MAX_OFFER_BUDGET
            print(f"   ‚úÖ –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–æ—Å—Ç—É–ø–Ω—ã: MIN={MIN_OFFER_BUDGET}, MAX={MAX_OFFER_BUDGET}")
        except ImportError as e:
            print(f"   ‚ö†Ô∏è –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –∫–æ–Ω—Å—Ç–∞–Ω—Ç: {e}")
        
        return True
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return False

def check_api_registration():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é API –æ—Ñ—Ñ–µ—Ä–æ–≤"""
    print("\nüîç –ü–†–û–í–ï–†–ö–ê –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò API")
    print("-" * 50)
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç API –º–æ–¥—É–ª–µ–π
        from app.api.offers import offers_bp
        print("   ‚úÖ app.api.offers –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        
        from app.routers.main_router import main_bp
        print("   ‚úÖ app.routers.main_router –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º Blueprint'—ã
        print(f"   ‚úÖ offers_bp –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: {offers_bp.name}")
        print(f"   ‚úÖ main_bp –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: {main_bp.name}")
        
        return True
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ API: {e}")
        return False

def check_auth_service():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ä–≤–∏—Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏"""
    print("\nüîç –ü–†–û–í–ï–†–ö–ê –°–ï–†–í–ò–°–ê –ê–£–¢–ï–ù–¢–ò–§–ò–ö–ê–¶–ò–ò")
    print("-" * 50)
    
    try:
        from app.services.auth_service import auth_service
        print("   ‚úÖ auth_service –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Ç–æ–¥—ã
        methods = ['get_current_user_id', 'verify_telegram_auth']
        for method in methods:
            if hasattr(auth_service, method):
                print(f"   ‚úÖ –ú–µ—Ç–æ–¥ {method} –¥–æ—Å—Ç—É–ø–µ–Ω")
            else:
                print(f"   ‚ö†Ô∏è –ú–µ—Ç–æ–¥ {method} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
        
        return True
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ auth_service: {e}")
        print("   üí° –í–æ–∑–º–æ–∂–Ω–æ –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—É—é –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é")
        return False

def check_working_app_integration():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é –≤ working_app.py"""
    print("\nüîç –ü–†–û–í–ï–†–ö–ê –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –í working_app.py")
    print("-" * 50)
    
    try:
        # –ß–∏—Ç–∞–µ–º working_app.py
        with open('working_app.py', 'r', encoding='utf-8') as f:
            content = f.read()
        
        checks = {
            'offers_bp –∏–º–ø–æ—Ä—Ç': 'from app.api.offers import offers_bp' in content,
            'offers_bp —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è': 'offers_bp' in content and 'register_blueprint' in content,
            'add_offer –∏–º–ø–æ—Ä—Ç': 'from add_offer import' in content or 'import add_offer' in content,
            'API –º–∞—Ä—à—Ä—É—Ç /api/offers': '/api/offers' in content
        }
        
        print("üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏:")
        all_integrated = True
        
        for check, result in checks.items():
            if result:
                print(f"   ‚úÖ {check}")
            else:
                print(f"   ‚ùå {check}")
                all_integrated = False
        
        return all_integrated
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ working_app.py: {e}")
        return False

def check_frontend_files():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ —Ñ–∞–π–ª—ã"""
    print("\nüîç –ü–†–û–í–ï–†–ö–ê –§–†–û–ù–¢–ï–ù–î –§–ê–ô–õ–û–í")
    print("-" * 50)
    
    files_to_check = [
        'templates/offers.html',
        'app/static/js/offers.js',
        'templates/offers-list.html'
    ]
    
    all_files_exist = True
    
    for file_path in files_to_check:
        if os.path.exists(file_path):
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
            size = os.path.getsize(file_path)
            print(f"   ‚úÖ {file_path} ({size} –±–∞–π—Ç)")
        else:
            print(f"   ‚ùå {file_path} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
            all_files_exist = False
    
    return all_files_exist

def suggest_fixes():
    """–ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
    print("\nüîß –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –ò–°–ü–†–ê–í–õ–ï–ù–ò–Æ")
    print("-" * 50)
    
    print("1. –ï—Å–ª–∏ auth_service –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:")
    print("   - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—É—é –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é —á–µ—Ä–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∏")
    print("   - –í API –ø–æ–ª—É—á–∞–π—Ç–µ user_id –∏–∑ request.headers.get('X-Telegram-User-Id')")
    
    print("\n2. –î–ª—è –ø–æ–ª–Ω–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —É–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ:")
    print("   - OFFERS_SYSTEM_ENABLED=True –≤ .env")
    print("   - offers_bp –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ working_app.py")
    print("   - add_offer.py –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞")
    
    print("\n3. –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print("   - –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python working_app.py")
    print("   - –û—Ç–∫—Ä–æ–π—Ç–µ: http://localhost:5000/offers")
    print("   - –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–æ–∑–¥–∞—Ç—å –æ—Ñ—Ñ–µ—Ä —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏"""
    print("üîç –ü–û–õ–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –°–ò–°–¢–ï–ú–´ –û–§–§–ï–†–û–í")
    print("=" * 60)
    
    checks = [
        ("–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è", check_environment),
        ("–§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏", check_config_file),
        ("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è API", check_api_registration),
        ("–°–µ—Ä–≤–∏—Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏", check_auth_service),
        ("–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤ working_app.py", check_working_app_integration),
        ("–§—Ä–æ–Ω—Ç–µ–Ω–¥ —Ñ–∞–π–ª—ã", check_frontend_files)
    ]
    
    results = []
    
    for check_name, check_func in checks:
        try:
            result = check_func()
            results.append((check_name, result))
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –ø—Ä–æ–≤–µ—Ä–∫–µ '{check_name}': {e}")
            results.append((check_name, False))
    
    # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    print("\n" + "=" * 60)
    print("üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢")
    print("=" * 60)
    
    passed = sum(1 for _, result in results if result)
    total = len(results)
    
    for check_name, result in results:
        status = "‚úÖ –ü–†–û–ô–î–ï–ù–û" if result else "‚ùå –û–®–ò–ë–ö–ê"
        print(f"{check_name:<30} {status}")
    
    print("-" * 60)
    print(f"–ü—Ä–æ–π–¥–µ–Ω–æ –ø—Ä–æ–≤–µ—Ä–æ–∫: {passed}/{total}")
    
    if passed == total:
        print("üéâ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´!")
        print("üöÄ –°–∏—Å—Ç–µ–º–∞ –æ—Ñ—Ñ–µ—Ä–æ–≤ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!")
        print("\nüìã –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:")
        print("1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: python working_app.py")
        print("2. –û—Ç–∫—Ä–æ–π—Ç–µ: http://localhost:5000/offers")
        print("3. –°–æ–∑–¥–∞–π—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–π –æ—Ñ—Ñ–µ—Ä")
    else:
        print("‚ö†Ô∏è –ù–ï–ö–û–¢–û–†–´–ï –ü–†–û–í–ï–†–ö–ò –ù–ï –ü–†–û–ô–î–ï–ù–´")
        suggest_fixes()

if __name__ == '__main__':
    main()