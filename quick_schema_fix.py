#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ö–µ–º—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –º–æ–¥–µ—Ä–∞—Ü–∏–∏
"""

import sqlite3
import os

DATABASE_PATH = 'telegram_mini_app.db'

def fix_channels_table():
    """–î–æ–±–∞–≤–ª—è–µ—Ç –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Å—Ç–æ–ª–±—Ü—ã –≤ —Ç–∞–±–ª–∏—Ü—É channels"""
    print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ö–µ–º—ã —Ç–∞–±–ª–∏—Ü—ã channels...")
    
    if not os.path.exists(DATABASE_PATH):
        print(f"‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {DATABASE_PATH}")
        return False
    
    try:
        conn = sqlite3.connect(DATABASE_PATH)
        cursor = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        cursor.execute("PRAGMA table_info(channels)")
        columns = [col[1] for col in cursor.fetchall()]
        print(f"üìã –¢–µ–∫—É—â–∏–µ —Å—Ç–æ–ª–±—Ü—ã: {columns}")
        
        changes = []
        
        # –î–æ–±–∞–≤–ª—è–µ–º verification_code
        if 'verification_code' not in columns:
            cursor.execute('ALTER TABLE channels ADD COLUMN verification_code TEXT')
            changes.append('verification_code')
            print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω: verification_code")
        
        # –î–æ–±–∞–≤–ª—è–µ–º status
        if 'status' not in columns:
            cursor.execute("ALTER TABLE channels ADD COLUMN status TEXT DEFAULT 'pending'")
            changes.append('status')
            print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω: status")
        
        # –î–æ–±–∞–≤–ª—è–µ–º verified_at
        if 'verified_at' not in columns:
            cursor.execute('ALTER TABLE channels ADD COLUMN verified_at DATETIME')
            changes.append('verified_at')
            print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω: verified_at")
        
        if changes:
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏
            cursor.execute("""
                UPDATE channels 
                SET status = CASE 
                    WHEN is_verified = 1 THEN 'verified'
                    ELSE 'pending_verification'
                END
                WHERE status IS NULL
            """)
            
            conn.commit()
            print(f"‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã: {', '.join(changes)}")
        else:
            print("‚ÑπÔ∏è –í—Å–µ —Å—Ç–æ–ª–±—Ü—ã —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        cursor.execute("PRAGMA table_info(channels)")
        updated_columns = [col[1] for col in cursor.fetchall()]
        print(f"üìã –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Å—Ç–æ–ª–±—Ü—ã: {updated_columns}")
        
        conn.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def test_insert():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤—Å—Ç–∞–≤–∫—É –¥–∞–Ω–Ω—ã—Ö —Å –Ω–æ–≤—ã–º–∏ –ø–æ–ª—è–º–∏"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å—Ç–∞–≤–∫–∏...")
    
    try:
        conn = sqlite3.connect(DATABASE_PATH)
        cursor = conn.cursor()
        
        # –ü—Ä–æ–±—É–µ–º –≤—Å—Ç–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å
        test_data = (
            'test_channel_id',
            'test_username', 
            '–¢–µ—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª',
            '–û–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Å—Ç–∞',
            1,  # owner_id
            'test',
            '2025-06-17T15:30:00',
            '#addtest456',
            'pending_verification'
        )
        
        cursor.execute("""
            INSERT INTO channels (
                telegram_id, username, title, description, owner_id,
                category, created_at, verification_code, status
            ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
        """, test_data)
        
        conn.commit()
        print("‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –≤—Å—Ç–∞–≤–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ")
        
        # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å
        cursor.execute("DELETE FROM channels WHERE telegram_id = 'test_channel_id'")
        conn.commit()
        print("‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å —É–¥–∞–ª–µ–Ω–∞")
        
        conn.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        return False

def main():
    print("=" * 50)
    print("üõ†Ô∏è –ë–´–°–¢–†–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –°–•–ï–ú–´ –ë–î")
    print("=" * 50)
    
    if fix_channels_table():
        if test_insert():
            print("\nüéâ –°—Ö–µ–º–∞ —É—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!")
            print("üìã –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å –∫–∞–Ω–∞–ª—ã —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –º–æ–¥–µ—Ä–∞—Ü–∏–µ–π")
        else:
            print("\n‚ö†Ô∏è –°—Ö–µ–º–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞, –Ω–æ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º")
    else:
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏—Å–ø—Ä–∞–≤–∏—Ç—å —Å—Ö–µ–º—É")

if __name__ == '__main__':
    main()
