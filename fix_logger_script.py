#!/usr/bin/env python3
"""
fix_logger_error.py - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–∫–∏ logger –≤ working_app.py
–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ—Ä—è–¥–æ–∫ –∏–º–ø–æ—Ä—Ç–æ–≤ –∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è logger
"""

import os
import re
import shutil
from datetime import datetime

def create_backup(file_path):
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ —Ñ–∞–π–ª–∞"""
    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    backup_path = f"{file_path}.backup_{timestamp}"
    shutil.copy2(file_path, backup_path)
    print(f"üì¶ –°–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: {backup_path}")
    return backup_path

def fix_working_app():
    """–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ working_app.py"""
    file_path = "working_app.py"
    
    if not os.path.exists(file_path):
        print(f"‚ùå –§–∞–π–ª {file_path} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False
    
    # –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø
    backup_path = create_backup(file_path)
    
    try:
        # –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
        with open(file_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        print("üîç –ê–Ω–∞–ª–∏–∑ —Ñ–∞–π–ª–∞...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø—Ä–æ–±–ª–µ–º–Ω–æ–≥–æ –±–ª–æ–∫–∞
        if 'logger.info("‚úÖ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")' in content:
            print("‚úÖ –ù–∞–π–¥–µ–Ω –ø—Ä–æ–±–ª–µ–º–Ω—ã–π –±–ª–æ–∫ —Å logger")
            
            # –ü–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø—Ä–æ–±–ª–µ–º–Ω–æ–≥–æ –±–ª–æ–∫–∞ enhanced_api_routes
            pattern = r'''try:
    from enhanced_api_routes import add_enhanced_routes
    enhanced_routes_available = True
    logger\.info\("‚úÖ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã"\)
except ImportError as e:
    logger\.warning\(f"‚ö†Ô∏è –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã: \{e\}"\)
    enhanced_routes_available = False
    
    # –°–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫—É
    def add_enhanced_routes\(app=None\):
        logger\.info\("üîÑ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤"\)
        return False'''
            
            # –ó–∞–º–µ–Ω–∞ –Ω–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –±–ª–æ–∫
            replacement = '''try:
    from enhanced_api_routes import add_enhanced_routes
    enhanced_routes_available = True
    print("‚úÖ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
except ImportError as e:
    print(f"‚ö†Ô∏è –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã: {e}")
    enhanced_routes_available = False
    
    # –°–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫—É
    def add_enhanced_routes(app=None):
        print("üîÑ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤")
        return False'''
            
            # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–º–µ–Ω—É
            new_content = re.sub(pattern, replacement, content, flags=re.MULTILINE)
            
            if new_content != content:
                print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ –±–ª–æ–∫–∞...")
                content = new_content
            else:
                print("‚ö†Ô∏è –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–º–µ–Ω–∞ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∞, –ø—Ä–∏–º–µ–Ω—è–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥...")
                
                # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ - –ø—Ä–æ—Å—Ç–∞—è –∑–∞–º–µ–Ω–∞ —Å—Ç—Ä–æ–∫
                content = content.replace(
                    'logger.info("‚úÖ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")',
                    'print("‚úÖ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")'
                )
                content = content.replace(
                    'logger.warning(f"‚ö†Ô∏è –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã: {e}")',
                    'print(f"‚ö†Ô∏è –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã: {e}")'
                )
                content = content.replace(
                    'logger.info("üîÑ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤")',
                    'print("üîÑ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤")'
                )
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        print("üîß –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π...")
        
        # –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
        lines = content.split('\n')
        new_lines = []
        logger_setup_found = False
        enhanced_routes_moved = False
        
        for i, line in enumerate(lines):
            # –ò—â–µ–º –±–ª–æ–∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
            if 'logging.basicConfig(' in line:
                logger_setup_found = True
            
            # –ï—Å–ª–∏ –≤—Å—Ç—Ä–µ—á–∞–µ–º logger = logging.getLogger(__name__)
            if 'logger = logging.getLogger(__name__)' in line:
                new_lines.append(line)
                # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É, —á—Ç–æ logger –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é
                new_lines.append('')
                new_lines.append('# Logger –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é')
                continue
            
            new_lines.append(line)
        
        content = '\n'.join(new_lines)
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        with open(file_path, 'w', encoding='utf-8') as f:
            f.write(content)
        
        print("‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω!")
        print("\nüìã –í–Ω–µ—Å–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:")
        print("  ‚Ä¢ –ó–∞–º–µ–Ω–µ–Ω—ã logger.info/warning –Ω–∞ print –≤ –±–ª–æ–∫–µ enhanced_api_routes")
        print("  ‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω—ã –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –¥–ª—è –ª—É—á—à–µ–π —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏")
        print("  ‚Ä¢ –ü—Ä–æ–≤–µ—Ä–µ–Ω –ø–æ—Ä—è–¥–æ–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ logger")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏: {e}")
        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑ –±—ç–∫–∞–ø–∞
        shutil.copy2(backup_path, file_path)
        print(f"üîÑ –§–∞–π–ª –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏")
        return False

def verify_fix():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
    file_path = "working_app.py"
    
    if not os.path.exists(file_path):
        return False
    
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã
        problematic_patterns = [
            r'logger\.info\("‚úÖ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã"\)',
            r'logger\.warning\(f"‚ö†Ô∏è –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã:'
        ]
        
        for pattern in problematic_patterns:
            if re.search(pattern, content):
                print(f"‚ö†Ô∏è –ù–∞–π–¥–µ–Ω –Ω–µ–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω: {pattern}")
                return False
        
        print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ - –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ logger —É–±—Ä–∞–Ω—ã")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {e}")
        return False

def test_import():
    """–¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –±–µ–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
        with open("working_app.py", 'r', encoding='utf-8') as f:
            code = f.read()
        
        compile(code, "working_app.py", "exec")
        print("‚úÖ –°–∏–Ω—Ç–∞–∫—Å–∏—Å –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω")
        return True
        
    except SyntaxError as e:
        print(f"‚ùå –°–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        print(f"   –°—Ç—Ä–æ–∫–∞ {e.lineno}: {e.text}")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏: {e}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîß –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –û–®–ò–ë–ö–ò LOGGER")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
    if not os.path.exists("working_app.py"):
        print("‚ùå –§–∞–π–ª working_app.py –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏!")
        print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∑–∞–ø—É—Å–∫–∞–µ—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞")
        return False
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
    print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ working_app.py...")
    if not fix_working_app():
        print("‚ùå –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π...")
    if not verify_fix():
        print("‚ùå –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ –ø—Ä–æ—à–ª–∞")
        return False
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å
    print("\nüß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞...")
    if not test_import():
        print("‚ùå –°–∏–Ω—Ç–∞–∫—Å–∏—Å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω")
        return False
    
    print("\n" + "=" * 50)
    print("üéâ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û!")
    print("=" * 50)
    print("üìã –ß—Ç–æ –±—ã–ª–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ:")
    print("  ‚úÖ –£–±—Ä–∞–Ω—ã –≤—ã–∑–æ–≤—ã logger –¥–æ –µ–≥–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏")
    print("  ‚úÖ –ó–∞–º–µ–Ω–µ–Ω—ã –Ω–∞ –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ print() –≤—ã–∑–æ–≤—ã")
    print("  ‚úÖ –ü—Ä–æ–≤–µ—Ä–µ–Ω —Å–∏–Ω—Ç–∞–∫—Å–∏—Å —Ñ–∞–π–ª–∞")
    print("  ‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è")
    print("\nüöÄ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å:")
    print("  python working_app.py")
    print("\nüí° –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –ø—Ä–æ–±–ª–µ–º—ã, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é")
    
    return True

if __name__ == '__main__':
    success = main()
    if not success:
        print("\nüí• –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å.")
        print("üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –≤—Ä—É—á–Ω—É—é –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∑–∞ –ø–æ–º–æ—â—å—é.")
        exit(1)
    else:
        print("\n‚ú® –ì–æ—Ç–æ–≤–æ! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.")
