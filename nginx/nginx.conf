# Nginx конфигурация для Telegram Mini App API Gateway
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for" '
                   'rt=$request_time uct="$upstream_connect_time" '
                   'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # Основные настройки
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 16M;

    # Gzip сжатие
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=web:10m rate=5r/s;

    # Upstream для основного приложения
    upstream main_app {
        least_conn;
        server main_app:5000 max_fails=3 fail_timeout=30s;
    }

    # Upstream для микросервисов
    upstream user_service {
        server user_service:5001;
    }

    upstream channel_service {
        server channel_service:5002;
    }

    upstream offer_service {
        server offer_service:5003;
    }

    upstream analytics_service {
        server analytics_service:5004;
    }

    upstream notification_service {
        server notification_service:5005;
    }

    # Основной сервер
    server {
        listen 80;
        server_name localhost;

        # Безопасность заголовков
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # Статические файлы
        location /static/ {
            alias /var/www/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
        }

        # Health check
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # API Routes для микросервисов
        location /api/users/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://user_service/;
            include /etc/nginx/conf.d/proxy_params.conf;
        }

        location /api/channels/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://channel_service/;
            include /etc/nginx/conf.d/proxy_params.conf;
        }

        location /api/offers/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://offer_service/;
            include /etc/nginx/conf.d/proxy_params.conf;
        }

        location /api/analytics/ {
            limit_req zone=api burst=10 nodelay;
            proxy_pass http://analytics_service/;
            include /etc/nginx/conf.d/proxy_params.conf;
        }

        location /api/notifications/ {
            limit_req zone=api burst=15 nodelay;
            proxy_pass http://notification_service/;
            include /etc/nginx/conf.d/proxy_params.conf;
        }

        # Все остальные запросы на основное приложение
        location / {
            limit_req zone=web burst=10 nodelay;
            proxy_pass http://main_app;
            include /etc/nginx/conf.d/proxy_params.conf;
        }

        # Webhook для Telegram
        location /telegram/webhook {
            limit_req zone=api burst=100 nodelay;
            proxy_pass http://main_app;
            include /etc/nginx/conf.d/proxy_params.conf;
        }

        # Error pages
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }

        error_page 429 /rate_limit.html;
        location = /rate_limit.html {
            root /usr/share/nginx/html;
        }
    }
}