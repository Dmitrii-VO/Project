#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—Ñ—Ñ–µ—Ä–æ–≤
"""
import os
import sys
import sqlite3
import requests
import json

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append('/mnt/d/Project')

def test_offers_display_fix():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—Ñ—Ñ–µ—Ä–æ–≤"""
    
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—Ñ—Ñ–µ—Ä–æ–≤")
    print("=" * 60)
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤—è–∑–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –æ—Ñ—Ñ–µ—Ä–æ–≤
    print("\n1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤—è–∑–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –æ—Ñ—Ñ–µ—Ä–æ–≤:")
    try:
        conn = sqlite3.connect('/mnt/d/Project/telegram_mini_app.db')
        cursor = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å telegram_id = 373086959
        cursor.execute('SELECT id, telegram_id, username FROM users WHERE telegram_id = 373086959')
        user = cursor.fetchone()
        if user:
            print(f"   ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: db_id={user[0]}, telegram_id={user[1]}, username={user[2]}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ–≥–æ –æ—Ñ—Ñ–µ—Ä—ã
            cursor.execute('SELECT id, title, created_by FROM offers WHERE created_by = ? ORDER BY created_at DESC', (user[0],))
            offers = cursor.fetchall()
            print(f"   ‚úÖ –û—Ñ—Ñ–µ—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è db_id={user[0]}: {len(offers)} —à—Ç.")
            for offer in offers:
                print(f"      - ID: {offer[0]}, Title: {offer[1]}, Created by: {offer[2]}")
        else:
            print("   ‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å telegram_id=373086959 –Ω–µ –Ω–∞–π–¥–µ–Ω")
            
        conn.close()
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ë–î: {e}")
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –æ—Ñ—Ñ–µ—Ä–æ–≤
    print("\n2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –æ—Ñ—Ñ–µ—Ä–æ–≤:")
    try:
        conn = sqlite3.connect('/mnt/d/Project/telegram_mini_app.db')
        cursor = conn.cursor()
        
        cursor.execute('''
            SELECT o.id, o.title, o.created_by, u.telegram_id, u.username
            FROM offers o
            JOIN users u ON o.created_by = u.id
            ORDER BY o.created_at DESC
            LIMIT 5
        ''')
        offers = cursor.fetchall()
        print(f"   ‚úÖ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—Ñ—Ñ–µ—Ä—ã:")
        for offer in offers:
            print(f"      - Offer ID: {offer[0]}, Title: {offer[1]}, Created by db_id: {offer[2]}, telegram_id: {offer[3]}, username: {offer[4]}")
            
        conn.close()
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ë–î: {e}")
    
    # –¢–µ—Å—Ç 3: –°–∏–º—É–ª—è—Ü–∏—è API –∑–∞–ø—Ä–æ—Å–∞ "–ú–æ–∏ –æ—Ñ—Ñ–µ—Ä—ã"
    print("\n3. –¢–µ—Å—Ç API '–ú–æ–∏ –æ—Ñ—Ñ–µ—Ä—ã':")
    try:
        url = 'http://localhost:5000/api/offers/my'
        headers = {
            'Content-Type': 'application/json',
            'X-Telegram-User-Id': '373086959'  # –†–µ–∞–ª—å–Ω—ã–π telegram_id
        }
        
        print(f"   üîç URL: {url}")
        print(f"   üìã Headers: {headers}")
        
        try:
            response = requests.get(url, headers=headers, timeout=5)
            print(f"   üì° Status: {response.status_code}")
            if response.status_code == 200:
                data = response.json()
                print(f"   ‚úÖ –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç: {data.get('count', 0)} –æ—Ñ—Ñ–µ—Ä–æ–≤ –∏–∑ {data.get('total_count', 0)} –≤—Å–µ–≥–æ")
                if 'telegram_id' in data:
                    print(f"   üìã Telegram ID –≤ –æ—Ç–≤–µ—Ç–µ: {data['telegram_id']}")
                if 'user_db_id' in data:
                    print(f"   üìã User DB ID –≤ –æ—Ç–≤–µ—Ç–µ: {data['user_db_id']}")
            else:
                print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.text}")
        except requests.exceptions.ConnectionError:
            print("   ‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º HTTP —Ç–µ—Å—Ç")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ HTTP: {e}")
    
    # –¢–µ—Å—Ç 4: –°–∏–º—É–ª—è—Ü–∏—è API –∑–∞–ø—Ä–æ—Å–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
    print("\n4. –¢–µ—Å—Ç API —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –∫–∞–Ω–∞–ª–æ–≤:")
    try:
        url = 'http://localhost:5000/api/offers_management/5/recommended-channels'
        headers = {
            'Content-Type': 'application/json',
            'X-Telegram-User-Id': '373086959'  # –†–µ–∞–ª—å–Ω—ã–π telegram_id
        }
        
        print(f"   üîç URL: {url}")
        print(f"   üìã Headers: {headers}")
        
        try:
            response = requests.get(url, headers=headers, timeout=5)
            print(f"   üì° Status: {response.status_code}")
            if response.status_code == 200:
                data = response.json()
                print(f"   ‚úÖ –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç: {data.get('total_channels', 0)} –∫–∞–Ω–∞–ª–æ–≤")
            elif response.status_code == 403:
                print(f"   ‚ùå 403 Forbidden: {response.text}")
            else:
                print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.text}")
        except requests.exceptions.ConnectionError:
            print("   ‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º HTTP —Ç–µ—Å—Ç")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ HTTP: {e}")
    
    print("\n" + "=" * 60)
    print("üéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")

if __name__ == '__main__':
    test_offers_display_fix()