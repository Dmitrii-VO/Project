#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π –µ–¥–∏–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
"""
import os
import sys
import sqlite3
import requests
import json

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append('/mnt/d/Project')

def test_auth_system():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""
    
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –µ–¥–∏–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
    print("=" * 60)
    
    # –¢–µ—Å—Ç 1: –ë–∞–∑–æ–≤–∞—è —Ä–∞–±–æ—Ç–∞ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
    print("\n1. –¢–µ—Å—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:")
    try:
        conn = sqlite3.connect('/mnt/d/Project/telegram_mini_app.db')
        cursor = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å telegram_id = 1
        cursor.execute('SELECT id, telegram_id, username FROM users WHERE telegram_id = 1')
        user = cursor.fetchone()
        if user:
            print(f"   ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω: db_id={user[0]}, telegram_id={user[1]}, username={user[2]}")
        else:
            print("   ‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å telegram_id=1 –Ω–µ –Ω–∞–π–¥–µ–Ω")
            
        conn.close()
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ë–î: {e}")
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ñ—Ñ–µ—Ä–∞
    print("\n2. –¢–µ—Å—Ç –æ—Ñ—Ñ–µ—Ä–∞:")
    try:
        conn = sqlite3.connect('/mnt/d/Project/telegram_mini_app.db')
        cursor = conn.cursor()
        
        cursor.execute('SELECT id, title, created_by FROM offers WHERE id = 4')
        offer = cursor.fetchone()
        if offer:
            print(f"   ‚úÖ –û—Ñ—Ñ–µ—Ä –Ω–∞–π–¥–µ–Ω: id={offer[0]}, title={offer[1]}, created_by={offer[2]}")
        else:
            print("   ‚ùå –û—Ñ—Ñ–µ—Ä —Å id=4 –Ω–µ –Ω–∞–π–¥–µ–Ω")
            
        conn.close()
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ë–î: {e}")
    
    # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–Ω–∞–ª–æ–≤
    print("\n3. –¢–µ—Å—Ç –∫–∞–Ω–∞–ª–æ–≤:")
    try:
        conn = sqlite3.connect('/mnt/d/Project/telegram_mini_app.db')
        cursor = conn.cursor()
        
        cursor.execute('SELECT id, title, owner_id FROM channels WHERE is_verified = 1')
        channels = cursor.fetchall()
        print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤: {len(channels)}")
        for ch in channels:
            print(f"      - ID: {ch[0]}, Title: {ch[1]}, Owner: {ch[2]}")
            
        conn.close()
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ë–î: {e}")
    
    # –¢–µ—Å—Ç 4: –°–∏–º—É–ª—è—Ü–∏—è HTTP –∑–∞–ø—Ä–æ—Å–∞
    print("\n4. –¢–µ—Å—Ç HTTP –∑–∞–ø—Ä–æ—Å–∞:")
    try:
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
        url = 'http://localhost:5000/api/offers_management/4/recommended-channels'
        headers = {
            'Content-Type': 'application/json',
            'X-Telegram-User-Id': '1'  # telegram_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        }
        
        print(f"   üîç URL: {url}")
        print(f"   üìã Headers: {headers}")
        
        # –ï—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω, –ø–æ–ø—Ä–æ–±—É–µ–º –∑–∞–ø—Ä–æ—Å
        try:
            response = requests.get(url, headers=headers, timeout=5)
            print(f"   üì° Status: {response.status_code}")
            if response.status_code == 200:
                data = response.json()
                print(f"   ‚úÖ –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç: {data.get('total_channels', 0)} –∫–∞–Ω–∞–ª–æ–≤")
            else:
                print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.text}")
        except requests.exceptions.ConnectionError:
            print("   ‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º HTTP —Ç–µ—Å—Ç")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ HTTP: {e}")
    
    print("\n" + "=" * 60)
    print("üéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")

if __name__ == '__main__':
    test_auth_system()