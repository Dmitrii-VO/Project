#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ü–µ–Ω—ã –≤ –∫–∞—Ä—Ç–æ—á–∫–∞—Ö –æ—Ñ—Ñ–µ—Ä–æ–≤
"""

def create_price_fix():
    """–°–æ–∑–¥–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ü–µ–Ω—ã"""
    
    price_fix = '''
// –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –û–¢–û–ë–†–ê–ñ–ï–ù–ò–Ø –¶–ï–ù–´ - –∑–∞–º–µ–Ω–∏—Ç–µ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ renderOffers

// –£–ª—É—á—à–µ–Ω–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ü–µ–Ω—ã
function formatPrice(price) {
    console.log('üí∞ –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ü–µ–Ω—É:', price, '—Ç–∏–ø:', typeof price);
    
    let numericPrice = 0;
    
    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —á–∏—Å–ª–æ
    if (typeof price === 'string') {
        // –£–±–∏—Ä–∞–µ–º –≤—Å–µ –Ω–µ—á–∏—Å–ª–æ–≤—ã–µ —Å–∏–º–≤–æ–ª—ã –∫—Ä–æ–º–µ —Ç–æ—á–∫–∏ –∏ –∑–∞–ø—è—Ç–æ–π
        const cleanPrice = price.replace(/[^0-9.,]/g, '').replace(',', '.');
        numericPrice = parseFloat(cleanPrice) || 0;
    } else if (typeof price === 'number') {
        numericPrice = price;
    } else {
        numericPrice = 0;
    }
    
    console.log('üí∞ –ß–∏—Å–ª–æ–≤–∞—è —Ü–µ–Ω–∞:', numericPrice);
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è–º–∏ —Ç—ã—Å—è—á
    if (numericPrice === 0) {
        return '0';
    }
    
    // –†—É—Å—Å–∫–∏–π —Ñ–æ—Ä–º–∞—Ç —Å –ø—Ä–æ–±–µ–ª–∞–º–∏ –∫–∞–∫ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–∏ —Ç—ã—Å—è—á
    return numericPrice.toLocaleString('ru-RU', {
        minimumFractionDigits: 0,
        maximumFractionDigits: 2
    });
}

// –ó–∞–º–µ–Ω–∏—Ç–µ —ç—Ç—É —á–∞—Å—Ç—å –≤ —Ñ—É–Ω–∫—Ü–∏–∏ renderOffers:
offers.forEach((offer, index) => {
    console.log(`üìã –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Ñ—Ñ–µ—Ä ${index + 1}:`, offer);
    console.log('üí∞ –ò—Å—Ö–æ–¥–Ω–∞—è —Ü–µ–Ω–∞:', offer.price, '—Ç–∏–ø:', typeof offer.price);
    
    // –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å fallback –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
    const title = offer.title || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è';
    const description = offer.description || offer.content || '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è';
    const price = offer.price || 0;
    const currency = offer.currency || 'RUB';
    const category = offer.category || '–ù–µ —É–∫–∞–∑–∞–Ω–∞';
    const status = offer.status || 'active';
    const deadline = offer.deadline || '–ù–µ —É–∫–∞–∑–∞–Ω';
    const responseCount = offer.response_count || 0;
    const acceptedCount = offer.accepted_count || 0;
    const createdAt = offer.created_at || '';
    
    // –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ï —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ü–µ–Ω—ã
    const formattedPrice = formatPrice(price);
    console.log('üí∞ –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ü–µ–Ω–∞:', formattedPrice);
    
    // ... –æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
'''
    
    print("üí∞ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –û–¢–û–ë–†–ê–ñ–ï–ù–ò–Ø –¶–ï–ù–´")
    print("-" * 50)
    print("–î–æ–±–∞–≤—å—Ç–µ —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –∏ –∏–∑–º–µ–Ω–∏—Ç–µ renderOffers:")
    print(price_fix)

def create_complete_fixed_render():
    """–°–æ–∑–¥–∞–µ–º –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é renderOffers"""
    
    fixed_render = '''
// –ü–û–õ–ù–û–°–¢–¨–Æ –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø renderOffers

// –§—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ü–µ–Ω—ã
function formatPrice(price) {
    console.log('üí∞ –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ü–µ–Ω—É:', price, '—Ç–∏–ø:', typeof price);
    
    let numericPrice = 0;
    
    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —á–∏—Å–ª–æ
    if (typeof price === 'string') {
        const cleanPrice = price.replace(/[^0-9.,]/g, '').replace(',', '.');
        numericPrice = parseFloat(cleanPrice) || 0;
    } else if (typeof price === 'number') {
        numericPrice = price;
    } else {
        numericPrice = 0;
    }
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è–º–∏ —Ç—ã—Å—è—á
    if (numericPrice === 0) {
        return '0';
    }
    
    return numericPrice.toLocaleString('ru-RU', {
        minimumFractionDigits: 0,
        maximumFractionDigits: 2
    });
}

// –§—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞—Ç—ã
function formatDate(dateString) {
    if (!dateString) return '–ù–µ —É–∫–∞–∑–∞–Ω–∞';
    
    try {
        const date = new Date(dateString);
        return date.toLocaleDateString('ru-RU', {
            year: 'numeric',
            month: '2-digit',
            day: '2-digit'
        });
    } catch (e) {
        return dateString;
    }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏
function renderOffers(offers) {
    console.log('üé® –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –æ—Ñ—Ñ–µ—Ä–æ–≤:', offers.length);
    const container = document.getElementById('offersGrid');
    
    if (!container) {
        console.error('‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä offersGrid –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return;
    }

    if (!offers || offers.length === 0) {
        showEmptyOffersState();
        return;
    }

    let html = '';
    
    offers.forEach((offer, index) => {
        console.log(`üìã –û—Ñ—Ñ–µ—Ä ${index + 1}:`, {
            id: offer.id,
            title: offer.title,
            price: offer.price,
            priceType: typeof offer.price,
            currency: offer.currency
        });
        
        // –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
        const title = offer.title || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è';
        const description = offer.description || offer.content || '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è';
        const rawPrice = offer.price || 0;
        const currency = offer.currency || 'RUB';
        const category = offer.category || '–ù–µ —É–∫–∞–∑–∞–Ω–∞';
        const status = offer.status || 'active';
        const deadline = offer.deadline || '–ù–µ —É–∫–∞–∑–∞–Ω';
        const responseCount = offer.response_count || 0;
        const createdAt = offer.created_at || '';
        
        // –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ï —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ü–µ–Ω—ã
        const formattedPrice = formatPrice(rawPrice);
        
        // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã
        const formattedDate = formatDate(createdAt);
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
        const statusClass = status === 'active' ? 'status-active' : 'status-inactive';
        const statusText = {
            'active': '–ê–∫—Ç–∏–≤–µ–Ω',
            'paused': '–ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω',
            'completed': '–ó–∞–≤–µ—Ä—à–µ–Ω',
            'cancelled': '–û—Ç–º–µ–Ω–µ–Ω'
        }[status] || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
        
        // –û–±—Ä–µ–∑–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ
        const shortDescription = description.length > 150 ? 
            description.substring(0, 150) + '...' : description;
        
        html += `
            <div class="offer-card" data-offer-id="${offer.id}">
                <div class="offer-header">
                    <h3 class="offer-title">${title}</h3>
                    <span class="offer-status ${statusClass}">${statusText}</span>
                </div>
                
                <div class="offer-price-section">
                    <div class="offer-price">
                        <span class="price-amount">${formattedPrice}</span>
                        <span class="price-currency">${currency}</span>
                    </div>
                </div>
                
                <div class="offer-details">
                    <div class="detail-grid">
                        <div class="detail-item">
                            <span class="detail-label">üìÅ –ö–∞—Ç–µ–≥–æ—Ä–∏—è</span>
                            <span class="detail-value">${category}</span>
                        </div>
                        <div class="detail-item">
                            <span class="detail-label">üìÖ –î–µ–¥–ª–∞–π–Ω</span>
                            <span class="detail-value">${deadline}</span>
                        </div>
                        <div class="detail-item">
                            <span class="detail-label">üìä –û—Ç–∫–ª–∏–∫–æ–≤</span>
                            <span class="detail-value">${responseCount}</span>
                        </div>
                        <div class="detail-item">
                            <span class="detail-label">üìÖ –°–æ–∑–¥–∞–Ω</span>
                            <span class="detail-value">${formattedDate}</span>
                        </div>
                    </div>
                </div>
                
                <div class="offer-description">
                    <p>${shortDescription}</p>
                </div>
                
                <div class="offer-actions">
                    <button class="btn btn-outline" onclick="editOffer(${offer.id})" title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å">
                        ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                    </button>
                    <button class="btn btn-primary" onclick="viewOfferDetails(${offer.id})" title="–ü–æ–¥—Ä–æ–±–Ω–µ–µ">
                        üëÅÔ∏è –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                    </button>
                    ${responseCount > 0 ? `
                    <button class="btn btn-success" onclick="viewResponses(${offer.id})" title="–ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç–∫–ª–∏–∫–æ–≤">
                        üí¨ –û—Ç–∫–ª–∏–∫–∏ (${responseCount})
                    </button>` : ''}
                </div>
                
                <div class="offer-meta">
                    <small class="text-muted">ID: ${offer.id}</small>
                </div>
            </div>
        `;
    });
    
    container.innerHTML = html;
    console.log('‚úÖ –û—Ñ—Ñ–µ—Ä—ã –æ—Ç—Ä–∏—Å–æ–≤–∞–Ω—ã');
}
'''
    
    print("\nüé® –ü–û–õ–ù–û–°–¢–¨–Æ –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø")
    print("-" * 50)
    print("–ó–∞–º–µ–Ω–∏—Ç–µ –≤—Å—é —Ñ—É–Ω–∫—Ü–∏—é renderOffers –Ω–∞ —ç—Ç—É –≤–µ—Ä—Å–∏—é:")
    print(fixed_render)

def create_price_debug_function():
    """–°–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ —Ü–µ–Ω"""
    
    debug_function = '''
// –û–¢–õ–ê–î–û–ß–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø - –¥–æ–±–∞–≤—å—Ç–µ –≤ offers.js –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏

function debugPrices() {
    console.log('üîç –û–¢–õ–ê–î–ö–ê –¶–ï–ù');
    console.log('=' * 40);
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ñ—Ñ–µ—Ä–æ–≤ –Ω–∞–ø—Ä—è–º—É—é
    fetch('/api/offers/my', {
        headers: {
            'X-Telegram-User-Id': getTelegramUserId()
        }
    })
    .then(response => response.json())
    .then(data => {
        if (data.success && data.offers) {
            console.log('üìä –ê–Ω–∞–ª–∏–∑ —Ü–µ–Ω –æ—Ñ—Ñ–µ—Ä–æ–≤:');
            
            data.offers.forEach((offer, index) => {
                console.log(`–û—Ñ—Ñ–µ—Ä ${index + 1}:`);
                console.log('  ID:', offer.id);
                console.log('  –ù–∞–∑–≤–∞–Ω–∏–µ:', offer.title);
                console.log('  –¶–µ–Ω–∞ (–∏—Å—Ö–æ–¥–Ω–∞—è):', offer.price);
                console.log('  –¢–∏–ø —Ü–µ–Ω—ã:', typeof offer.price);
                console.log('  –í–∞–ª—é—Ç–∞:', offer.currency);
                console.log('  –¶–µ–Ω–∞ (–æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è):', formatPrice(offer.price));
                console.log('  ---');
            });
        }
    })
    .catch(error => {
        console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö:', error);
    });
}

// –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–ª–∞–¥–∫–∏ —Ü–µ–Ω
document.addEventListener('DOMContentLoaded', function() {
    setTimeout(() => {
        const debugBtn = document.createElement('button');
        debugBtn.textContent = 'üí∞ –û—Ç–ª–∞–¥–∫–∞ —Ü–µ–Ω';
        debugBtn.style.cssText = 'position: fixed; top: 60px; right: 10px; z-index: 9999; background: #28a745; color: white; border: none; padding: 8px; border-radius: 5px; font-size: 12px;';
        debugBtn.onclick = debugPrices;
        document.body.appendChild(debugBtn);
    }, 1000);
});
'''
    
    print("\nüîç –û–¢–õ–ê–î–û–ß–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø")
    print("-" * 50)
    print("–î–æ–±–∞–≤—å—Ç–µ —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º —Å —Ü–µ–Ω–æ–π:")
    print(debug_function)

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üí∞ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –û–¢–û–ë–†–ê–ñ–ï–ù–ò–Ø –¶–ï–ù–´ –í –û–§–§–ï–†–ê–•")
    print("=" * 60)
    
    print("‚ùå –ü–†–û–ë–õ–ï–ú–ê: –¶–µ–Ω–∞ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ")
    print("üéØ –ü–†–ò–ß–ò–ù–´:")
    print("- –¶–µ–Ω–∞ –ø—Ä–∏—Ö–æ–¥–∏—Ç –∫–∞–∫ —Å—Ç—Ä–æ–∫–∞ –≤–º–µ—Å—Ç–æ —á–∏—Å–ª–∞")
    print("- –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ")
    print("- –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ edge cases")
    
    create_price_fix()
    create_complete_fixed_render()
    create_price_debug_function()
    
    print("\nüìã –ü–õ–ê–ù –î–ï–ô–°–¢–í–ò–ô:")
    print("1. –î–æ–±–∞–≤—å—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é formatPrice()")
    print("2. –ó–∞–º–µ–Ω–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é renderOffers() –ø–æ–ª–Ω–æ—Å—Ç—å—é")
    print("3. –î–æ–±–∞–≤—å—Ç–µ –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –∫–Ω–æ–ø–∫—É")
    print("4. –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ")
    
    print("\nüéØ –û–ñ–ò–î–ê–ï–ú–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢:")
    print("- –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ü–µ–Ω —Å —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è–º–∏ —Ç—ã—Å—è—á")
    print("- –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö")
    print("- –ö—Ä–∞—Å–∏–≤–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ —Ä—É—Å—Å–∫–æ–º —Å—Ç–∏–ª–µ")

if __name__ == '__main__':
    main()
