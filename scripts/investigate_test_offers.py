#!/usr/bin/env python3
"""
–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å —É–¥–∞–ª–µ–Ω–∏–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –æ—Ñ—Ñ–µ—Ä–æ–≤
–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —Ä–µ—à–µ–Ω–∏—è
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
sys.path.insert(0, os.path.join(os.path.dirname(__file__), '..'))

from working_app import create_app
from app.models.database import execute_db_query
import logging
import json

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def analyze_offers_and_users():
    """–ê–Ω–∞–ª–∏–∑ –≤—Å–µ—Ö –æ—Ñ—Ñ–µ—Ä–æ–≤ –∏ –∏—Ö –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤"""
    logger.info("=== –ê–Ω–∞–ª–∏–∑ –æ—Ñ—Ñ–µ—Ä–æ–≤ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ===")
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –æ—Ñ—Ñ–µ—Ä—ã —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å–æ–∑–¥–∞—Ç–µ–ª—è—Ö
        offers = execute_db_query("""
            SELECT o.id, o.title, o.status, o.created_at, 
                   o.created_by, u.telegram_id, u.username, u.first_name
            FROM offers o
            JOIN users u ON o.created_by = u.id
            ORDER BY o.created_at DESC
        """, fetch_all=True)
        
        logger.info(f"üìä –í—Å–µ–≥–æ –æ—Ñ—Ñ–µ—Ä–æ–≤ –≤ –ë–î: {len(offers)}")
        
        for offer in offers:
            logger.info(f"üéØ –û—Ñ—Ñ–µ—Ä ID: {offer['id']}")
            logger.info(f"   üìù –ù–∞–∑–≤–∞–Ω–∏–µ: {offer['title'][:50]}...")
            logger.info(f"   üë§ –°–æ–∑–¥–∞—Ç–µ–ª—å: {offer['username'] or '–ë–µ–∑ username'} (telegram_id: {offer['telegram_id']})")
            logger.info(f"   üìÖ –°–æ–∑–¥–∞–Ω: {offer['created_at']}")
            logger.info(f"   üè∑Ô∏è –°—Ç–∞—Ç—É—Å: {offer['status']}")
            logger.info("-" * 40)
        
        return offers
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ñ—Ñ–µ—Ä–æ–≤: {e}")
        return []

def test_delete_permissions():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∞–≤ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    logger.info("=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∞–≤ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ ===")
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    try:
        users = execute_db_query("""
            SELECT id, telegram_id, username, first_name 
            FROM users
        """, fetch_all=True)
        
        offers = execute_db_query("""
            SELECT id, title, created_by 
            FROM offers 
            ORDER BY id
        """, fetch_all=True)
        
        logger.info(f"üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ ({len(users)}):")
        for user in users:
            logger.info(f"   ID: {user['id']}, Telegram: {user['telegram_id']}, Username: {user.get('username', 'N/A')}")
        
        logger.info(f"üéØ –û—Ñ—Ñ–µ—Ä—ã ({len(offers)}):")
        for offer in offers:
            logger.info(f"   ID: {offer['id']}, –°–æ–∑–¥–∞—Ç–µ–ª—å: {offer['created_by']}, –ù–∞–∑–≤–∞–Ω–∏–µ: {offer['title'][:30]}...")
        
        return users, offers
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: {e}")
        return [], []

def try_delete_with_different_users(offer_id, users):
    """–ü—Ä–æ–±—É–µ–º —É–¥–∞–ª–∏—Ç—å –æ—Ñ—Ñ–µ—Ä –æ—Ç –∏–º–µ–Ω–∏ —Ä–∞–∑–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    logger.info(f"=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –æ—Ñ—Ñ–µ—Ä–∞ {offer_id} ===")
    
    app = create_app()
    
    for user in users:
        telegram_id = user['telegram_id']
        username = user.get('username', 'unknown')
        
        logger.info(f"üß™ –ü—Ä–æ–±—É–µ–º —É–¥–∞–ª–∏—Ç—å –æ—Ç –∏–º–µ–Ω–∏: {username} (telegram_id: {telegram_id})")
        
        with app.test_client() as client:
            headers = {
                'X-Telegram-User-Id': str(telegram_id),
                'Content-Type': 'application/json'
            }
            
            response = client.delete(f'/api/offers/{offer_id}', headers=headers)
            
            logger.info(f"   üìä HTTP —Å—Ç–∞—Ç—É—Å: {response.status_code}")
            
            try:
                data = response.get_json()
                if data:
                    if response.status_code == 200:
                        logger.info(f"   ‚úÖ –£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω: {data.get('message', 'N/A')}")
                        return True, telegram_id
                    else:
                        logger.info(f"   ‚ùå –û—à–∏–±–∫–∞: {data.get('error', 'N/A')}")
                else:
                    logger.info(f"   ‚ùå –ù–µ—Ç JSON –æ—Ç–≤–µ—Ç–∞")
            except Exception as e:
                logger.info(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞: {e}")
    
    return False, None

def create_admin_delete_utility():
    """–°–æ–∑–¥–∞–Ω–∏–µ —É—Ç–∏–ª–∏—Ç—ã –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è"""
    logger.info("=== –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω—Å–∫–æ–π —É—Ç–∏–ª–∏—Ç—ã —É–¥–∞–ª–µ–Ω–∏—è ===")
    
    utility_code = '''#!/usr/bin/env python3
"""
–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è —É—Ç–∏–ª–∏—Ç–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –æ—Ñ—Ñ–µ—Ä–æ–≤
–ò–°–ü–û–õ–¨–ó–£–ô–¢–ï –û–°–¢–û–†–û–ñ–ù–û!
"""

import sys
import os
sys.path.insert(0, os.path.join(os.path.dirname(__file__), '..'))

from app.models.database import execute_db_query
import sqlite3
from app.config.telegram_config import AppConfig

def admin_delete_offer(offer_id):
    """–ê–¥–º–∏–Ω—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –æ—Ñ—Ñ–µ—Ä–∞ –±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ñ—Ñ–µ—Ä–µ
        offer = execute_db_query(
            "SELECT id, title, created_by FROM offers WHERE id = ?",
            (offer_id,),
            fetch_one=True
        )
        
        if not offer:
            print(f"‚ùå –û—Ñ—Ñ–µ—Ä —Å ID {offer_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
        
        print(f"üéØ –ù–∞–π–¥–µ–Ω –æ—Ñ—Ñ–µ—Ä: {offer['title'][:50]}...")
        print(f"üë§ –°–æ–∑–¥–∞—Ç–µ–ª—å ID: {offer['created_by']}")
        
        confirm = input("‚ùì –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç –æ—Ñ—Ñ–µ—Ä? (yes/no): ")
        if confirm.lower() != 'yes':
            print("‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ")
            return False
        
        # –£–¥–∞–ª—è–µ–º –≤ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
        conn = sqlite3.connect(AppConfig.DATABASE_PATH)
        conn.execute('BEGIN TRANSACTION')
        
        try:
            # –£–¥–∞–ª—è–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            conn.execute('DELETE FROM offer_responses WHERE offer_id = ?', (offer_id,))
            conn.execute('DELETE FROM offer_proposals WHERE offer_id = ?', (offer_id,))
            conn.execute('DELETE FROM offers WHERE id = ?', (offer_id,))
            
            conn.commit()
            print(f"‚úÖ –û—Ñ—Ñ–µ—Ä {offer_id} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω")
            return True
            
        except Exception as e:
            conn.rollback()
            print(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: {e}")
            return False
        finally:
            conn.close()
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def list_all_offers():
    """–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –æ—Ñ—Ñ–µ—Ä–æ–≤"""
    try:
        offers = execute_db_query("""
            SELECT o.id, o.title, o.status, o.created_at,
                   u.username, u.telegram_id
            FROM offers o
            JOIN users u ON o.created_by = u.id
            ORDER BY o.id
        """, fetch_all=True)
        
        print(f"üìä –í—Å–µ–≥–æ –æ—Ñ—Ñ–µ—Ä–æ–≤: {len(offers)}")
        for offer in offers:
            print(f"ID: {offer['id']:2} | {offer['title'][:40]:40} | {offer['status']:8} | {offer['username'] or 'N/A':15} | {offer['telegram_id']}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    print("üîß –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–ò–í–ù–ê–Ø –£–¢–ò–õ–ò–¢–ê –£–î–ê–õ–ï–ù–ò–Ø –û–§–§–ï–†–û–í")
    print("=" * 50)
    
    if len(sys.argv) == 2:
        if sys.argv[1] == "list":
            list_all_offers()
        else:
            try:
                offer_id = int(sys.argv[1])
                admin_delete_offer(offer_id)
            except ValueError:
                print("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –æ—Ñ—Ñ–µ—Ä–∞")
    else:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
        print("  python3 admin_delete_offers.py list          # –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –æ—Ñ—Ñ–µ—Ä–æ–≤")
        print("  python3 admin_delete_offers.py <offer_id>    # –£–¥–∞–ª–∏—Ç—å –æ—Ñ—Ñ–µ—Ä –ø–æ ID")
'''
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —É—Ç–∏–ª–∏—Ç—É
    with open('/mnt/d/Project/scripts/admin_delete_offers.py', 'w', encoding='utf-8') as f:
        f.write(utility_code)
    
    logger.info("‚úÖ –£—Ç–∏–ª–∏—Ç–∞ —Å–æ–∑–¥–∞–Ω–∞: scripts/admin_delete_offers.py")
    logger.info("üìã –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
    logger.info("   python3 scripts/admin_delete_offers.py list")
    logger.info("   python3 scripts/admin_delete_offers.py <offer_id>")

def run_investigation():
    """–ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è"""
    logger.info("üîç –ù–∞—á–∏–Ω–∞–µ–º –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å —É–¥–∞–ª–µ–Ω–∏–µ–º –æ—Ñ—Ñ–µ—Ä–æ–≤")
    
    # –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö
    logger.info("-" * 60)
    offers = analyze_offers_and_users()
    
    logger.info("-" * 60)
    users, db_offers = test_delete_permissions()
    
    if offers and users:
        # –ü—Ä–æ–±—É–µ–º —É–¥–∞–ª–∏—Ç—å –ø–µ—Ä–≤—ã–π –æ—Ñ—Ñ–µ—Ä
        if db_offers:
            first_offer_id = db_offers[0]['id']
            logger.info("-" * 60)
            success, user_id = try_delete_with_different_users(first_offer_id, users[:2])  # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å 2 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
            
            if not success:
                logger.warning("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –æ—Ñ—Ñ–µ—Ä —á–µ—Ä–µ–∑ –æ–±—ã—á–Ω—ã–π API")
                logger.info("üí° –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—É—é —É—Ç–∏–ª–∏—Ç—É...")
                
                logger.info("-" * 60)
                create_admin_delete_utility()
    
    # –ò—Ç–æ–≥–æ–≤—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    logger.info("-" * 60)
    logger.info("üìã –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    logger.info("1. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—É—é —É—Ç–∏–ª–∏—Ç—É –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
    logger.info("2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å telegram_id –≤–ª–∞–¥–µ–ª—å—Ü–∞ –æ—Ñ—Ñ–µ—Ä–∞")
    logger.info("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ —á–µ—Ä–µ–∑ API —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π")
    
    return True

if __name__ == "__main__":
    run_investigation()