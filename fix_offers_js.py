#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ JavaScript –≤ app/static/js/offers.js
"""

import os
import shutil
from datetime import datetime

def backup_and_fix_js():
    """–°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º JavaScript"""
    
    js_file = 'app/static/js/offers.js'
    
    print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï app/static/js/offers.js")
    print("-" * 50)
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    try:
        backup_file = f'app/static/js/offers_backup_{datetime.now().strftime("%H%M%S")}.js'
        shutil.copy2(js_file, backup_file)
        print(f"‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: {backup_file}")
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é: {e}")
    
    # –ß–∏—Ç–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ñ–∞–π–ª
    try:
        with open(js_file, 'r', encoding='utf-8') as f:
            current_content = f.read()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {e}")
        return False
    
    # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π JavaScript –∫–æ–¥
    # –ù–∞—Ö–æ–¥–∏–º –∏ –∑–∞–º–µ–Ω—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é getTelegramUserId
    if 'function getTelegramUserId()' in current_content:
        print("‚úÖ –§—É–Ω–∫—Ü–∏—è getTelegramUserId —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –∑–∞–º–µ–Ω—è–µ–º")
    else:
        print("‚ûï –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é getTelegramUserId")
    
    # –ó–∞–º–µ–Ω—è–µ–º –∏–ª–∏ –¥–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
    fixed_function = '''
// ===== –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –ü–û–õ–£–ß–ï–ù–ò–Ø USER ID =====
function getTelegramUserId() {
    console.log('üîç –ü–æ–ª—É—á–µ–Ω–∏–µ Telegram User ID...');
    
    // –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–∑ Telegram WebApp
    if (window.Telegram && window.Telegram.WebApp && window.Telegram.WebApp.initDataUnsafe) {
        const user = window.Telegram.WebApp.initDataUnsafe.user;
        if (user && user.id) {
            console.log('‚úÖ User ID –∏–∑ Telegram WebApp:', user.id);
            return user.id.toString();
        }
    }
    
    // Fallback –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    const fallbackId = '373086959';
    console.log('‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º fallback User ID:', fallbackId);
    return fallbackId;
}

// ===== –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –ó–ê–ì–†–£–ó–ö–ò –û–§–§–ï–†–û–í =====
async function loadMyOffers() {
    console.log('üìã –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–∏—Ö –æ—Ñ—Ñ–µ—Ä–æ–≤...');
    const container = document.getElementById('offersGrid');

    if (!container) {
        console.error('‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä offersGrid –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return;
    }

    try {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        showOffersLoading();

        const userId = getTelegramUserId();
        console.log('üë§ –ò—Å–ø–æ–ª—å–∑—É–µ–º User ID:', userId);

        const response = await fetch('/api/offers/my', {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json',
                'X-Telegram-User-Id': userId
            }
        });

        console.log('üåê API Response Status:', response.status);
        
        if (!response.ok) {
            throw new Error(`HTTP ${response.status}: ${response.statusText}`);
        }

        const result = await response.json();
        console.log('üì¶ API Response Data:', result);

        if (result.success && result.offers && result.offers.length > 0) {
            console.log('‚úÖ –û—Ñ—Ñ–µ—Ä—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', result.offers.length);
            renderOffers(result.offers);
        } else {
            console.log('‚ÑπÔ∏è –û—Ñ—Ñ–µ—Ä–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
            showEmptyOffersState();
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ñ—Ñ–µ—Ä–æ–≤:', error);
        showOffersError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ñ—Ñ–µ—Ä–æ–≤: ' + error.message);
    }
}'''

    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –µ—Å–ª–∏ –µ—Å—Ç—å
    import re
    
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é —Ñ—É–Ω–∫—Ü–∏—é getTelegramUserId
    current_content = re.sub(
        r'function getTelegramUserId\(\)\s*{[^}]*}(\s*{[^}]*})*',
        '',
        current_content,
        flags=re.DOTALL
    )
    
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é —Ñ—É–Ω–∫—Ü–∏—é loadMyOffers  
    current_content = re.sub(
        r'async function loadMyOffers\(\)\s*{[^}]*}(\s*{[^}]*})*',
        '',
        current_content,
        flags=re.DOTALL
    )
    
    # –ù–∞—Ö–æ–¥–∏–º –º–µ—Å—Ç–æ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ (–ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram WebApp)
    insertion_point = current_content.find('// ===== –ó–ê–ì–†–£–ó–ö–ê –ú–û–ò–• –û–§–§–ï–†–û–í =====')
    
    if insertion_point == -1:
        # –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ —Å–µ–∫—Ü–∏—è, –≤—Å—Ç–∞–≤–ª—è–µ–º –≤ –Ω–∞—á–∞–ª–æ
        insertion_point = current_content.find('document.addEventListener(\'DOMContentLoaded\'')
        if insertion_point == -1:
            insertion_point = 0
    
    # –í—Å—Ç–∞–≤–ª—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
    new_content = (
        current_content[:insertion_point] + 
        fixed_function + 
        '\n\n' + 
        current_content[insertion_point:]
    )
    
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    try:
        with open(js_file, 'w', encoding='utf-8') as f:
            f.write(new_content)
        
        print("‚úÖ JavaScript –∏—Å–ø—Ä–∞–≤–ª–µ–Ω!")
        print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è getTelegramUserId")
        print("‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è loadMyOffers")
        print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ —Ñ–∞–π–ª–∞: {e}")
        return False

def create_minimal_fix():
    """–°–æ–∑–¥–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –µ—Å–ª–∏ –æ—Å–Ω–æ–≤–Ω–æ–µ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç"""
    
    print("\nüîß –°–û–ó–î–ê–ù–ò–ï –ú–ò–ù–ò–ú–ê–õ–¨–ù–û–ì–û –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø")
    print("-" * 50)
    
    minimal_js = '''
// –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ - –¥–æ–±–∞–≤—å—Ç–µ –≤ –Ω–∞—á–∞–ª–æ app/static/js/offers.js

// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è User ID
function getTelegramUserId() {
    return '373086959'; // –í–∞—à Telegram ID
}

// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ñ—Ñ–µ—Ä–æ–≤
async function loadMyOffers() {
    console.log('üìã –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–∏—Ö –æ—Ñ—Ñ–µ—Ä–æ–≤...');
    const container = document.getElementById('offersGrid');

    if (!container) {
        console.error('‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä offersGrid –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return;
    }

    try {
        const response = await fetch('/api/offers/my', {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json',
                'X-Telegram-User-Id': '373086959'
            }
        });

        console.log('API Response Status:', response.status);
        
        const result = await response.json();
        console.log('API Response Data:', result);

        if (result.success && result.offers && result.offers.length > 0) {
            console.log('‚úÖ –û—Ñ—Ñ–µ—Ä—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', result.offers.length);
            renderOffers(result.offers);
        } else {
            console.log('‚ÑπÔ∏è –û—Ñ—Ñ–µ—Ä–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
            showEmptyOffersState();
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ñ—Ñ–µ—Ä–æ–≤:', error);
        showOffersError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ñ—Ñ–µ—Ä–æ–≤: ' + error.message);
    }
}
'''
    
    print("–ï—Å–ª–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç,")
    print("–¥–æ–±–∞–≤—å—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –≤ –Ω–∞—á–∞–ª–æ app/static/js/offers.js:")
    print(minimal_js)

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï JAVASCRIPT –î–õ–Ø –û–¢–û–ë–†–ê–ñ–ï–ù–ò–Ø –û–§–§–ï–†–û–í")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if not os.path.exists('app/static/js/offers.js'):
        print("‚ùå –§–∞–π–ª app/static/js/offers.js –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º JavaScript
    if backup_and_fix_js():
        print("\nüéâ JAVASCRIPT –ò–°–ü–†–ê–í–õ–ï–ù!")
        print("\nüìã –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:")
        print("1. –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ (Ctrl+F5)")
        print("2. –û—Ç–∫—Ä–æ–π—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ (F12)")
        print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –æ—Ñ—Ñ–µ—Ä—ã –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è")
        print("4. –í –∫–æ–Ω—Å–æ–ª–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è: '‚úÖ –û—Ñ—Ñ–µ—Ä—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã: 5'")
    else:
        print("\n‚ö†Ô∏è –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ù–ï –£–î–ê–õ–û–°–¨")
        create_minimal_fix()

if __name__ == '__main__':
    main()
