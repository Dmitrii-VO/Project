#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
"""

import sqlite3
import os

# –ü—É—Ç—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
DATABASE_PATH = 'telegram_mini_app.db'

def check_and_fix_database():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    
    if not os.path.exists(DATABASE_PATH):
        print(f"‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö {DATABASE_PATH} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return
    
    print(f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {DATABASE_PATH}")
    
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        conn = sqlite3.connect(DATABASE_PATH)
        cursor = conn.cursor()
        
        # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã offer_responses
        print("\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã 'offer_responses':")
        cursor.execute("PRAGMA table_info(offer_responses)")
        columns = cursor.fetchall()
        
        if not columns:
            print("‚ùå –¢–∞–±–ª–∏—Ü–∞ 'offer_responses' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
            return
        
        print("   –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø–æ–ª—è:")
        column_names = []
        for col in columns:
            column_names.append(col[1])
            print(f"   - {col[1]} ({col[2]})")
        
        # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª—è channel_id
        if 'channel_id' in column_names:
            print("‚úÖ –ü–æ–ª–µ 'channel_id' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
        else:
            print("‚ö†Ô∏è  –ü–æ–ª–µ 'channel_id' –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç. –î–æ–±–∞–≤–ª—è–µ–º...")
            
            try:
                cursor.execute("ALTER TABLE offer_responses ADD COLUMN channel_id INTEGER")
                conn.commit()
                print("‚úÖ –ü–æ–ª–µ 'channel_id' —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ!")
            except sqlite3.Error as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—è: {e}")
        
        # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã contracts
        print("\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã 'contracts':")
        cursor.execute("PRAGMA table_info(contracts)")
        contracts_columns = cursor.fetchall()
        
        if contracts_columns:
            print("   –ü–æ–ª—è —Ç–∞–±–ª–∏—Ü—ã contracts:")
            for col in contracts_columns:
                print(f"   - {col[1]} ({col[2]})")
        else:
            print("‚ùå –¢–∞–±–ª–∏—Ü–∞ 'contracts' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        
        # 4. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:")
        
        # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ñ—Ñ–µ—Ä–æ–≤
        cursor.execute("SELECT COUNT(*) FROM offers")
        offers_count = cursor.fetchone()[0]
        print(f"   –û—Ñ—Ñ–µ—Ä–æ–≤: {offers_count}")
        
        # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–∫–ª–∏–∫–æ–≤
        cursor.execute("SELECT COUNT(*) FROM offer_responses")
        responses_count = cursor.fetchone()[0]
        print(f"   –û—Ç–∫–ª–∏–∫–æ–≤: {responses_count}")
        
        # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ (–µ—Å–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
        try:
            cursor.execute("SELECT COUNT(*) FROM contracts")
            contracts_count = cursor.fetchone()[0]
            print(f"   –ö–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤: {contracts_count}")
        except sqlite3.Error:
            print("   –ö–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤: —Ç–∞–±–ª–∏—Ü–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        
        # 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–∫–ª–∏–∫–∏ –±–µ–∑ channel_id
        if 'channel_id' in column_names:
            cursor.execute("SELECT COUNT(*) FROM offer_responses WHERE channel_id IS NULL")
            null_channel_count = cursor.fetchone()[0]
            if null_channel_count > 0:
                print(f"‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω–æ {null_channel_count} –æ—Ç–∫–ª–∏–∫–æ–≤ –±–µ–∑ channel_id")
                print("   –≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –æ—Ç–∫–ª–∏–∫–æ–≤.")
        
        conn.close()
        print("\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        
    except sqlite3.Error as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
    except Exception as e:
        print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    print("üõ†Ô∏è  –£—Ç–∏–ª–∏—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
    print("=" * 50)
    check_and_fix_database()
