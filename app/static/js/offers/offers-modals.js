/**
 * offers-modals.js
 * –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω—ã–º–∏ –æ–∫–Ω–∞–º–∏ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ—Ñ—Ñ–µ—Ä–æ–≤
 */

export class ModalManager {
    constructor() {
        this.activeModals = new Set();
        this.setupGlobalHandlers();
    }

    // –°–æ–∑–¥–∞–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    create(id, title, content, options = {}) {
        const { size = 'medium', closable = true, backdrop = true } = options;

        // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        this.close(id);

        const modal = document.createElement('div');
        modal.id = id;
        modal.className = `modal-overlay modal-${size}`;
        modal.innerHTML = `
            <div class="modal-content">
                <div class="modal-header">
                    <h3 class="modal-title">${title}</h3>
                    ${closable ? `<button class="modal-close" onclick="window.modalManager.close('${id}')">&times;</button>` : ''}
                </div>
                <div class="modal-body">${content}</div>
            </div>
        `;

        document.body.appendChild(modal);
        this.activeModals.add(id);

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
        setTimeout(() => modal.classList.add('active'), 10);

        return modal;
    }

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    close(modalId) {
        const modal = document.getElementById(modalId);
        if (modal) {
            modal.classList.remove('active');
            setTimeout(() => {
                modal.remove();
                this.activeModals.delete(modalId);
            }, 300);
        }
    }

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –≤—Å–µ—Ö –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
    closeAll() {
        this.activeModals.forEach(id => this.close(id));
    }

    // –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤—ã–±–æ—Ä–∞ –∫–∞–Ω–∞–ª–æ–≤
    createChannelSelection(offerId, offerTitle, channels, isDraft = false) {
        const channelsHtml = channels.map(channel => this.createChannelCard(channel)).join('');
        
        const content = `
            <div class="channel-selection">
                <div class="channel-selection-header">
                    <p>–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–Ω–∞–ª—ã –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –æ—Ñ—Ñ–µ—Ä–∞: <strong>${offerTitle}</strong></p>
                    <div class="channel-selection-stats">
                        <span id="selected-count">0</span> –∫–∞–Ω–∞–ª–æ–≤ –≤—ã–±—Ä–∞–Ω–æ
                    </div>
                </div>
                
                <div class="channel-filters">
                    <select id="channel-sort" onchange="window.modalManager.sortChannels(this.value)">
                        <option value="subscribers">–ü–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º</option>
                        <option value="price">–ü–æ —Ü–µ–Ω–µ</option>
                        <option value="engagement">–ü–æ –≤–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç–∏</option>
                    </select>
                </div>
                
                <div class="channels-grid" id="channels-grid">
                    ${channelsHtml}
                </div>
                
                <div class="channel-selection-actions">
                    <button class="btn btn-secondary" onclick="window.modalManager.close('channel-selection-modal')">
                        –û—Ç–º–µ–Ω–∞
                    </button>
                    <button class="btn btn-primary" onclick="window.modalManager.confirmChannelSelection('${offerId}', ${isDraft})">
                        ${isDraft ? '–ó–∞–≤–µ—Ä—à–∏—Ç—å –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å' : '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è'}
                    </button>
                </div>
            </div>
        `;

        return this.create('channel-selection-modal', 'üì∫ –í—ã–±–æ—Ä –∫–∞–Ω–∞–ª–æ–≤', content, { size: 'large' });
    }

    // –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–∏–Ω—è—Ç–∏—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
    createAcceptProposal(proposalId, offerTitle) {
        const content = `
            <div class="proposal-action">
                <p>–í—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å –ø—Ä–∏–Ω—è—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –æ—Ñ—Ñ–µ—Ä–∞: <strong>${offerTitle}</strong></p>
                
                <div class="form-field">
                    <label for="accept-price">–¶–µ–Ω–∞ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è (‚ÇΩ)</label>
                    <input type="number" id="accept-price" class="form-input" placeholder="–£–∫–∞–∂–∏—Ç–µ —Ü–µ–Ω—É" min="0" required>
                </div>
                
                <div class="form-field">
                    <label for="accept-comment">–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)</label>
                    <textarea id="accept-comment" class="form-input" placeholder="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –∏–ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏"></textarea>
                </div>
                
                <div class="form-field">
                    <label for="accept-deadline">–°—Ä–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è</label>
                    <input type="date" id="accept-deadline" class="form-input" min="${new Date().toISOString().split('T')[0]}">
                </div>
                
                <div class="form-actions">
                    <button class="btn btn-secondary" onclick="window.modalManager.close('accept-proposal-modal')">
                        –û—Ç–º–µ–Ω–∞
                    </button>
                    <button class="btn btn-primary" onclick="window.modalManager.submitAcceptProposal('${proposalId}')">
                        –ü—Ä–∏–Ω—è—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ
                    </button>
                </div>
            </div>
        `;

        return this.create('accept-proposal-modal', '‚úÖ –ü—Ä–∏–Ω—è—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ', content);
    }

    // –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
    createRejectProposal(proposalId, offerTitle) {
        const content = `
            <div class="proposal-action">
                <p>–í—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å –æ—Ç–∫–ª–æ–Ω–∏—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –æ—Ñ—Ñ–µ—Ä–∞: <strong>${offerTitle}</strong></p>
                
                <div class="form-field">
                    <label for="reject-reason">–ü—Ä–∏—á–∏–Ω–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è</label>
                    <select id="reject-reason" class="form-input" required>
                        <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É</option>
                        <option value="price">–ù–µ —É—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç —Ü–µ–Ω–∞</option>
                        <option value="timing">–ù–µ –ø–æ–¥—Ö–æ–¥—è—â–µ–µ –≤—Ä–µ–º—è</option>
                        <option value="content">–ù–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç</option>
                        <option value="audience">–ù–µ —Ü–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è</option>
                        <option value="other">–î—Ä—É–≥–∞—è –ø—Ä–∏—á–∏–Ω–∞</option>
                    </select>
                </div>
                
                <div class="form-field">
                    <label for="reject-comment">–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)</label>
                    <textarea id="reject-comment" class="form-input" placeholder="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ—è—Å–Ω–µ–Ω–∏—è"></textarea>
                </div>
                
                <div class="form-actions">
                    <button class="btn btn-secondary" onclick="window.modalManager.close('reject-proposal-modal')">
                        –û—Ç–º–µ–Ω–∞
                    </button>
                    <button class="btn btn-danger" onclick="window.modalManager.submitRejectProposal('${proposalId}')">
                        –û—Ç–∫–ª–æ–Ω–∏—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ
                    </button>
                </div>
            </div>
        `;

        return this.create('reject-proposal-modal', '‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ', content);
    }

    // –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è
    createDeleteConfirmation(offerId) {
        const content = `
            <div class="delete-confirmation">
                <div class="confirmation-icon">‚ö†Ô∏è</div>
                <h3>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è</h3>
                <p>–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç –æ—Ñ—Ñ–µ—Ä?</p>
                <p class="warning-text">–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –±—É–¥–µ—Ç –æ—Ç–º–µ–Ω–∏—Ç—å.</p>
                
                <div class="form-actions">
                    <button type="button" class="btn btn-secondary" onclick="window.modalManager?.close?.('delete-confirmation-modal')">
                        –û—Ç–º–µ–Ω–∞
                    </button>
                    <button type="button" class="btn btn-danger" onclick="window.modalManager?.confirmDelete?.('${offerId}')" style="background: #ef4444; color: white; border: 1px solid #ef4444;">
                        üóëÔ∏è –î–∞, —É–¥–∞–ª–∏—Ç—å
                    </button>
                </div>
            </div>
        `;

        const modal = this.create('delete-confirmation-modal', 'üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ñ—Ñ–µ—Ä–∞', content);
        console.log('üóëÔ∏è –°–æ–∑–¥–∞–Ω–æ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è –¥–ª—è –æ—Ñ—Ñ–µ—Ä–∞:', offerId);
        return modal;
    }

    // –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–µ—Ç–∞–ª–µ–π –æ—Ñ—Ñ–µ—Ä–∞
    createOfferDetails(offer) {
        const content = `
            <div class="offer-details">
                <div class="offer-meta">
                    <div class="meta-item">
                        <span class="meta-label">–°—Ç–∞—Ç—É—Å:</span>
                        <span class="status-badge ${offer.status}">${this.getStatusText(offer.status)}</span>
                    </div>
                    <div class="meta-item">
                        <span class="meta-label">–¶–µ–Ω–∞:</span>
                        <span class="meta-value">‚ÇΩ ${this.formatPrice(offer.price)}</span>
                    </div>
                    <div class="meta-item">
                        <span class="meta-label">–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</span>
                        <span class="meta-value">${offer.category || '–û–±—â–µ–µ'}</span>
                    </div>
                    <div class="meta-item">
                        <span class="meta-label">–°–æ–∑–¥–∞–Ω:</span>
                        <span class="meta-value">${this.formatDate(offer.created_at)}</span>
                    </div>
                </div>
                
                <div class="offer-description">
                    <h4>–û–ø–∏—Å–∞–Ω–∏–µ</h4>
                    <p>${offer.description || '–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}</p>
                </div>
                
                <div class="offer-actions">
                    <button class="btn btn-primary" onclick="window.modalManager.editOffer('${offer.id}')">
                        ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                    </button>
                    <button class="btn btn-secondary" onclick="window.modalManager.showOfferStats('${offer.id}')">
                        üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
                    </button>
                </div>
            </div>
        `;

        return this.create('offer-details-modal', `üìù ${offer.title || '–î–µ—Ç–∞–ª–∏ –æ—Ñ—Ñ–µ—Ä–∞'}`, content);
    }

    // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    showNotification(message, type = 'info', duration = 5000) {
        const notification = document.createElement('div');
        notification.className = `notification notification-${type}`;
        notification.innerHTML = `
            <div class="notification-content">
                <div class="notification-message">${message}</div>
                <button class="notification-close">&times;</button>
            </div>
        `;
        
        document.body.appendChild(notification);
        setTimeout(() => notification.classList.add('show'), 10);
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∫—Ä—ã—Ç–∏–µ
        setTimeout(() => {
            notification.classList.remove('show');
            setTimeout(() => notification.remove(), 300);
        }, duration);
        
        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É
        notification.querySelector('.notification-close').onclick = () => {
            notification.classList.remove('show');
            setTimeout(() => notification.remove(), 300);
        };
    }

    // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã
    createChannelCard(channel) {
        return `
            <div class="channel-card" data-channel-id="${channel.id}">
                <div class="channel-header">
                    <h4>${channel.title}</h4>
                    <input type="checkbox" class="channel-checkbox" onchange="window.modalManager.toggleChannelSelection(this, '${channel.id}')">
                </div>
                <div class="channel-meta">
                    <span>üë• ${this.formatNumber(channel.subscriber_count)} –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤</span>
                    <span>üí∞ ‚ÇΩ ${this.formatPrice(channel.price)}</span>
                </div>
            </div>
        `;
    }

    toggleChannelSelection(checkbox, channelId) {
        // –õ–æ–≥–∏–∫–∞ –≤—ã–±–æ—Ä–∞ –∫–∞–Ω–∞–ª–æ–≤
        this.updateSelectedCount();
    }

    updateSelectedCount() {
        const selected = document.querySelectorAll('.channel-checkbox:checked').length;
        const counter = document.getElementById('selected-count');
        if (counter) counter.textContent = selected;
    }

    sortChannels(sortBy) {
        // –õ–æ–≥–∏–∫–∞ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –∫–∞–Ω–∞–ª–æ–≤
        console.log('–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∫–∞–Ω–∞–ª–æ–≤ –ø–æ:', sortBy);
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
    async confirmChannelSelection(offerId, isDraft) {
        const selectedChannels = Array.from(document.querySelectorAll('.channel-checkbox:checked'))
            .map(cb => cb.closest('.channel-card').dataset.channelId);
        
        if (selectedChannels.length === 0) {
            this.showNotification('–í—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –∫–∞–Ω–∞–ª', 'warning');
            return;
        }

        try {
            // –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
            this.showNotification('–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!', 'success');
            this.close('channel-selection-modal');
        } catch (error) {
            this.showNotification('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π: ' + error.message, 'error');
        }
    }

    async submitAcceptProposal(proposalId) {
        const price = document.getElementById('accept-price').value;
        const comment = document.getElementById('accept-comment').value;
        const deadline = document.getElementById('accept-deadline').value;

        if (!price) {
            this.showNotification('–£–∫–∞–∂–∏—Ç–µ —Ü–µ–Ω—É —Ä–∞–∑–º–µ—â–µ–Ω–∏—è', 'warning');
            return;
        }

        try {
            // –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ –ø—Ä–∏–Ω—è—Ç–∏—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
            this.showNotification('–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–æ!', 'success');
            this.close('accept-proposal-modal');
        } catch (error) {
            this.showNotification('–û—à–∏–±–∫–∞: ' + error.message, 'error');
        }
    }

    async submitRejectProposal(proposalId) {
        const reason = document.getElementById('reject-reason').value;
        const comment = document.getElementById('reject-comment').value;

        if (!reason) {
            this.showNotification('–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è', 'warning');
            return;
        }

        try {
            // –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
            this.showNotification('–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ', 'success');
            this.close('reject-proposal-modal');
        } catch (error) {
            this.showNotification('–û—à–∏–±–∫–∞: ' + error.message, 'error');
        }
    }

    async confirmDelete(offerId) {
        console.log('üóëÔ∏è –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –æ—Ñ—Ñ–µ—Ä–∞:', offerId);
        
        try {
            // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
            this.close('delete-confirmation-modal');
            
            // –í—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ OffersManager
            if (window.offersManager) {
                console.log('‚úÖ –í—ã–∑—ã–≤–∞–µ–º confirmDeleteOffer –¥–ª—è –æ—Ñ—Ñ–µ—Ä–∞:', offerId);
                await window.offersManager.confirmDeleteOffer(offerId);
            } else {
                console.error('‚ùå –ú–µ–Ω–µ–¥–∂–µ—Ä –æ—Ñ—Ñ–µ—Ä–æ–≤ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
                this.showNotification('–û—à–∏–±–∫–∞: –º–µ–Ω–µ–¥–∂–µ—Ä –æ—Ñ—Ñ–µ—Ä–æ–≤ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω', 'error');
            }
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è:', error);
            this.showNotification('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: ' + error.message, 'error');
        }
    }

    // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    setupGlobalHandlers() {
        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        document.addEventListener('click', (event) => {
            if (event.target.classList.contains('modal-overlay')) {
                const modalId = event.target.id;
                if (modalId) this.close(modalId);
            }
        });

        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ Escape
        document.addEventListener('keydown', (event) => {
            if (event.key === 'Escape') {
                this.closeAll();
            }
        });
    }

    // –£—Ç–∏–ª–∏—Ç—ã —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    formatPrice(price) {
        const numericPrice = typeof price === 'string'
            ? parseFloat(price.replace(/[^0-9.,]/g, '').replace(',', '.')) || 0
            : (price || 0);
        return numericPrice === 0 ? '0' : numericPrice.toLocaleString('ru-RU');
    }

    formatNumber(num) {
        return num ? new Intl.NumberFormat('ru-RU').format(num) : '0';
    }

    formatDate(dateString) {
        if (!dateString) return '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
        try {
            const date = new Date(dateString);
            return date.toLocaleDateString('ru-RU', {
                year: 'numeric', month: 'short', day: 'numeric',
                hour: '2-digit', minute: '2-digit'
            });
        } catch (error) {
            return '–û—à–∏–±–∫–∞ –¥–∞—Ç—ã';
        }
    }

    getStatusText(status) {
        const statusTexts = {
            active: '‚úÖ –ê–∫—Ç–∏–≤–µ–Ω',
            draft: 'üìù –ß–µ—Ä–Ω–æ–≤–∏–∫', 
            completed: '‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω',
            paused: '‚è∏Ô∏è –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'
        };
        return statusTexts[status] || statusTexts.active;
    }
}