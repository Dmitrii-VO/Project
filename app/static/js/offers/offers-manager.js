/**
 * offers-manager.js
 * –û—Å–Ω–æ–≤–Ω–æ–π –º–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ñ—Ñ–µ—Ä–∞–º–∏
 */

import { OffersAPI } from './offers-api.js';
import { OffersTemplates } from './offers-templates.js';
import { ModalManager } from './offers-modals.js';

export class OffersManager {
    constructor() {
        this.api = new OffersAPI();
        this.templates = OffersTemplates;
        this.modals = new ModalManager();
        this.currentTab = 'my-offers';
        this.filters = {};
        this.isInitialized = false;
    }

    async init() {
        if (this.isInitialized) {
            console.log('‚ö†Ô∏è OffersManager —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
            return;
        }

        console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è OffersManager');
        
        try {
            this.setupEventListeners();
            this.setupTabSwitching();
            this.checkAdminAccess();
            await this.loadInitialData();
            this.isInitialized = true;
            console.log('‚úÖ OffersManager —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ OffersManager:', error);
            this.modals.showNotification('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏', 'error');
        }
    }

    setupEventListeners() {
        // –ü–æ–∏—Å–∫ –æ—Ñ—Ñ–µ—Ä–æ–≤
        const searchInput = document.getElementById('offersSearch');
        if (searchInput) {
            searchInput.addEventListener('input', this.debounce(() => {
                this.searchOffers(searchInput.value);
            }, 300));
        }

        // –§–∏–ª—å—Ç—Ä—ã –ø–æ–∏—Å–∫–∞
        const filterElements = ['findCategoryFilter', 'findBudgetMin', 'findBudgetMax', 'findMinSubscribers'];
        filterElements.forEach(id => {
            const element = document.getElementById(id);
            if (element) {
                element.addEventListener('change', () => this.updateFilters());
            }
        });

        // –§–æ—Ä–º–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ñ—Ñ–µ—Ä–∞
        const createOfferForm = document.getElementById('autoOfferForm');
        if (createOfferForm) {
            createOfferForm.addEventListener('submit', (e) => this.handleCreateOffer(e));
        }

        // –§–æ—Ä–º–∞ –∫–∞–º–ø–∞–Ω–∏–∏
        const campaignForm = document.getElementById('campaignForm');
        if (campaignForm) {
            campaignForm.addEventListener('submit', (e) => this.handleCreateCampaign(e));
        }

        // –§–∏–ª—å—Ç—Ä—ã –º–æ–¥–µ—Ä–∞—Ü–∏–∏
        const moderationStatusFilter = document.getElementById('moderationStatusFilter');
        const moderationSearch = document.getElementById('moderationSearch');
        
        if (moderationStatusFilter) {
            moderationStatusFilter.addEventListener('change', () => this.loadModerationOffers());
        }
        
        if (moderationSearch) {
            moderationSearch.addEventListener('input', this.debounce(() => {
                this.loadModerationOffers();
            }, 300));
        }
    }

    setupTabSwitching() {
        document.querySelectorAll('.tabs-nav a').forEach(tab => {
            tab.addEventListener('click', (e) => {
                e.preventDefault();
                const tabName = tab.getAttribute('data-tab');
                this.switchTab(tabName);
            });
        });
    }

    async switchTab(tabName) {
        console.log(`üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É: ${tabName}`);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é
        document.querySelectorAll('.tabs-nav a').forEach(tab => tab.classList.remove('active'));
        document.querySelectorAll('.tabs-content').forEach(content => content.classList.remove('active'));
        
        const activeTab = document.querySelector(`[data-tab="${tabName}"]`);
        const activeContent = document.getElementById(tabName);
        
        if (activeTab) activeTab.classList.add('active');
        if (activeContent) activeContent.classList.add('active');
        
        this.currentTab = tabName;
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏
        await this.loadTabData(tabName);
    }

    async loadTabData(tabName) {
        switch (tabName) {
            case 'my-offers':
                await this.loadMyOffers();
                break;
            case 'find-offer':
                await this.loadAvailableOffers();
                break;
            case 'create-offer':
                this.setupCreateOfferForm();
                break;
            case 'campaigns':
                this.setupCampaignForm();
                break;
            case 'admin-moderation':
                console.log('üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –∞–¥–º–∏–Ω-–º–æ–¥–µ—Ä–∞—Ü–∏—é');
                
                // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤–∫–ª–∞–¥–∫—É
                const adminContent = document.getElementById('admin-moderation');
                if (adminContent) {
                    adminContent.style.display = 'block';
                    console.log('‚úÖ –ê–¥–º–∏–Ω –∫–æ–Ω—Ç–µ–Ω—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–æ–∫–∞–∑–∞–Ω');
                } else {
                    console.error('‚ùå –≠–ª–µ–º–µ–Ω—Ç admin-moderation –Ω–µ –Ω–∞–π–¥–µ–Ω!');
                }
                
                await this.loadModerationOffers();
                break;
        }
    }

    async loadInitialData() {
        await this.loadMyOffers();
    }

    async loadMyOffers() {
        const container = document.getElementById('offersGrid');
        if (!container) return;

        try {
            this.showLoading(container, '–ó–∞–≥—Ä—É–∑–∫–∞ –≤–∞—à–∏—Ö –æ—Ñ—Ñ–µ—Ä–æ–≤...');
            
            // –ü–æ–ø—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            try {
                console.log('üîç –ó–∞–ø—Ä–æ—Å getMyOffers()...');
                const result = await this.api.getMyOffers();
                console.log('üì° –û—Ç–≤–µ—Ç API:', result);
                
                if (result && result.success) {
                    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö:');
                    console.log('- result.data:', result.data);
                    console.log('- result.data.offers:', result.data?.offers);
                    console.log('- Array.isArray(result.data.offers):', Array.isArray(result.data?.offers));
                    console.log('- result.data.offers.length:', result.data?.offers?.length);
                    
                    if (result.data && result.data.offers && Array.isArray(result.data.offers) && result.data.offers.length > 0) {
                        console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –æ—Ñ—Ñ–µ—Ä–æ–≤: ${result.data.offers.length}`);
                        this.renderOffers(result.data.offers, container);
                        this.hideEmptyState();
                    } else {
                        console.log('‚ÑπÔ∏è –û—Ñ—Ñ–µ—Ä–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Å—Ç–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ');
                        console.log('üìä –î–∞–Ω–Ω—ã–µ –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—É—á–∏–ª–∏:', JSON.stringify(result.data, null, 2));
                        this.showEmpty(container, '–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –æ—Ñ—Ñ–µ—Ä–æ–≤', '–°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –æ—Ñ—Ñ–µ—Ä –¥–ª—è –ø–æ–∏—Å–∫–∞ –∫–∞–Ω–∞–ª–æ–≤', 
                            '<button class="btn btn-primary" onclick="window.offersManager?.switchTab(\'create-offer\')">–°–æ–∑–¥–∞—Ç—å –æ—Ñ—Ñ–µ—Ä</button>');
                    }
                    return;
                } else {
                    console.log('‚ùå API –≤–µ—Ä–Ω—É–ª –Ω–µ—É—Å–ø–µ—à–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:', result);
                    this.showError(container, '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –æ—Ñ—Ñ–µ—Ä—ã');
                    return;
                }
            } catch (apiError) {
                console.error('‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ API:', apiError);
                this.showError(container, '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ' + apiError.message);
                return;
            }
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ñ—Ñ–µ—Ä–æ–≤:', error);
            this.showEmptyState();
        }
    }

    async loadAvailableOffers() {
        const container = document.getElementById('findOffersGrid');
        if (!container) return;

        try {
            this.showLoading(container, '–ü–æ–∏—Å–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –æ—Ñ—Ñ–µ—Ä–æ–≤...');
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Ö–æ–¥—è—â–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ –∫–∞–Ω–∞–ª–æ–≤
            try {
                const response = await fetch('/api/proposals/incoming', {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Telegram-User-Id': window.getTelegramUserId?.() || '373086959'
                    }
                });

                const result = await response.json();
                
                if (response.ok && result.success) {
                    if (result.proposals && result.proposals.length > 0) {
                        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç –æ—Ñ—Ñ–µ—Ä–æ–≤ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ proposal_id
                        const proposalsAsOffers = result.proposals.map(proposal => ({
                            id: proposal.id, // ID –æ—Ñ—Ñ–µ—Ä–∞
                            proposal_id: proposal.proposal_id, // ID –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
                            proposal_status: proposal.proposal_status, // –°—Ç–∞—Ç—É—Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
                            title: proposal.title,
                            description: proposal.description,
                            price: proposal.price,
                            currency: proposal.currency || 'RUB',
                            status: 'active', // –î–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
                            target_audience: proposal.target_audience,
                            creator_name: proposal.creator_name,
                            first_name: proposal.first_name,
                            channel_title: proposal.channel_title,
                            can_respond: proposal.can_respond,
                            is_expired: proposal.is_expired
                        }));
                        
                        this.renderOffers(proposalsAsOffers, container);
                        console.log(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π: ${result.proposals.length}`);
                    } else {
                        this.showEmpty(container, '–ù–µ—Ç –≤—Ö–æ–¥—è—â–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π', '–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –æ—Ç —Ä–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª–µ–π');
                    }
                    return;
                } else {
                    throw new Error(result.message || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π');
                }
            } catch (apiError) {
                console.error('‚ùå –û—à–∏–±–∫–∞ API proposals/incoming:', apiError);
                
                // Fallback –Ω–∞ –æ–±—ã—á–Ω—ã–µ –æ—Ñ—Ñ–µ—Ä—ã
                try {
                    const result = await this.api.getOffers(this.filters);
                    
                    if (result.success) {
                        if (result.data && result.data.offers && result.data.offers.length > 0) {
                            this.renderOffers(result.data.offers, container);
                        } else {
                            this.showEmpty(container, '–û—Ñ—Ñ–µ—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã', '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã –ø–æ–∏—Å–∫–∞');
                        }
                        return;
                    }
                } catch (fallbackError) {
                    console.error('‚ùå –û—à–∏–±–∫–∞ fallback API:', fallbackError);
                }
                
                this.showError(container, '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ' + apiError.message);
                return;
            }
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –æ—Ñ—Ñ–µ—Ä–æ–≤:', error);
            this.showEmpty(container, '–û—Ñ—Ñ–µ—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã', '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã –ø–æ–∏—Å–∫–∞');
        }
    }

    renderOffers(offers, container) {
        const offersHtml = offers.map(offer => this.templates.offerCard(offer)).join('');
        container.innerHTML = `<div class="offers-list">${offersHtml}</div>`;
    }

    async handleCreateOffer(event) {
        event.preventDefault();
        
        const submitBtn = event.target.querySelector('button[type="submit"]');
        const originalText = submitBtn.textContent;
        
        try {
            submitBtn.disabled = true;
            submitBtn.textContent = '‚è≥ –°–æ–∑–¥–∞–µ–º –æ—Ñ—Ñ–µ—Ä...';
            
            const formData = new FormData(event.target);
            const offerData = {
                title: '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–¥–±–æ—Ä –∫–∞–Ω–∞–ª–æ–≤',
                description: formData.get('description'),
                target_audience: '–í–ª–∞–¥–µ–ª—å—Ü—ã –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã Telegram –∫–∞–Ω–∞–ª–æ–≤, –∏—â—É—â–∏–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ä–µ–∫–ª–∞–º–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç',
                price: Math.min(parseInt(formData.get('budget')) * 0.1, 50000),
                budget_total: parseInt(formData.get('budget')),
                category: 'general',
                currency: 'RUB',
                content: formData.get('description'),
                requirements: '–†–∞–∑–º–µ—â–µ–Ω–∏–µ —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º–∏ –ø–ª–æ—â–∞–¥–∫–∏',
                deadline: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0] // +30 –¥–Ω–µ–π
            };
            
            console.log('üìã –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ñ—Ñ–µ—Ä–∞:', offerData);
            
            const result = await this.api.createOffer(offerData);
            
            if (result.success) {
                console.log('‚úÖ –û—Ñ—Ñ–µ—Ä —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ:', result.data);
                this.modals.showNotification('–û—Ñ—Ñ–µ—Ä —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!', 'success');
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤—ã–±–æ—Ä–∞ –∫–∞–Ω–∞–ª–æ–≤, –µ—Å–ª–∏ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ –æ—Ñ—Ñ–µ—Ä–∞
                if (result.data && result.data.offer_id) {
                    const offerId = result.data.offer_id;
                    const offerTitle = result.data.offer?.title || offerData.title;
                    const offer = result.data.offer || offerData;
                    await this.showChannelSelection(offerId, offerTitle, false, offer);
                }
                
                event.target.reset();
                this.switchTab('my-offers');
            } else {
                throw new Error(result.error || '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ñ—Ñ–µ—Ä–∞');
            }
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ñ—Ñ–µ—Ä–∞:', error);
            this.modals.showNotification(`–û—à–∏–±–∫–∞: ${error.message}`, 'error');
        } finally {
            submitBtn.disabled = false;
            submitBtn.textContent = originalText;
        }
    }

    async handleCreateCampaign(event) {
        event.preventDefault();
        
        const submitBtn = event.target.querySelector('button[type="submit"]');
        const originalText = submitBtn.textContent;
        
        try {
            submitBtn.disabled = true;
            submitBtn.textContent = '‚è≥ –°–æ–∑–¥–∞–µ–º –∫–∞–º–ø–∞–Ω–∏—é...';
            
            const formData = new FormData(event.target);
            const campaignData = {
                name: formData.get('name'),
                budget_limit: parseFloat(formData.get('budget_limit')),
                add_utm_tags: formData.has('add_utm_tags'),
                track_clicks: formData.has('track_clicks'),
                start_date: formData.get('start_date'),
                end_date: formData.get('end_date'),
                work_weekends: formData.has('work_weekends'),
                work_hours_only: formData.has('work_hours_only'),
                advertiser_type: formData.get('advertiser_type'),
                product_name: formData.get('product_name'),
                advertiser_inn: formData.get('advertiser_inn'),
                ad_content: formData.get('ad_content'),
                status: 'active'
            };
            
            console.log('üìã –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞–º–ø–∞–Ω–∏–∏:', campaignData);
            
            // –ó–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å API –≤—ã–∑–æ–≤ –¥–ª—è –∫–∞–º–ø–∞–Ω–∏–π
            // const result = await this.api.createCampaign(campaignData);
            
            this.modals.showNotification('–ö–∞–º–ø–∞–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!', 'success');
            event.target.reset();
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞–º–ø–∞–Ω–∏–∏:', error);
            this.modals.showNotification(`–û—à–∏–±–∫–∞: ${error.message}`, 'error');
        } finally {
            submitBtn.disabled = false;
            submitBtn.textContent = originalText;
        }
    }

    async showChannelSelection(offerId, offerTitle, isDraft = false, offerData = null) {
        try {
            console.log(`üîç –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±–æ—Ä –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è –æ—Ñ—Ñ–µ—Ä–∞ ${offerId}: "${offerTitle}" (isDraft: ${isDraft})`);
            
            // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
            const recommendationData = {
                offer_id: offerId,
                title: offerTitle
            };
            
            // –ï—Å–ª–∏ –µ—Å—Ç—å –ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ñ—Ñ–µ—Ä–∞, –¥–æ–±–∞–≤–ª—è–µ–º –∏—Ö
            if (offerData) {
                recommendationData.description = offerData.description || '';
                recommendationData.target_audience = offerData.target_audience || '';
                recommendationData.price = offerData.price || offerData.budget_total || 0;
                recommendationData.category = offerData.category || 'general';
            }
            
            console.log(`üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π:`, recommendationData);
            
            const channelsResult = await this.api.getRecommendedChannels(recommendationData);
            
            if (channelsResult.success && channelsResult.channels) {
                console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${channelsResult.channels.length} —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤`);
                this.modals.createChannelSelection(offerId, offerTitle, channelsResult.channels, isDraft);
            } else {
                console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–∞–Ω–∞–ª—ã:', channelsResult.error);
                this.modals.showNotification('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–∞–Ω–∞–ª—ã –¥–ª—è –≤—ã–±–æ—Ä–∞', 'error');
            }
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞–Ω–∞–ª–æ–≤:', error);
            this.modals.showNotification('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞–Ω–∞–ª–æ–≤: ' + error.message, 'error');
        }
    }

    async completeOffer(offerId) {
        try {
            console.log(`üöÄ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –æ—Ñ—Ñ–µ—Ä–∞ ${offerId}`, typeof offerId);
            
            if (!offerId) {
                throw new Error('ID –æ—Ñ—Ñ–µ—Ä–∞ –Ω–µ —É–∫–∞–∑–∞–Ω');
            }
            
            // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ñ—Ñ–µ—Ä–µ
            const offerResult = await this.api.getOfferDetails(offerId);
            
            console.log('üîç –†–µ–∑—É–ª—å—Ç–∞—Ç API getOfferDetails:', offerResult);
            
            if (!offerResult.success) {
                throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ñ—Ñ–µ—Ä–µ');
            }
            
            // API –º–æ–∂–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ —Ä–∞–∑–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ
            let offer = null;
            
            if (offerResult.data && offerResult.data.offer) {
                // –°—Ç—Ä—É–∫—Ç—É—Ä–∞: { success: true, data: { offer: {...} } }
                offer = offerResult.data.offer;
            } else if (offerResult.data) {
                // –°—Ç—Ä—É–∫—Ç—É—Ä–∞: { success: true, data: {...} }
                offer = offerResult.data;
            } else {
                // –ü—Ä—è–º–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ñ—Ñ–µ—Ä–∞
                offer = offerResult;
            }
            
            console.log('üìã –î–∞–Ω–Ω—ã–µ –æ—Ñ—Ñ–µ—Ä–∞:', offer);
            console.log('üìä –°—Ç–∞—Ç—É—Å –æ—Ñ—Ñ–µ—Ä–∞:', offer?.status);
            
            if (!offer) {
                throw new Error('–î–∞–Ω–Ω—ã–µ –æ—Ñ—Ñ–µ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –æ—Ç–≤–µ—Ç–µ API');
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
            if (offer.status !== 'draft') {
                this.modals.showNotification(`–ù–µ–ª—å–∑—è –∑–∞–≤–µ—Ä—à–∏—Ç—å –æ—Ñ—Ñ–µ—Ä —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º: ${offer.status}`, 'error');
                return;
            }
            
            // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤—ã–±–æ—Ä–∞ –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è —á–µ—Ä–Ω–æ–≤–∏–∫–∞
            await this.showChannelSelection(offerId, offer.title, true, offer);
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ—Ñ—Ñ–µ—Ä–∞:', error);
            this.modals.showNotification('–û—à–∏–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ—Ñ—Ñ–µ—Ä–∞: ' + error.message, 'error');
        }
    }

    async showOfferStats(offerId) {
        try {
            console.log(`üìä –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–ª—è –æ—Ñ—Ñ–µ—Ä–∞ ${offerId}`);
            
            // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ—Ñ—Ñ–µ—Ä–∞
            const statsResult = await this.api.getOfferStatistics(offerId);
            
            if (statsResult.success) {
                // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
                this.modals.showOfferStatistics(offerId, statsResult.data);
            } else {
                this.modals.showNotification('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É', 'error');
            }
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
            this.modals.showNotification('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: ' + error.message, 'error');
        }
    }

    setupCreateOfferForm() {
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–æ—Ä–º—ã —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ñ—Ñ–µ—Ä–∞
        const today = new Date().toISOString().split('T')[0];
        const budgetInput = document.getElementById('offerBudget');
        if (budgetInput && !budgetInput.value) {
            budgetInput.value = '20000';
        }
    }

    setupCampaignForm() {
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–æ—Ä–º—ã –∫–∞–º–ø–∞–Ω–∏–∏
        const today = new Date().toISOString().split('T')[0];
        const startDateInput = document.getElementById('campaignStartDate');
        const endDateInput = document.getElementById('campaignEndDate');
        
        if (startDateInput) startDateInput.min = today;
        if (endDateInput) endDateInput.min = today;
        
        // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞—Ç
        if (startDateInput) {
            startDateInput.addEventListener('change', () => {
                if (endDateInput) {
                    endDateInput.min = startDateInput.value;
                    if (endDateInput.value && endDateInput.value < startDateInput.value) {
                        endDateInput.value = startDateInput.value;
                    }
                }
            });
        }
    }

    searchOffers(query) {
        this.filters.search = query;
        if (this.currentTab === 'find-offer') {
            this.loadAvailableOffers();
        }
    }

    updateFilters() {
        this.filters = {
            category: document.getElementById('findCategoryFilter')?.value || '',
            budget_min: document.getElementById('findBudgetMin')?.value || '',
            budget_max: document.getElementById('findBudgetMax')?.value || '',
            min_subscribers: document.getElementById('findMinSubscribers')?.value || ''
        };
        
        if (this.currentTab === 'find-offer') {
            this.loadAvailableOffers();
        }
    }

    clearFilters() {
        this.filters = {};
        document.getElementById('findCategoryFilter').value = '';
        document.getElementById('findBudgetMin').value = '';
        document.getElementById('findBudgetMax').value = '';
        document.getElementById('findMinSubscribers').value = '';
        
        if (this.currentTab === 'find-offer') {
            this.loadAvailableOffers();
        }
    }

    // UI —Å–æ—Å—Ç–æ—è–Ω–∏—è
    showLoading(container, message = '–ó–∞–≥—Ä—É–∑–∫–∞...') {
        container.innerHTML = this.templates.loadingState(message);
    }

    showError(container, message) {
        container.innerHTML = this.templates.errorState(message, () => this.loadTabData(this.currentTab));
    }

    showEmpty(container, title, description, action = null) {
        container.innerHTML = this.templates.emptyState(title, description, action);
    }

    showEmptyState() {
        const emptyState = document.getElementById('emptyOffersState');
        if (emptyState) emptyState.style.display = 'block';
    }

    hideEmptyState() {
        const emptyState = document.getElementById('emptyOffersState');
        if (emptyState) emptyState.style.display = 'none';
    }

    // –£—Ç–∏–ª–∏—Ç—ã
    debounce(func, wait) {
        let timeout;
        return function executedFunction(...args) {
            const later = () => {
                clearTimeout(timeout);
                func(...args);
            };
            clearTimeout(timeout);
            timeout = setTimeout(later, wait);
        };
    }

    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è "–ú–æ–∏ –æ—Ñ—Ñ–µ—Ä—ã"
    generateTestOffers() {
        return [
            {
                id: 1,
                title: '–†–µ–∫–ª–∞–º–∞ –∫—É—Ä—Å–æ–≤ –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é',
                description: '–ò—â–µ–º –∫–∞–Ω–∞–ª—ã –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è —Ä–µ–∫–ª–∞–º—ã –æ–Ω–ª–∞–π–Ω-–∫—É—Ä—Å–æ–≤ –ø–æ Python, JavaScript –∏ React. –¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è - –Ω–∞—á–∏–Ω–∞—é—â–∏–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏.',
                price: 15000,
                budget_total: 50000,
                category: 'education',
                status: 'active',
                created_at: new Date().toISOString()
            },
            {
                id: 2,
                title: '–ü—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è',
                description: '–¢—Ä–µ–±—É–µ—Ç—Å—è —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ —Ä–µ–∫–ª–∞–º—ã –Ω–æ–≤–æ–≥–æ —Ñ–∏—Ç–Ω–µ—Å-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è. –ò—â–µ–º –∫–∞–Ω–∞–ª—ã –æ –∑–¥–æ—Ä–æ–≤—å–µ, —Å–ø–æ—Ä—Ç–µ –∏ –ó–û–ñ.',
                price: 25000,
                budget_total: 80000,
                category: 'lifestyle',
                status: 'draft',
                created_at: new Date().toISOString()
            },
            {
                id: 3,
                title: '–†–µ–∫–ª–∞–º–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —É—Å–ª—É–≥',
                description: '–†–∞–∑–º–µ—â–µ–Ω–∏–µ —Ä–µ–∫–ª–∞–º—ã –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã—Ö —É—Å–ª—É–≥.',
                price: 30000,
                budget_total: 100000,
                category: 'finance',
                status: 'completed',
                created_at: new Date().toISOString()
            }
        ];
    }

    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è "–ù–∞–π—Ç–∏ –æ—Ñ—Ñ–µ—Ä"
    generateAvailableTestOffers() {
        return [
            {
                id: 101,
                title: '–†–µ–∫–ª–∞–º–∞ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞–ø–∞',
                description: '–ò—â–µ–º –∫–∞–Ω–∞–ª—ã –¥–ª—è –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è –Ω–æ–≤–æ–π SaaS –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞–º–∏. –ë—é–¥–∂–µ—Ç –¥–æ 200–∫ —Ä—É–±–ª–µ–π.',
                price: 20000,
                budget_total: 200000,
                category: 'tech',
                status: 'active',
                created_at: new Date().toISOString()
            },
            {
                id: 102,
                title: '–ü—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞',
                description: '–¢—Ä–µ–±—É–µ—Ç—Å—è —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ —Ä–µ–∫–ª–∞–º—ã –æ–Ω–ª–∞–π–Ω-—à–∫–æ–ª—ã –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞. –ò—â–µ–º –∫–∞–Ω–∞–ª—ã –æ–± –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏ –∏ —Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–∏.',
                price: 12000,
                budget_total: 150000,
                category: 'education',
                status: 'active',
                created_at: new Date().toISOString()
            },
            {
                id: 103,
                title: '–†–µ–∫–ª–∞–º–∞ e-commerce –ø—Ä–æ–µ–∫—Ç–∞',
                description: '–ü—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –¥–æ–º–∞. –¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è - –¥–æ–º–æ—Ö–æ–∑—è–π–∫–∏ –∏ —Å–µ–º—å–∏.',
                price: 18000,
                budget_total: 120000,
                category: 'business',
                status: 'active',
                created_at: new Date().toISOString()
            },
            {
                id: 104,
                title: '–†–µ–∫–ª–∞–º–∞ —Ñ–∏–Ω—Ç–µ—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è',
                description: '–†–∞–∑–º–µ—â–µ–Ω–∏–µ —Ä–µ–∫–ª–∞–º—ã –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π. –ò—â–µ–º —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –∫–∞–Ω–∞–ª—ã.',
                price: 35000,
                budget_total: 300000,
                category: 'finance',
                status: 'active',
                created_at: new Date().toISOString()
            },
            {
                id: 105,
                title: '–ü—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ —Ä–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞',
                description: '–†–µ–∫–ª–∞–º–∞ –Ω–æ–≤–æ–≥–æ –∏–≥—Ä–æ–≤–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤.',
                price: 22000,
                budget_total: 180000,
                category: 'entertainment',
                status: 'active',
                created_at: new Date().toISOString()
            }
        ];
    }

    // –ü—É–±–ª–∏—á–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
    showOfferDetails(offerId) {
        // –õ–æ–≥–∏–∫–∞ –ø–æ–∫–∞–∑–∞ –¥–µ—Ç–∞–ª–µ–π –æ—Ñ—Ñ–µ—Ä–∞
        console.log('–ü–æ–∫–∞–∑ –¥–µ—Ç–∞–ª–µ–π –æ—Ñ—Ñ–µ—Ä–∞:', offerId);
        this.modals.showNotification(`–ü—Ä–æ—Å–º–æ—Ç—Ä –¥–µ—Ç–∞–ª–µ–π –æ—Ñ—Ñ–µ—Ä–∞ ${offerId}`, 'info');
    }

    async editOffer(offerId) {
        console.log('‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ñ—Ñ–µ—Ä–∞:', offerId);
        
        try {
            // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ñ—Ñ–µ—Ä–∞
            const response = await fetch(`/api/offers_moderation/${offerId}`, {
                headers: {
                    'X-Telegram-User-Id': window.getTelegramUserId?.() || '373086959'
                }
            });
            
            const result = await response.json();
            
            if (result.success) {
                const offer = result.data;
                console.log('üìã –î–∞–Ω–Ω—ã–µ –æ—Ñ—Ñ–µ—Ä–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', offer);
                
                // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                this.modals.createEditOffer(offer);
            } else {
                throw new Error(result.error || '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ—Ñ—Ñ–µ—Ä–∞');
            }
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
            this.modals.showNotification('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ' + error.message, 'error');
        }
    }

    showOfferStats(offerId) {
        // –õ–æ–≥–∏–∫–∞ –ø–æ–∫–∞–∑–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –æ—Ñ—Ñ–µ—Ä–∞
        console.log('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Ñ—Ñ–µ—Ä–∞:', offerId);
        this.modals.showNotification(`–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Ñ—Ñ–µ—Ä–∞ ${offerId}`, 'info');
    }

    deleteOffer(offerId) {
        // –õ–æ–≥–∏–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –æ—Ñ—Ñ–µ—Ä–∞
        console.log('–£–¥–∞–ª–µ–Ω–∏–µ –æ—Ñ—Ñ–µ—Ä–∞:', offerId);
        this.modals.createDeleteConfirmation(offerId);
    }

    async confirmDeleteOffer(offerId) {
        try {
            // –ü—ã—Ç–∞–µ–º—Å—è —É–¥–∞–ª–∏—Ç—å —á–µ—Ä–µ–∑ API
            const result = await this.api.deleteOffer(offerId);
            
            if (result && result.success) {
                this.modals.showNotification('–û—Ñ—Ñ–µ—Ä —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!', 'success');
                // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –æ—Ñ—Ñ–µ—Ä–æ–≤
                await this.loadMyOffers();
                return;
            } else {
                throw new Error(result?.error || '–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –æ—Ñ—Ñ–µ—Ä–∞');
            }
        } catch (error) {
            console.log('üì° API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, —É–¥–∞–ª—è–µ–º –∏–∑ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', error.message);
            
            // –£–¥–∞–ª—è–µ–º –∏–∑ DOM
            const offerCard = document.querySelector(`[data-offer-id="${offerId}"]`);
            if (offerCard) {
                offerCard.style.transition = 'all 0.3s ease';
                offerCard.style.opacity = '0';
                offerCard.style.transform = 'scale(0.8)';
                
                setTimeout(() => {
                    offerCard.remove();
                    this.modals.showNotification('–û—Ñ—Ñ–µ—Ä —É–¥–∞–ª–µ–Ω!', 'success');
                    
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Å—Ç–∞–ª–∏—Å—å –ª–∏ –æ—Ñ—Ñ–µ—Ä—ã
                    const remainingOffers = document.querySelectorAll('.offer-card').length;
                    if (remainingOffers === 0) {
                        this.showEmptyState();
                    }
                }, 300);
            }
        }
    }

    // –ê–¥–º–∏–Ω—Å–∫–∏–µ –º–µ—Ç–æ–¥—ã
    isOffersPage() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Å –æ—Ñ—Ñ–µ—Ä–∞–º–∏ –∏ –µ—Å—Ç—å –Ω—É–∂–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        const hasOffersTabs = document.querySelector('.tabs-nav') && 
                             document.querySelector('[data-tab="my-offers"]');
        const hasAdminElements = document.getElementById('admin-tab') && 
                               document.getElementById('admin-moderation');
        
        return hasOffersTabs && hasAdminElements;
    }

    checkAdminAccess() {
        const userId = window.getTelegramUserId?.();
        const adminId = '373086959';
        
        console.log(`üîç Checking admin access: userId = ${userId}, adminId = ${adminId}`);
        console.log(`üîç Current page URL: ${window.location.pathname}`);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤–∫–ª–∞–¥–∫—É –º–æ–¥–µ—Ä–∞—Ü–∏–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞ –∏ —Ç–æ–ª—å–∫–æ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –æ—Ñ—Ñ–µ—Ä–æ–≤
        if (userId && userId === adminId && this.isOffersPage()) {
            console.log('‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—Å–∫–∏–π –¥–æ—Å—Ç—É–ø –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω');
            const adminTab = document.getElementById('admin-tab');
            const adminContent = document.getElementById('admin-moderation');
            
            if (adminTab) {
                adminTab.style.display = 'block';
                console.log('‚úÖ –ê–¥–º–∏–Ω –≤–∫–ª–∞–¥–∫–∞ –ø–æ–∫–∞–∑–∞–Ω–∞');
                console.log('üîç –ê–¥–º–∏–Ω –≤–∫–ª–∞–¥–∫–∞ classList:', adminTab.classList.toString());
                console.log('üîç –ê–¥–º–∏–Ω –≤–∫–ª–∞–¥–∫–∞ style:', adminTab.style.cssText);
            } else {
                console.error('‚ùå –≠–ª–µ–º–µ–Ω—Ç admin-tab –Ω–µ –Ω–∞–π–¥–µ–Ω!');
            }
            
            if (adminContent) {
                console.log('‚úÖ –ê–¥–º–∏–Ω –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω');
                console.log('üîç –ê–¥–º–∏–Ω –∫–æ–Ω—Ç–µ–Ω—Ç classList:', adminContent.classList.toString());
                console.log('üîç –ê–¥–º–∏–Ω –∫–æ–Ω—Ç–µ–Ω—Ç style:', adminContent.style.cssText);
            } else {
                console.error('‚ùå –≠–ª–µ–º–µ–Ω—Ç admin-moderation –Ω–µ –Ω–∞–π–¥–µ–Ω!');
            }
        } else {
            console.log('üë§ –û–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å —Å–∫—Ä—ã—Ç–∞');
            
            // –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ –≤–∫–ª–∞–¥–∫–∞ —Å–∫—Ä—ã—Ç–∞ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            const adminTab = document.getElementById('admin-tab');
            const adminContent = document.getElementById('admin-moderation');
            
            if (adminTab) {
                adminTab.style.display = 'none';
                console.log('‚úÖ –ê–¥–º–∏–Ω –≤–∫–ª–∞–¥–∫–∞ —Å–∫—Ä—ã—Ç–∞ –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
            }
            
            if (adminContent) {
                adminContent.style.display = 'none';
                adminContent.classList.remove('active');
                console.log('‚úÖ –ê–¥–º–∏–Ω –∫–æ–Ω—Ç–µ–Ω—Ç —Å–∫—Ä—ã—Ç –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
            }
        }
    }

    async loadModerationOffers() {
        const container = document.getElementById('moderationGrid');
        const loading = document.getElementById('moderationLoading');
        const empty = document.getElementById('moderationEmpty');
        
        console.log('üîç –≠–ª–µ–º–µ–Ω—Ç—ã –º–æ–¥–µ—Ä–∞—Ü–∏–∏:', {
            container: container,
            loading: loading,
            empty: empty,
            containerVisible: container ? container.style.display : 'not found'
        });
        
        if (!container) {
            console.error('‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä moderationGrid –Ω–µ –Ω–∞–π–¥–µ–Ω!');
            return;
        }

        try {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
            this.showModerationLoading(true);
            
            // –ü–æ–ª—É—á–∞–µ–º —Ñ–∏–ª—å—Ç—Ä—ã
            const statusFilter = document.getElementById('moderationStatusFilter')?.value || 'pending';
            const searchQuery = document.getElementById('moderationSearch')?.value || '';
            
            const filters = {
                status: statusFilter === 'all' ? null : statusFilter,
                search: searchQuery.trim() || null
            };
            
            console.log('üîç –ó–∞–≥—Ä—É–∑–∫–∞ –æ—Ñ—Ñ–µ—Ä–æ–≤ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏:', filters);
            
            // –ó–∞–ø—Ä–æ—Å –∫ API
            const result = await this.api.getModerationOffers(filters);
            
            if (result.success && result.data && Array.isArray(result.data.offers)) {
                const offers = result.data.offers;
                console.log(`üìã –ü–æ–ª—É—á–µ–Ω–æ –æ—Ñ—Ñ–µ—Ä–æ–≤ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏: ${offers.length}`);
                
                if (offers.length > 0) {
                    this.renderModerationOffers(offers, container);
                    this.showModerationLoading(false);
                } else {
                    this.showModerationEmpty(true);
                }
            } else {
                console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ñ—Ñ–µ—Ä–æ–≤ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏:', result.error);
                this.showModerationError(result.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞');
            }
            
        } catch (error) {
            console.error('‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –æ—Ñ—Ñ–µ—Ä–æ–≤ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏:', error);
            this.showModerationError(error.message);
        }
    }

    renderModerationOffers(offers, container) {
        console.log(`üé® –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ ${offers.length} –æ—Ñ—Ñ–µ—Ä–æ–≤ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏`);
        console.log('üìã Container:', container);
        console.log('üìã First offer:', offers[0]);
        
        const offersHtml = offers.map((offer, index) => {
            console.log(`üéØ –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ ${index + 1}:`, offer);
            const cardHtml = this.createModerationOfferCard(offer);
            console.log(`‚úÖ –ö–∞—Ä—Ç–æ—á–∫–∞ ${index + 1} —Å–æ–∑–¥–∞–Ω–∞, HTML length:`, cardHtml.length);
            return cardHtml;
        }).join('');
        
        console.log(`üìÑ –û–±—â–∏–π HTML length:`, offersHtml.length);
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º HTML —Å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–º–∏ —Å—Ç–∏–ª—è–º–∏
        container.innerHTML = `<div class="offers-list" style="display: flex; flex-direction: column; gap: 16px; padding: 20px; background: #f8f9fa; border: 2px solid #007bff; border-radius: 8px;">${offersHtml}</div>`;
        
        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        container.style.display = 'block';
        container.style.visibility = 'visible';
        container.style.opacity = '1';
        container.style.height = 'auto';
        container.style.background = '#ffffff';
        container.style.border = '1px solid #dee2e6';
        container.style.borderRadius = '8px';
        container.style.padding = '16px';
        container.style.margin = '16px 0';
        
        console.log(`‚úÖ HTML —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–º–∏ —Å—Ç–∏–ª—è–º–∏`);
        
        // –ü—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ –∫–∞—Ä—Ç–æ—á–∫–∏ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –¥–æ–±–∞–≤–∏–ª–∏—Å—å
        const cards = container.querySelectorAll('.offer-card');
        console.log(`üéØ –ù–∞–π–¥–µ–Ω–æ –∫–∞—Ä—Ç–æ—á–µ–∫ –≤ DOM: ${cards.length}`);
        
        cards.forEach((card, index) => {
            card.style.display = 'block';
            card.style.visibility = 'visible';
            card.style.opacity = '1';
            console.log(`‚úÖ –ö–∞—Ä—Ç–æ—á–∫–∞ ${index + 1} –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–æ–∫–∞–∑–∞–Ω–∞`);
        });
    }

    createModerationOfferCard(offer) {
        console.log('üéØ –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –¥–ª—è –æ—Ñ—Ñ–µ—Ä–∞:', offer);
        
        const status = offer.status || 'draft';
        const submittedDate = offer.submitted_at ? new Date(offer.submitted_at).toLocaleString('ru-RU') : '–ù–µ —É–∫–∞–∑–∞–Ω–∞';
        const userName = offer.user_name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
        const userId = offer.user_id || 'N/A';
        
        // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –±—é–¥–∂–µ—Ç–∞
        console.log(`üí∞ –û–¢–õ–ê–î–ö–ê –ë–Æ–î–ñ–ï–¢–ê –¥–ª—è –æ—Ñ—Ñ–µ—Ä–∞ ${offer.id}:`);
        console.log(`   - offer.budget_total: ${offer.budget_total}`);
        console.log(`   - offer.price: ${offer.price}`);
        console.log(`   - –ë—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è: ${offer.budget_total || offer.price || 0} (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç budget_total)`);
        
        console.log(`üìã –û—Å—Ç–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ - –°—Ç–∞—Ç—É—Å: ${status}, –î–∞—Ç–∞: ${submittedDate}, –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${userName}`);
        
        // –ü—Ä–æ–≤–µ—Ä–∏–º –Ω–∞–ª–∏—á–∏–µ templates
        if (!this.templates) {
            console.error('‚ùå Templates –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!');
            return '<div style="padding: 20px; border: 2px solid red; margin: 10px; background: #ffe6e6;">Error: Templates not found</div>';
        }
        
        // –°–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫—É —Å —É–ø—Ä–æ—â–µ–Ω–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        const html = `
            <div class="offer-card moderation ${status}" data-offer-id="${offer.id}" style="border: 1px solid #ddd; padding: 16px; margin: 12px 0; border-radius: 8px; background: white;">
                <div class="offer-header" style="display: flex; justify-content: space-between; align-items: flex-start; margin-bottom: 12px;">
                    <h3 class="offer-title" style="margin: 0; color: #333; font-size: 18px;">${offer.title || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}</h3>
                    ${this.templates.statusBadge(status)}
                </div>
                
                <div class="offer-user-info" style="background: #f8f9fa; padding: 12px; border-radius: 6px; margin: 12px 0;">
                    <div style="margin-bottom: 8px;">
                        <strong>üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</strong> ${userName} (ID: ${userId})
                    </div>
                    <div>
                        <strong>üìÖ –ü–æ–¥–∞–Ω–æ:</strong> ${submittedDate}
                    </div>
                </div>
                
                <div class="offer-meta" style="margin: 12px 0;">
                    <span class="offer-price" style="font-weight: bold; color: #28a745;">‚ÇΩ ${this.templates.formatPrice(offer.budget_total || offer.price || 0)}</span>
                    <span style="margin-left: 12px; color: #6c757d;">${offer.category || '–û–±—â–µ–µ'}</span>
                </div>
                
                <div class="offer-description" style="margin: 12px 0; color: #495057; line-height: 1.4;">
                    ${offer.description ? (offer.description.length > 150 ? offer.description.substring(0, 150) + '...' : offer.description) : '–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}
                </div>
                
                <div class="offer-actions moderation-actions" style="display: flex; gap: 8px; flex-wrap: wrap; margin-top: 16px;">
                    ${this.getModerationButtons(offer)}
                </div>
                
                ${offer.rejection_reason ? `
                    <div class="rejection-reason" style="background: #f8d7da; border-left: 4px solid #dc3545; padding: 12px; margin-top: 12px; border-radius: 0 6px 6px 0; color: #721c24;">
                        <strong>‚ùå –ü—Ä–∏—á–∏–Ω–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è:</strong>
                        <p style="margin: 4px 0 0 0;">${offer.rejection_reason}</p>
                    </div>
                ` : ''}
            </div>
        `;
        
        console.log(`‚úÖ HTML –∫–∞—Ä—Ç–æ—á–∫–∞ —Å–æ–∑–¥–∞–Ω–∞, –¥–ª–∏–Ω–∞: ${html.length} —Å–∏–º–≤–æ–ª–æ–≤`);
        return html;
    }

    getModerationButtons(offer) {
        const status = offer.status || 'draft';
        const offerId = offer.id;
        let buttons = [];
        
        // –ö–Ω–æ–ø–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª–µ–π –≤—Å–µ–≥–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞
        buttons.push(`<button class="btn btn-outline btn-sm" onclick="window.offersManager?.showOfferDetails('${offerId}')">üëÅÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä</button>`);
        
        if (status === 'pending') {
            // –î–ª—è –æ—Ñ—Ñ–µ—Ä–æ–≤ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –æ–¥–æ–±—Ä–µ–Ω–∏—è, –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –∏ —É–¥–∞–ª–µ–Ω–∏—è
            buttons.push(`<button class="btn btn-success btn-sm" onclick="window.offersManager?.approveOffer('${offerId}')">‚úÖ –û–¥–æ–±—Ä–∏—Ç—å</button>`);
            buttons.push(`<button class="btn btn-danger btn-sm" onclick="window.offersManager?.rejectOffer('${offerId}')">‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å</button>`);
            buttons.push(`<button class="btn btn-outline btn-sm" onclick="window.offersManager?.deleteOfferFromModeration('${offerId}')" style="color: var(--danger-600); border-color: var(--danger-300);">üóëÔ∏è –£–¥–∞–ª–∏—Ç—å</button>`);
        } else if (status === 'active') {
            // –î–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ—Ñ—Ñ–µ—Ä–æ–≤ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            buttons.push(`<button class="btn btn-primary btn-sm" onclick="window.offersManager?.showOfferStats('${offerId}')">üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</button>`);
        } else if (status === 'rejected') {
            // –î–ª—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–Ω—ã—Ö –º–æ–∂–Ω–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å
            buttons.push(`<button class="btn btn-warning btn-sm" onclick="window.offersManager?.reopenOffer('${offerId}')">üîÑ –ü–µ—Ä–µ—Å–º–æ—Ç—Ä–µ—Ç—å</button>`);
        }
        
        return buttons.join('');
    }

    async approveOffer(offerId) {
        if (!confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ–¥–æ–±—Ä–∏—Ç—å —ç—Ç–æ—Ç –æ—Ñ—Ñ–µ—Ä?')) {
            return;
        }
        
        try {
            console.log(`‚úÖ –û–¥–æ–±—Ä–µ–Ω–∏–µ –æ—Ñ—Ñ–µ—Ä–∞ ${offerId}`);
            
            const result = await this.api.approveOffer(offerId);
            
            if (result.success) {
                this.modals.showNotification('–û—Ñ—Ñ–µ—Ä —É—Å–ø–µ—à–Ω–æ –æ–¥–æ–±—Ä–µ–Ω!', 'success');
                await this.loadModerationOffers(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫
            } else {
                throw new Error(result.error || '–û—à–∏–±–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∏—è –æ—Ñ—Ñ–µ—Ä–∞');
            }
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∏—è –æ—Ñ—Ñ–µ—Ä–∞:', error);
            this.modals.showNotification('–û—à–∏–±–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∏—è: ' + error.message, 'error');
        }
    }

    async rejectOffer(offerId) {
        const reason = prompt('–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è:');
        if (!reason || reason.trim() === '') {
            return;
        }
        
        try {
            console.log(`‚ùå –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –æ—Ñ—Ñ–µ—Ä–∞ ${offerId} —Å –ø—Ä–∏—á–∏–Ω–æ–π: ${reason}`);
            
            const result = await this.api.rejectOffer(offerId, reason.trim());
            
            if (result.success) {
                this.modals.showNotification('–û—Ñ—Ñ–µ—Ä –æ—Ç–∫–ª–æ–Ω–µ–Ω!', 'success');
                await this.loadModerationOffers(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫
            } else {
                throw new Error(result.error || '–û—à–∏–±–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –æ—Ñ—Ñ–µ—Ä–∞');
            }
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –æ—Ñ—Ñ–µ—Ä–∞:', error);
            this.modals.showNotification('–û—à–∏–±–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è: ' + error.message, 'error');
        }
    }

    async reopenOffer(offerId) {
        if (!confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å —ç—Ç–æ—Ç –æ—Ñ—Ñ–µ—Ä –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é?')) {
            return;
        }
        
        try {
            console.log(`üîÑ –í–æ–∑–≤—Ä–∞—Ç –æ—Ñ—Ñ–µ—Ä–∞ ${offerId} –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é`);
            
            const result = await this.api.reopenOffer(offerId);
            
            if (result.success) {
                this.modals.showNotification('–û—Ñ—Ñ–µ—Ä –≤–æ–∑–≤—Ä–∞—â–µ–Ω –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é!', 'success');
                await this.loadModerationOffers(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫
            } else {
                throw new Error(result.error || '–û—à–∏–±–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –æ—Ñ—Ñ–µ—Ä–∞ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é');
            }
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –æ—Ñ—Ñ–µ—Ä–∞:', error);
            this.modals.showNotification('–û—à–∏–±–∫–∞: ' + error.message, 'error');
        }
    }

    // UI –º–µ—Ç–æ–¥—ã –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏
    showModerationLoading(show) {
        const loading = document.getElementById('moderationLoading');
        const container = document.getElementById('moderationGrid');
        const empty = document.getElementById('moderationEmpty');
        
        console.log(`üîÑ showModerationLoading(${show}):`, {
            loading: loading,
            container: container,
            empty: empty
        });
        
        if (loading) loading.style.display = show ? 'block' : 'none';
        if (container) {
            container.style.display = show ? 'none' : 'block';
            
            // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø—Ä–∏ —Å–∫—Ä—ã—Ç–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏
            if (!show) {
                container.style.visibility = 'visible';
                container.style.opacity = '1';
                container.style.minHeight = '200px';
                console.log('üîß –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–æ–∫–∞–∑–∞–Ω –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –º–æ–¥–µ—Ä–∞—Ü–∏–∏');
            }
        }
        if (empty) empty.style.display = 'none';
        
        console.log('‚úÖ –°–æ—Å—Ç–æ—è–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:', {
            loadingDisplay: loading ? loading.style.display : 'not found',
            containerDisplay: container ? container.style.display : 'not found',
            emptyDisplay: empty ? empty.style.display : 'not found'
        });
    }

    showModerationEmpty(show) {
        const loading = document.getElementById('moderationLoading');
        const container = document.getElementById('moderationGrid');
        const empty = document.getElementById('moderationEmpty');
        
        if (loading) loading.style.display = 'none';
        if (container) container.style.display = show ? 'none' : 'block';
        if (empty) empty.style.display = show ? 'block' : 'none';
    }

    showModerationError(message) {
        const container = document.getElementById('moderationGrid');
        if (container) {
            container.innerHTML = this.templates.errorState(
                message, 
                () => this.loadModerationOffers()
            );
        }
        this.showModerationLoading(false);
    }

    async deleteOfferFromModeration(offerId) {
        if (!confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç –æ—Ñ—Ñ–µ—Ä? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.')) {
            return;
        }
        
        try {
            console.log(`üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ñ—Ñ–µ—Ä–∞ ${offerId} –∏–∑ –º–æ–¥–µ—Ä–∞—Ü–∏–∏`);
            
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π endpoint –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –º–æ–¥–µ—Ä–∞—Ü–∏–∏
            const result = await this.api.request(`/api/offers_moderation/${offerId}/delete`, {
                method: 'DELETE'
            });
            
            if (result.success) {
                this.modals.showNotification(`–û—Ñ—Ñ–µ—Ä "${result.title}" —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!`, 'success');
                await this.loadModerationOffers(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫
            } else {
                throw new Error(result.error || '–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –æ—Ñ—Ñ–µ—Ä–∞');
            }
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –æ—Ñ—Ñ–µ—Ä–∞:', error);
            this.modals.showNotification('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: ' + error.message, 'error');
        }
    }

    // –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –¥–ª—è HTML
    refreshModeration() {
        console.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
        this.loadModerationOffers();
    }
}