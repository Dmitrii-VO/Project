// –§—É–Ω–∫—Ü–∏–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–∞–±–æ–≤:
// Tab switching
function switchTab(tabName) {
    document.querySelectorAll('.tab-btn').forEach(btn => btn.classList.remove('active'));
    document.querySelectorAll('.tab-content').forEach(content => content.classList.remove('active'));

    const tabBtn = document.querySelector(`[data-tab="${tabName}"]`);
    if (tabBtn) {
        tabBtn.classList.add('active');
    }
    const tabContent = document.getElementById(tabName);
    if (tabContent) {
        tabContent.classList.add('active');
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
if (window.Telegram && window.Telegram.WebApp) {
    window.Telegram.WebApp.ready();
    window.Telegram.WebApp.expand();
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–∞–±–æ–≤
document.querySelectorAll('.tab-btn').forEach(btn => {
    btn.addEventListener('click', () => {
        const tabName = btn.getAttribute('data-tab');
        switchTab(tabName);
    });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞
document.addEventListener('DOMContentLoaded', function() {
    const addChannelForm = document.getElementById('addChannelForm');
    if (addChannelForm) {
        addChannelForm.addEventListener('submit', async function(e) {
    e.preventDefault();

    // –ó–∞—â–∏—Ç–∞ –æ—Ç –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –æ—Ç–ø—Ä–∞–≤–æ–∫
    if (window.channelSubmitting) {
        console.log('‚ö†Ô∏è –§–æ—Ä–º–∞ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º...');
        return;
    }
    window.channelSubmitting = true;

    const submitBtn = document.getElementById('submitBtn');
    const originalText = submitBtn.textContent;

    try {
        submitBtn.disabled = true;
        submitBtn.textContent = 'üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...';

        // –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
        console.log('üîç DEBUG: channelAnalyzer.currentChannelData =', channelAnalyzer.currentChannelData);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø–æ–ª—è
        const channelUrlElement = document.getElementById('channelUrl');
        if (!channelUrlElement) {
            throw new Error('–ü–æ–ª–µ URL –∫–∞–Ω–∞–ª–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
        }
        
        const channelUrl = document.getElementById('channelUrl')?.value?.trim() || '';
        const channelPrice = document.getElementById('channelPrice')?.value || '';
        const channelContact = document.getElementById('channelContact')?.value || '';
        
        const formData = {
    username: channelUrl,
    title: channelAnalyzer.currentChannelData?.title || `–ö–∞–Ω–∞–ª @${channelUrl}`,
    description: channelAnalyzer.currentChannelData?.description || '',
    category: 'general',

    // ‚úÖ –ö–õ–Æ–ß–ï–í–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü–µ—Ä–µ–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –∏–∑ –í–°–ï–• –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
    subscriber_count: channelAnalyzer.currentChannelData?.raw_subscriber_count ||
                     channelAnalyzer.currentChannelData?.subscriber_count ||
                     channelAnalyzer.currentChannelData?.member_count || 0,

    subscribers_count: channelAnalyzer.currentChannelData?.raw_subscriber_count ||
                      channelAnalyzer.currentChannelData?.subscriber_count ||
                      channelAnalyzer.currentChannelData?.member_count || 0,

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    raw_subscriber_count: channelAnalyzer.currentChannelData?.raw_subscriber_count || 0,
    member_count: channelAnalyzer.currentChannelData?.member_count || 0,

    // Telegram –¥–∞–Ω–Ω—ã–µ –µ—Å–ª–∏ –µ—Å—Ç—å
    telegram_id: channelAnalyzer.currentChannelData?.telegram_id ||
                channelAnalyzer.currentChannelData?.channel_id,

    // –û—Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ–ª—è –∏–∑ —Ñ–æ—Ä–º—ã
    price_per_post: parseFloat(channelPrice || '0'),
    contact_info: channelContact,
    payment_terms: 'prepaid'
};
        
        console.log('üîç DEBUG: formData =', formData);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
        if (!channelUrl) {
            throw new Error('–£–∫–∞–∂–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª');
        }
        if (!channelPrice) {
            throw new Error('–£–∫–∞–∂–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ä–∞–∑–º–µ—â–µ–Ω–∏—è');
        }
        if (!channelContact) {
            throw new Error('–£–∫–∞–∂–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏');
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –Ω–µ –ø—É—Å—Ç—ã–µ
        if (formData.subscriber_count === 0 && channelAnalyzer.currentChannelData?.raw_subscriber_count) {
            console.warn('‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: subscriber_count = 0, –Ω–æ raw_subscriber_count =',
                         channelAnalyzer.currentChannelData.raw_subscriber_count);
        }
        console.groupEnd();
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
        const response = await fetch('/api/channels', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-Telegram-User-Id': window.Telegram?.WebApp?.initDataUnsafe?.user?.id || '373086959'
            },
            body: JSON.stringify(formData)
        });
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä


        const result = await response.json();

        if (!result.success) {
            throw new Error(result.error || '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞');
        }

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
        const verificationCode = result.verification_code || result.channel?.verification_code;
        const channelUsername = result.channel?.username || formData.channelUrl;

        if (verificationCode) {
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º –µ–¥–∏–Ω–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∏–∑ channels-modals.js
            if (typeof createVerificationModalProgrammatically === 'function') {
                createVerificationModalProgrammatically(
                    result.channel?.id || 'temp',
                    result.channel?.title || formData.title,
                    channelUsername,
                    verificationCode
                );
            } else {
                // Fallback –µ—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞
                alert(`‚úÖ –ö–∞–Ω–∞–ª —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω! –ö–æ–¥ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏: ${verificationCode}`);
            }
        } else {
            // Fallback –¥–ª—è —Å–ª—É—á–∞–µ–≤ –±–µ–∑ –∫–æ–¥–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
            alert('‚úÖ –ö–∞–Ω–∞–ª —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –∏ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏.');
        }

                    // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
                    this.reset();
                    const channelPreview = document.getElementById('channelPreview');
                    if (channelPreview) {
                        channelPreview.classList.remove('active');
                    }
                    const additionalFields = document.getElementById('additionalFields');
                    if (additionalFields) {
                        additionalFields.style.display = 'none';
                    }
                    const pricingFields = document.getElementById('pricingFields');
                    if (pricingFields) {
                        pricingFields.style.display = 'none';
                    }

                            // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –≤–∫–ª–∞–¥–∫—É —Å –∫–∞–Ω–∞–ª–∞–º–∏
                            switchTab('channels');

                        } catch (error) {
                            alert('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–∞–Ω–∞–ª–∞: ' + error.message);
                        } finally {
                            submitBtn.disabled = false;
                            submitBtn.textContent = originalText;
                            window.channelSubmitting = false; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥
                        }
                    });
    }
});

// –ü–æ–∏—Å–∫ –ø–æ –∫–∞–Ω–∞–ª–∞–º
const searchInput = document.querySelector('#channelSearch');
if (searchInput) {
    searchInput.addEventListener('input', function() {
    const searchTerm = this.value.toLowerCase();
    const channelCards = document.querySelectorAll('.channel-card');

    channelCards.forEach(card => {
        const title = card.querySelector('.channel-title')?.textContent.toLowerCase() || '';
        const username = card.querySelector('.channel-username')?.textContent.toLowerCase() || '';

        if (title.includes(searchTerm) || username.includes(searchTerm)) {
            card.style.display = 'block';
        } else {
            card.style.display = 'none';
        }
    });
    });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    console.log('üì∫ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∫–∞–Ω–∞–ª–æ–≤ –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
});

// –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é formatNumber –∏–∑ channels-core.js
function formatPrice(price) {
    if (!price || price === 0) return '–ù–µ —É–∫–∞–∑–∞–Ω–∞';
    return new Intl.NumberFormat('ru-RU', {
        style: 'currency',
        currency: 'RUB',
        minimumFractionDigits: 0
    }).format(price);
}
function formatDate(dateString) {
    if (!dateString) return '–ù–µ —É–∫–∞–∑–∞–Ω–∞';
    try {
        const date = new Date(dateString);
        return date.toLocaleDateString('ru-RU', {
            day: '2-digit',
            month: '2-digit',
            year: 'numeric'
        });
    } catch (error) {
        return '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –¥–∞—Ç–∞';
    }
}
function getCategoryName(category) {
    const categories = {
        'technology': '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏',
        'business': '–ë–∏–∑–Ω–µ—Å',
        'entertainment': '–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è',
        'news': '–ù–æ–≤–æ—Å—Ç–∏',
        'education': '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ',
        'lifestyle': '–°—Ç–∏–ª—å –∂–∏–∑–Ω–∏',
        'sports': '–°–ø–æ—Ä—Ç',
        'gaming': '–ò–≥—Ä—ã',
        'crypto': '–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã',
        'travel': '–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è',
        'food': '–ï–¥–∞',
        'fitness': '–§–∏—Ç–Ω–µ—Å',
        'art': '–ò—Å–∫—É—Å—Å—Ç–≤–æ',
        'music': '–ú—É–∑—ã–∫–∞',
        'general': '–û–±—â–µ–µ',
        'other': '–î—Ä—É–≥–æ–µ'
    };
    return categories[category] || category;
}
function updateChannelsCounter(count) {
    const tabButton = document.querySelector('.tab-btn[data-tab="channels"]');
    if (tabButton) {
        const originalText = tabButton.textContent.split('(')[0].trim();
        tabButton.textContent = count > 0 ? `${originalText} (${count})` : originalText;
    }
}

// –§—É–Ω–∫—Ü–∏–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:
function showNotification(type, message) {
    // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    const notification = document.createElement('div');
    notification.className = `notification-popup ${type}`;
    notification.textContent = message;

    document.body.appendChild(notification);

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∫—Ä—ã—Ç–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
    setTimeout(() => {
        notification.remove();
    }, 5000);
}
function showSuccessNotification(message) {
            showNotification('success', message);
        }
function showErrorNotification(message) {
            showNotification('error', message);
        }
function showInfoNotification(message) {
            showNotification('info', message);
        }

// –û—Ç–ª–∞–¥–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:
function debugChannelPreview() {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–ª—è –ø—Ä–µ–≤—å—é –∫–∞–Ω–∞–ª–∞:');

    const elements = [
        'channelPreview',
        'additionalFields',
        'pricingFields',
        'channelCategory',
        'channelDescription',
        'submitBtn'
    ];

    elements.forEach(id => {
        const element = document.getElementById(id);
        if (element) {
            console.log(`‚úÖ ${id}: –Ω–∞–π–¥–µ–Ω`);
        } else {
            console.log(`‚ùå ${id}: –ù–ï –Ω–∞–π–¥–µ–Ω`);
        }
    });
}
function testChannelPreview() {
    const testData = {
        data: {
            title: '–¢–µ—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª',
            username: 'test_channel',
            subscribers: '1.2K',
            engagement_rate: '5.5',
            description: '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞',
            avatar_letter: 'T',
            category: 'technology',
            channel_type: 'channel',
            verified: false
        }
    };

    if (window.channelAnalyzer && window.channelAnalyzer.showChannelPreview) {
        window.channelAnalyzer.showChannelPreview(testData);
    } else {
        console.error('‚ùå channelAnalyzer –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }
}

console.log('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è showChannelPreview –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
console.log('üí° –î–ª—è –æ—Ç–ª–∞–¥–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: debugChannelPreview() –∏–ª–∏ testChannelPreview()');

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø–æ ESC
document.addEventListener('keydown', function(e) {
    if (e.key === 'Escape') {
        closeDeleteModal();
    }
});

// –í–º–µ—Å—Ç–æ onclick –≤ HTML, –¥–æ–±–∞–≤—å—Ç–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
document.addEventListener('DOMContentLoaded', function() {
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ç–∞–±–æ–≤
    document.querySelectorAll('.tab-btn').forEach(btn => {
        btn.addEventListener('click', () => {
            const tabName = btn.getAttribute('data-tab');
            switchTab(tabName);
        });
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–î–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª"
    document.querySelectorAll('.btn[onclick*="switchTab"]').forEach(btn => {
        btn.addEventListener('click', (e) => {
            e.preventDefault();
            switchTab('add-channel');
        });
    });
});

// –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏
window.switchTab = switchTab;
window.showNotification = showNotification;