#!/usr/bin/env python3
"""
create_app_structure.py - –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
–ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –∏ —Ñ–∞–π–ª–æ–≤
"""

import os
import sys

def create_directory_structure():
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π"""
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    directories = [
        'app',
        'app/config',
        'app/models',
        'app/services',
        'app/api',
        'app/templates',
        'app/templates/components',
        'app/templates/pages',
        'app/templates/pages/offers',
        'app/templates/pages/channels',
        'app/templates/pages/analytics',
        'app/templates/pages/payments',
        'app/static',
        'app/static/css',
        'app/static/js',
        'app/static/js/components',
        'app/static/js/utils',
        'app/static/images',
        'app/static/images/icons',
        'app/static/images/logos',
        'app/utils',
        'migrations',
        'migrations/versions',
        'tests',
        'tests/test_api',
        'tests/test_services',
        'tests/test_models',
        'scripts',
        'docs',
        'logs'
    ]
    
    created_dirs = []
    
    for directory in directories:
        if not os.path.exists(directory):
            try:
                os.makedirs(directory, exist_ok=True)
                created_dirs.append(directory)
                print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {directory}")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è {directory}: {e}")
        else:
            print(f"üìÅ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {directory}")
    
    return created_dirs

def create_init_files():
    """–°–æ–∑–¥–∞–Ω–∏–µ __init__.py —Ñ–∞–π–ª–æ–≤"""
    
    init_files = {
        'app/__init__.py': '''# app/__init__.py
"""
–ì–ª–∞–≤–Ω—ã–π –º–æ–¥—É–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Telegram Mini App
"""

import os
import sys
import logging
from flask import Flask

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)

def create_app() -> Flask:
    """–§–∞–±—Ä–∏–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π Flask"""
    app = Flask(__name__)
    
    # –ë–∞–∑–æ–≤–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
    app.config['SECRET_KEY'] = os.environ.get('SECRET_KEY', 'dev-secret-key')
    app.config['DEBUG'] = os.environ.get('DEBUG', 'True').lower() == 'true'
    
    return app

# –î–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
app = None

def get_app():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    global app
    if app is None:
        app = create_app()
    return app
''',
        
        'app/config/__init__.py': '''# app/config/__init__.py
"""–ú–æ–¥—É–ª—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""

try:
    from .settings import Config
    __all__ = ['Config']
except ImportError:
    __all__ = []
''',
        
        'app/models/__init__.py': '''# app/models/__init__.py
"""–ú–æ–¥—É–ª—å –º–æ–¥–µ–ª–µ–π –¥–∞–Ω–Ω—ã—Ö"""

__all__ = []
''',
        
        'app/services/__init__.py': '''# app/services/__init__.py
"""–ú–æ–¥—É–ª—å —Å–µ—Ä–≤–∏—Å–æ–≤ –∏ –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∏"""

__all__ = []
''',
        
        'app/api/__init__.py': '''# app/api/__init__.py
"""API –º–æ–¥—É–ª—å –¥–ª—è Telegram Mini App"""

__all__ = []

def get_available_blueprints():
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö Blueprint'–æ–≤"""
    return []
''',
        
        'app/utils/__init__.py': '''# app/utils/__init__.py
"""–ú–æ–¥—É–ª—å —É—Ç–∏–ª–∏—Ç –∏ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π"""

__all__ = []
''',
        
        'migrations/__init__.py': '''# migrations/__init__.py
"""–ú–æ–¥—É–ª—å –º–∏–≥—Ä–∞—Ü–∏–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""

__all__ = []
''',
        
        'tests/__init__.py': '''# tests/__init__.py
"""–ú–æ–¥—É–ª—å —Ç–µ—Å—Ç–æ–≤"""

__all__ = []
''',
    }
    
    created_files = []
    
    for file_path, content in init_files.items():
        if not os.path.exists(file_path):
            try:
                with open(file_path, 'w', encoding='utf-8') as f:
                    f.write(content)
                created_files.append(file_path)
                print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: {file_path}")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è {file_path}: {e}")
        else:
            print(f"üìÑ –§–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {file_path}")
    
    return created_files

def create_basic_templates():
    """–°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤"""
    
    templates = {
        'app/templates/base.html': '''<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{% block title %}Telegram Mini App{% endblock %}</title>
    <link rel="stylesheet" href="{{ url_for('static', filename='css/style.css') }}">
</head>
<body>
    <div id="app">
        {% block content %}{% endblock %}
    </div>
    <script src="{{ url_for('static', filename='js/app.js') }}"></script>
    {% block scripts %}{% endblock %}
</body>
</html>
''',
        
        'app/templates/index.html': '''{% extends "base.html" %}

{% block title %}–ì–ª–∞–≤–Ω–∞—è - Telegram Mini App{% endblock %}

{% block content %}
<div class="container">
    <h1>üöÄ Telegram Mini App</h1>
    <p>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É —Ä–µ–∫–ª–∞–º–Ω—ã—Ö —Ä–∞–∑–º–µ—â–µ–Ω–∏–π!</p>
    
    <div class="navigation">
        <a href="/offers" class="btn">üì¢ –û—Ñ—Ñ–µ—Ä—ã</a>
        <a href="/channels" class="btn">üì∫ –ö–∞–Ω–∞–ª—ã</a>
        <a href="/analytics" class="btn">üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞</a>
    </div>
</div>
{% endblock %}
''',
    }
    
    created_templates = []
    
    for file_path, content in templates.items():
        if not os.path.exists(file_path):
            try:
                with open(file_path, 'w', encoding='utf-8') as f:
                    f.write(content)
                created_templates.append(file_path)
                print(f"‚úÖ –°–æ–∑–¥–∞–Ω —à–∞–±–ª–æ–Ω: {file_path}")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è {file_path}: {e}")
    
    return created_templates

def create_basic_static_files():
    """–°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤"""
    
    static_files = {
        'app/static/css/style.css': '''/* –ë–∞–∑–æ–≤—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è Telegram Mini App */
body {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    margin: 0;
    padding: 20px;
    background-color: var(--tg-theme-bg-color, #ffffff);
    color: var(--tg-theme-text-color, #000000);
}

.container {
    max-width: 600px;
    margin: 0 auto;
    padding: 20px;
}

.btn {
    display: inline-block;
    padding: 12px 24px;
    margin: 8px;
    background-color: var(--tg-theme-button-color, #007bff);
    color: var(--tg-theme-button-text-color, #ffffff);
    text-decoration: none;
    border-radius: 8px;
    border: none;
    cursor: pointer;
    font-size: 16px;
}

.btn:hover {
    opacity: 0.8;
}

.navigation {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    margin-top: 20px;
}

h1 {
    text-align: center;
    margin-bottom: 20px;
}
''',
        
        'app/static/js/app.js': '''// –û—Å–Ω–æ–≤–Ω–æ–π JavaScript –¥–ª—è Telegram Mini App

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
window.Telegram = window.Telegram || {};
window.Telegram.WebApp = window.Telegram.WebApp || {
    ready: function() { console.log('Telegram WebApp ready'); },
    expand: function() { console.log('Telegram WebApp expand'); },
    close: function() { console.log('Telegram WebApp close'); }
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
document.addEventListener('DOMContentLoaded', function() {
    console.log('üöÄ Telegram Mini App –∑–∞–≥—Ä—É–∂–µ–Ω');
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
    if (window.Telegram && window.Telegram.WebApp) {
        window.Telegram.WebApp.ready();
        window.Telegram.WebApp.expand();
    }
    
    // –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    initializeApp();
});

function initializeApp() {
    console.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...');
    
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –æ—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
    setupEventListeners();
}

function setupEventListeners() {
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
    const buttons = document.querySelectorAll('.btn');
    buttons.forEach(button => {
        button.addEventListener('click', function(e) {
            console.log('–ö–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞:', e.target.textContent);
        });
    });
}
''',
    }
    
    created_static = []
    
    for file_path, content in static_files.items():
        if not os.path.exists(file_path):
            try:
                with open(file_path, 'w', encoding='utf-8') as f:
                    f.write(content)
                created_static.append(file_path)
                print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π —Ñ–∞–π–ª: {file_path}")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è {file_path}: {e}")
    
    return created_static

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã"""
    print("üèóÔ∏è –°–û–ó–î–ê–ù–ò–ï –°–¢–†–£–ö–¢–£–†–´ –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    print("\nüìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π...")
    created_dirs = create_directory_structure()
    
    # –°–æ–∑–¥–∞–Ω–∏–µ __init__.py —Ñ–∞–π–ª–æ–≤
    print("\nüìÑ –°–æ–∑–¥–∞–Ω–∏–µ __init__.py —Ñ–∞–π–ª–æ–≤...")
    created_inits = create_init_files()
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤
    print("\nüé® –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤...")
    created_templates = create_basic_templates()
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
    print("\nüéØ –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤...")
    created_static = create_basic_static_files()
    
    print("\n" + "=" * 50)
    print("‚úÖ –°–¢–†–£–ö–¢–£–†–ê –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø –°–û–ó–î–ê–ù–ê!")
    print("=" * 50)
    
    total_created = len(created_dirs) + len(created_inits) + len(created_templates) + len(created_static)
    
    print(f"üìä –°–æ–∑–¥–∞–Ω–æ –æ–±—ä–µ–∫—Ç–æ–≤: {total_created}")
    print(f"   üìÅ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: {len(created_dirs)}")
    print(f"   üìÑ __init__.py: {len(created_inits)}")
    print(f"   üé® –®–∞–±–ª–æ–Ω—ã: {len(created_templates)}")
    print(f"   üéØ –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã: {len(created_static)}")
    
    print("\nüéâ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ!")
    print("üí° –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("   1. –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ (—É–∂–µ —Å–¥–µ–ª–∞–Ω–æ)")
    print("   2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python working_app.py")
    print("   3. –û—Ç–∫—Ä–æ–π—Ç–µ: http://localhost:5000")

if __name__ == '__main__':
    main()
