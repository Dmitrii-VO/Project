#!/usr/bin/env python3
"""
–§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢: –ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã —Ä–∞–∑–º–µ—â–µ–Ω–∏—è —Ä–µ–∫–ª–∞–º—ã
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é –∫–æ–º–∞–Ω–¥
"""

import sys
import os
import time
from datetime import datetime

sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from app.models.database import execute_db_query
from app.telegram.telegram_bot_commands import TelegramBotExtension

def final_system_test():
    """–§–∏–Ω–∞–ª—å–Ω—ã–π —Å–∏—Å—Ç–µ–º–Ω—ã–π —Ç–µ—Å—Ç"""
    
    print("üéØ –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ –°–ò–°–¢–ï–ú–´ –†–ê–ó–ú–ï–©–ï–ù–ò–Ø –†–ï–ö–õ–ê–ú–´")
    print("=" * 60)
    print("–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª: —Å–æ–∑–¥–∞–Ω–∏–µ ‚Üí –æ—Ç–∫–ª–∏–∫ ‚Üí —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ ‚Üí –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ")
    print()
    
    bot_extension = TelegramBotExtension()
    test_data = {}
    
    try:
        # ===== –ü–û–î–ì–û–¢–û–í–ö–ê –î–ê–ù–ù–´–• =====
        print("üìã –≠–¢–ê–ü 1: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
        print("-" * 40)
        
        # –°–æ–∑–¥–∞–µ–º —Ä–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª—è
        advertiser_id = execute_db_query("""
            INSERT OR REPLACE INTO users 
            (telegram_id, username, first_name, created_at)
            VALUES (?, ?, ?, CURRENT_TIMESTAMP)
        """, (111111111, 'test_advertiser', 'Test Advertiser'))
        
        # –°–æ–∑–¥–∞–µ–º –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∫–∞–Ω–∞–ª–∞
        owner_id = execute_db_query("""
            INSERT OR REPLACE INTO users 
            (telegram_id, username, first_name, created_at)
            VALUES (?, ?, ?, CURRENT_TIMESTAMP)
        """, (222222222, 'test_owner', 'Channel Owner'))
        
        # –°–æ–∑–¥–∞–µ–º –∫–∞–Ω–∞–ª
        channel_id = execute_db_query("""
            INSERT INTO channels 
            (title, username, subscriber_count, owner_id, is_verified, is_active, created_at)
            VALUES (?, ?, ?, ?, 1, 1, CURRENT_TIMESTAMP)
        """, ('–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –∫–∞–Ω–∞–ª', 'final_test_channel', 10000, owner_id))
        
        # –°–æ–∑–¥–∞–µ–º –æ—Ñ—Ñ–µ—Ä
        offer_id = execute_db_query("""
            INSERT INTO offers 
            (title, description, price, created_by, status, created_at)
            VALUES (?, ?, ?, ?, ?, CURRENT_TIMESTAMP)
        """, ('–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç —Ä–µ–∫–ª–∞–º–∞', '–¢–µ—Å—Ç–æ–≤–∞—è —Ä–µ–∫–ª–∞–º–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã', 5000, advertiser_id, 'active'))
        
        # –°–æ–∑–¥–∞–µ–º –æ—Ç–∫–ª–∏–∫
        response_id = execute_db_query("""
            INSERT INTO offer_responses 
            (offer_id, channel_id, user_id, message, channel_username, channel_title, 
             channel_subscribers, status, created_at)
            VALUES (?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP)
        """, (offer_id, channel_id, owner_id, '–ì–æ—Ç–æ–≤ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å —Ä–µ–∫–ª–∞–º—É', 
              'final_test_channel', '–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –∫–∞–Ω–∞–ª', 10000, 'accepted'))
        
        # –°–æ–∑–¥–∞–µ–º —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ
        placement_id = execute_db_query("""
            INSERT INTO offer_placements 
            (response_id, proposal_id, status, created_at)
            VALUES (?, ?, ?, CURRENT_TIMESTAMP)
        """, (response_id, response_id, 'pending_placement'))
        
        test_data = {
            'advertiser_id': advertiser_id,
            'owner_id': owner_id,
            'owner_telegram_id': 222222222,
            'channel_id': channel_id,
            'channel_username': 'final_test_channel',
            'offer_id': offer_id,
            'response_id': response_id,
            'placement_id': placement_id
        }
        
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω—ã —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ:")
        print(f"   üë§ –í–ª–∞–¥–µ–ª–µ—Ü –∫–∞–Ω–∞–ª–∞: TG_ID={test_data['owner_telegram_id']}")
        print(f"   üì∫ –ö–∞–Ω–∞–ª: @{test_data['channel_username']}")
        print(f"   üéØ –û—Ñ—Ñ–µ—Ä: ID={offer_id}")
        print(f"   üì§ –û—Ç–∫–ª–∏–∫: ID={response_id}")
        print(f"   üìç –†–∞–∑–º–µ—â–µ–Ω–∏–µ: ID={placement_id}")
        
        # ===== –¢–ï–°–¢ –ö–û–ú–ê–ù–î –ë–û–¢–ê =====
        print(f"\nü§ñ –≠–¢–ê–ü 2: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞")
        print("-" * 40)
        
        owner_tg_id = test_data['owner_telegram_id']
        
        # –¢–µ—Å—Ç 1: /my_channels
        print("1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º /my_channels:")
        channels_result = bot_extension.handle_my_channels(owner_tg_id)
        if "–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –∫–∞–Ω–∞–ª" in channels_result['text']:
            print("   ‚úÖ –ö–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç, –∫–∞–Ω–∞–ª –Ω–∞–π–¥–µ–Ω")
        else:
            print("   ‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å –∫–æ–º–∞–Ω–¥–æ–π /my_channels")
            
        # –¢–µ—Å—Ç 2: /my_proposals  
        print("2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º /my_proposals:")
        proposals_result = bot_extension.handle_my_proposals(owner_tg_id)
        if "–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç —Ä–µ–∫–ª–∞–º–∞" in proposals_result['text']:
            print("   ‚úÖ –ö–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ")
        else:
            print("   ‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å –∫–æ–º–∞–Ω–¥–æ–π /my_proposals")
        
        # ===== –¢–ï–°–¢ –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–Ø –ë–ï–ó –°–°–´–õ–ö–ò =====
        print(f"\nüì§ –≠–¢–ê–ü 3: –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –ë–ï–ó —Å—Å—ã–ª–∫–∏")
        print("-" * 40)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –¥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        before_status = execute_db_query("""
            SELECT status FROM offer_placements WHERE id = ?
        """, (placement_id,), fetch_one=True)
        print(f"üìä –°—Ç–∞—Ç—É—Å –î–û –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {before_status['status']}")
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—É /post_published
        result = bot_extension.handle_post_published(owner_tg_id)
        print(f"ü§ñ –†–µ–∑—É–ª—å—Ç–∞—Ç –∫–æ–º–∞–Ω–¥—ã:")
        
        if "–†–∞–∑–º–µ—â–µ–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ" in result['text']:
            print("   ‚úÖ –†–∞–∑–º–µ—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ!")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
            after_status = execute_db_query("""
                SELECT status, placement_start FROM offer_placements WHERE id = ?
            """, (placement_id,), fetch_one=True)
            print(f"   üìä –°—Ç–∞—Ç—É—Å –ü–û–°–õ–ï: {after_status['status']}")
            print(f"   ‚è∞ –í—Ä–µ–º—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è: {after_status['placement_start']}")
            
            if after_status['status'] == 'active':
                print("   üéâ –°—Ç–∞—Ç—É—Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ 'active'!")
            else:
                print("   ‚ùå –°—Ç–∞—Ç—É—Å –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
                
        else:
            print(f"   ‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {result['text'][:100]}...")
        
        # ===== –°–û–ó–î–ê–ù–ò–ï –í–¢–û–†–û–ì–û –†–ê–ó–ú–ï–©–ï–ù–ò–Ø –î–õ–Ø –¢–ï–°–¢–ê –° –°–°–´–õ–ö–û–ô =====
        print(f"\nüîó –≠–¢–ê–ü 4: –¢–µ—Å—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –°–û –°–°–´–õ–ö–û–ô")
        print("-" * 40)
        
        # –°–æ–∑–¥–∞–µ–º –≤—Ç–æ—Ä–æ–µ —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ –¥–ª—è —Ç–µ—Å—Ç–∞ —Å–æ —Å—Å—ã–ª–∫–æ–π
        placement_id_2 = execute_db_query("""
            INSERT INTO offer_placements 
            (response_id, proposal_id, status, created_at)
            VALUES (?, ?, ?, CURRENT_TIMESTAMP)
        """, (response_id, response_id, 'pending_placement'))
        
        print(f"üìç –°–æ–∑–¥–∞–Ω–æ –≤—Ç–æ—Ä–æ–µ —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ: ID={placement_id_2}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É —Å —Å—Å—ã–ª–∫–æ–π
        test_url = f"https://t.me/{test_data['channel_username']}/456"
        print(f"üîó –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å URL: {test_url}")
        
        result_with_link = bot_extension.handle_post_published_with_link(
            owner_tg_id, [test_url]
        )
        
        if "–†–∞–∑–º–µ—â–µ–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ" in result_with_link['text']:
            print("   ‚úÖ –†–∞–∑–º–µ—â–µ–Ω–∏–µ —Å–æ —Å—Å—ã–ª–∫–æ–π –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ!")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
            updated_placement = execute_db_query("""
                SELECT status, post_url, placement_start 
                FROM offer_placements WHERE id = ?
            """, (placement_id_2,), fetch_one=True)
            
            print(f"   üìä –°—Ç–∞—Ç—É—Å: {updated_placement['status']}")
            print(f"   üîó URL: {updated_placement['post_url']}")
            print(f"   ‚è∞ –í—Ä–µ–º—è: {updated_placement['placement_start']}")
            
            if (updated_placement['status'] == 'active' and 
                updated_placement['post_url'] == test_url):
                print("   üéâ –†–∞–∑–º–µ—â–µ–Ω–∏–µ —Å–æ —Å—Å—ã–ª–∫–æ–π —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
            else:
                print("   ‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ–º —Å–æ —Å—Å—ã–ª–∫–æ–π")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {result_with_link['text'][:100]}...")
        
        # ===== –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê =====
        print(f"\nüîç –≠–¢–ê–ü 5: –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã")
        print("-" * 40)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è
        all_placements = execute_db_query("""
            SELECT p.id, p.status, p.post_url, p.placement_start,
                   o.title as offer_title, r.status as response_status
            FROM offer_placements p
            JOIN offer_responses r ON p.response_id = r.id
            JOIN offers o ON r.offer_id = o.id
            WHERE p.id IN (?, ?)
        """, (placement_id, placement_id_2), fetch_all=True)
        
        print("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤—Å–µ—Ö —Ä–∞–∑–º–µ—â–µ–Ω–∏–π:")
        success_count = 0
        for placement in all_placements:
            print(f"   üìç –†–∞–∑–º–µ—â–µ–Ω–∏–µ {placement['id']}:")
            print(f"      üéØ –û—Ñ—Ñ–µ—Ä: {placement['offer_title']}")
            print(f"      üìä –°—Ç–∞—Ç—É—Å: {placement['status']}")
            print(f"      üîó URL: {placement['post_url'] or '–ù–µ —É–∫–∞–∑–∞–Ω'}")
            print(f"      ‚è∞ –í—Ä–µ–º—è: {placement['placement_start'] or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}")
            
            if placement['status'] == 'active':
                success_count += 1
                print(f"      ‚úÖ –£—Å–ø–µ—à–Ω–æ!")
            else:
                print(f"      ‚ùå –ü—Ä–æ–±–ª–µ–º–∞!")
            print()
        
        # ===== –ò–¢–û–ì–ò =====
        print("=" * 60)
        print("üéØ –ò–¢–û–ì–ò –§–ò–ù–ê–õ–¨–ù–û–ì–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø")
        print("=" * 60)
        print(f"‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö —Ä–∞–∑–º–µ—â–µ–Ω–∏–π: {success_count}/2")
        print(f"üìà –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: {(success_count/2)*100:.0f}%")
        
        if success_count == 2:
            print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
            print("üöÄ –ö–æ–º–∞–Ω–¥–∞ /post_published —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
            print("‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è —Ä–µ–∫–ª–∞–º—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞!")
        else:
            print(f"\n‚ö†Ô∏è  –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–∏—Å—Ç–µ–º–æ–π")
            print(f"üîß –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞")
        
        # ===== –û–ß–ò–°–¢–ö–ê =====
        print(f"\nüßπ –û–ß–ò–°–¢–ö–ê –¢–ï–°–¢–û–í–´–• –î–ê–ù–ù–´–•")
        print("-" * 40)
        
        # –£–¥–∞–ª—è–µ–º –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
        execute_db_query("DELETE FROM offer_placements WHERE id IN (?, ?)", (placement_id, placement_id_2))
        execute_db_query("DELETE FROM offer_responses WHERE id = ?", (response_id,))
        execute_db_query("DELETE FROM offers WHERE id = ?", (offer_id,))
        execute_db_query("DELETE FROM channels WHERE id = ?", (channel_id,))
        execute_db_query("DELETE FROM users WHERE id IN (?, ?)", (advertiser_id, owner_id))
        
        print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã")
        
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    final_system_test()